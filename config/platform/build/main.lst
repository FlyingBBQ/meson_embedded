ARM GAS  /tmp/ccEgivj9.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.MX_GPIO_Init,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	MX_GPIO_Init:
  25              	.LFB150:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/main.c    ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/main.c    ****   * the License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                             www.st.com/SLA0044
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "string.h"
  24:Src/main.c    **** #include "cmsis_os.h"
  25:Src/main.c    **** 
  26:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  27:Src/main.c    **** /* USER CODE BEGIN Includes */
  28:Src/main.c    **** #include "stm32h7xx_nucleo_144.h"
  29:Src/main.c    **** 
  30:Src/main.c    **** /* USER CODE END Includes */
  31:Src/main.c    **** 
  32:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /tmp/ccEgivj9.s 			page 2


  33:Src/main.c    **** /* USER CODE BEGIN PTD */
  34:Src/main.c    **** 
  35:Src/main.c    **** /* USER CODE END PTD */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  38:Src/main.c    **** /* USER CODE BEGIN PD */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* USER CODE END PD */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  43:Src/main.c    **** /* USER CODE BEGIN PM */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE END PM */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  48:Src/main.c    **** #if defined ( __ICCARM__ ) /*!< IAR Compiler */
  49:Src/main.c    **** 
  50:Src/main.c    **** #pragma location=0x30040000
  51:Src/main.c    **** ETH_DMADescTypeDef  DMARxDscrTab[ETH_RX_DESC_CNT]; /* Ethernet Rx DMA Descriptors */
  52:Src/main.c    **** #pragma location=0x30040060
  53:Src/main.c    **** ETH_DMADescTypeDef  DMATxDscrTab[ETH_TX_DESC_CNT]; /* Ethernet Tx DMA Descriptors */
  54:Src/main.c    **** #pragma location=0x30040200
  55:Src/main.c    **** uint8_t Rx_Buff[ETH_RX_DESC_CNT][ETH_MAX_PACKET_SIZE]; /* Ethernet Receive Buffers */
  56:Src/main.c    **** 
  57:Src/main.c    **** #elif defined ( __CC_ARM )  /* MDK ARM Compiler */
  58:Src/main.c    **** 
  59:Src/main.c    **** __attribute__((at(0x30040000))) ETH_DMADescTypeDef  DMARxDscrTab[ETH_RX_DESC_CNT]; /* Ethernet Rx D
  60:Src/main.c    **** __attribute__((at(0x30040060))) ETH_DMADescTypeDef  DMATxDscrTab[ETH_TX_DESC_CNT]; /* Ethernet Tx D
  61:Src/main.c    **** __attribute__((at(0x30040200))) uint8_t Rx_Buff[ETH_RX_DESC_CNT][ETH_MAX_PACKET_SIZE]; /* Ethernet 
  62:Src/main.c    **** 
  63:Src/main.c    **** #elif defined ( __GNUC__ ) /* GNU Compiler */ 
  64:Src/main.c    **** 
  65:Src/main.c    **** ETH_DMADescTypeDef DMARxDscrTab[ETH_RX_DESC_CNT] __attribute__((section(".RxDecripSection"))); /* E
  66:Src/main.c    **** ETH_DMADescTypeDef DMATxDscrTab[ETH_TX_DESC_CNT] __attribute__((section(".TxDecripSection")));   /*
  67:Src/main.c    **** uint8_t Rx_Buff[ETH_RX_DESC_CNT][ETH_MAX_PACKET_SIZE] __attribute__((section(".RxArraySection"))); 
  68:Src/main.c    **** 
  69:Src/main.c    **** #endif
  70:Src/main.c    **** 
  71:Src/main.c    **** ETH_TxPacketConfig TxConfig; 
  72:Src/main.c    **** 
  73:Src/main.c    **** ETH_HandleTypeDef heth;
  74:Src/main.c    **** 
  75:Src/main.c    **** UART_HandleTypeDef huart3;
  76:Src/main.c    **** 
  77:Src/main.c    **** PCD_HandleTypeDef hpcd_USB_OTG_FS;
  78:Src/main.c    **** 
  79:Src/main.c    **** osThreadId_t defaultTaskHandle;
  80:Src/main.c    **** /* USER CODE BEGIN PV */
  81:Src/main.c    **** 
  82:Src/main.c    **** /* USER CODE END PV */
  83:Src/main.c    **** 
  84:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  85:Src/main.c    **** void SystemClock_Config(void);
  86:Src/main.c    **** static void MX_GPIO_Init(void);
  87:Src/main.c    **** static void MX_ETH_Init(void);
  88:Src/main.c    **** static void MX_USART3_UART_Init(void);
  89:Src/main.c    **** static void MX_USB_OTG_FS_PCD_Init(void);
ARM GAS  /tmp/ccEgivj9.s 			page 3


  90:Src/main.c    **** void StartDefaultTask(void *argument);
  91:Src/main.c    **** 
  92:Src/main.c    **** /* USER CODE BEGIN PFP */
  93:Src/main.c    **** 
  94:Src/main.c    **** /* USER CODE END PFP */
  95:Src/main.c    **** 
  96:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  97:Src/main.c    **** /* USER CODE BEGIN 0 */
  98:Src/main.c    **** 
  99:Src/main.c    **** /* USER CODE END 0 */
 100:Src/main.c    **** 
 101:Src/main.c    **** /**
 102:Src/main.c    ****   * @brief  The application entry point.
 103:Src/main.c    ****   * @retval int
 104:Src/main.c    ****   */
 105:Src/main.c    **** int main(void)
 106:Src/main.c    **** {
 107:Src/main.c    ****   /* USER CODE BEGIN 1 */
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* USER CODE END 1 */
 110:Src/main.c    ****   
 111:Src/main.c    **** 
 112:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 113:Src/main.c    **** 
 114:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 115:Src/main.c    ****   HAL_Init();
 116:Src/main.c    **** 
 117:Src/main.c    ****   /* USER CODE BEGIN Init */
 118:Src/main.c    **** 
 119:Src/main.c    ****   /* USER CODE END Init */
 120:Src/main.c    **** 
 121:Src/main.c    ****   /* Configure the system clock */
 122:Src/main.c    ****   SystemClock_Config();
 123:Src/main.c    **** 
 124:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 125:Src/main.c    **** 
 126:Src/main.c    ****   /* USER CODE END SysInit */
 127:Src/main.c    **** 
 128:Src/main.c    ****   /* Initialize all configured peripherals */
 129:Src/main.c    ****   MX_GPIO_Init();
 130:Src/main.c    ****   MX_ETH_Init();
 131:Src/main.c    ****   MX_USART3_UART_Init();
 132:Src/main.c    ****   MX_USB_OTG_FS_PCD_Init();
 133:Src/main.c    ****   /* USER CODE BEGIN 2 */
 134:Src/main.c    ****   BSP_LED_Init(LED_GREEN);
 135:Src/main.c    **** 
 136:Src/main.c    ****   /* USER CODE END 2 */
 137:Src/main.c    **** 
 138:Src/main.c    ****   osKernelInitialize();
 139:Src/main.c    **** 
 140:Src/main.c    ****   /* USER CODE BEGIN RTOS_MUTEX */
 141:Src/main.c    ****   /* add mutexes, ... */
 142:Src/main.c    ****   /* USER CODE END RTOS_MUTEX */
 143:Src/main.c    **** 
 144:Src/main.c    ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 145:Src/main.c    ****   /* add semaphores, ... */
 146:Src/main.c    ****   /* USER CODE END RTOS_SEMAPHORES */
ARM GAS  /tmp/ccEgivj9.s 			page 4


 147:Src/main.c    **** 
 148:Src/main.c    ****   /* USER CODE BEGIN RTOS_TIMERS */
 149:Src/main.c    ****   /* start timers, add new ones, ... */
 150:Src/main.c    ****   /* USER CODE END RTOS_TIMERS */
 151:Src/main.c    **** 
 152:Src/main.c    ****   /* USER CODE BEGIN RTOS_QUEUES */
 153:Src/main.c    ****   /* add queues, ... */
 154:Src/main.c    ****   /* USER CODE END RTOS_QUEUES */
 155:Src/main.c    **** 
 156:Src/main.c    ****   /* Create the thread(s) */
 157:Src/main.c    ****   /* definition and creation of defaultTask */
 158:Src/main.c    ****   const osThreadAttr_t defaultTask_attributes = {
 159:Src/main.c    ****     .name = "defaultTask",
 160:Src/main.c    ****     .priority = (osPriority_t) osPriorityNormal,
 161:Src/main.c    ****     .stack_size = 128
 162:Src/main.c    ****   };
 163:Src/main.c    ****   defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 164:Src/main.c    **** 
 165:Src/main.c    ****   /* USER CODE BEGIN RTOS_THREADS */
 166:Src/main.c    ****   /* add threads, ... */
 167:Src/main.c    ****   /* USER CODE END RTOS_THREADS */
 168:Src/main.c    **** 
 169:Src/main.c    ****   /* Start scheduler */
 170:Src/main.c    ****   osKernelStart();
 171:Src/main.c    ****   
 172:Src/main.c    ****   /* We should never get here as control is now taken by the scheduler */
 173:Src/main.c    **** 
 174:Src/main.c    ****   /* Infinite loop */
 175:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 176:Src/main.c    ****   while (1)
 177:Src/main.c    ****   {
 178:Src/main.c    ****     /* USER CODE END WHILE */
 179:Src/main.c    **** 
 180:Src/main.c    ****     /* USER CODE BEGIN 3 */
 181:Src/main.c    ****   }
 182:Src/main.c    ****   /* USER CODE END 3 */
 183:Src/main.c    **** }
 184:Src/main.c    **** 
 185:Src/main.c    **** /**
 186:Src/main.c    ****   * @brief System Clock Configuration
 187:Src/main.c    ****   * @retval None
 188:Src/main.c    ****   */
 189:Src/main.c    **** void SystemClock_Config(void)
 190:Src/main.c    **** {
 191:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 192:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 193:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 194:Src/main.c    **** 
 195:Src/main.c    ****   /** Supply configuration update enable 
 196:Src/main.c    ****   */
 197:Src/main.c    ****   HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 198:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 199:Src/main.c    ****   */
 200:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 201:Src/main.c    **** 
 202:Src/main.c    ****   while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 203:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
ARM GAS  /tmp/ccEgivj9.s 			page 5


 204:Src/main.c    ****   */
 205:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSE;
 206:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 207:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 208:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 209:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 210:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 211:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 1;
 212:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 24;
 213:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = 2;
 214:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 215:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = 2;
 216:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 217:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 218:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 219:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 220:Src/main.c    ****   {
 221:Src/main.c    ****     Error_Handler();
 222:Src/main.c    ****   }
 223:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 224:Src/main.c    ****   */
 225:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 226:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 227:Src/main.c    ****                               |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
 228:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 229:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 230:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV1;
 231:Src/main.c    ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV1;
 232:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV1;
 233:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV1;
 234:Src/main.c    ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV1;
 235:Src/main.c    **** 
 236:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 237:Src/main.c    ****   {
 238:Src/main.c    ****     Error_Handler();
 239:Src/main.c    ****   }
 240:Src/main.c    ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART3|RCC_PERIPHCLK_USB;
 241:Src/main.c    ****   PeriphClkInitStruct.Usart234578ClockSelection = RCC_USART234578CLKSOURCE_D2PCLK1;
 242:Src/main.c    ****   PeriphClkInitStruct.UsbClockSelection = RCC_USBCLKSOURCE_PLL;
 243:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 244:Src/main.c    ****   {
 245:Src/main.c    ****     Error_Handler();
 246:Src/main.c    ****   }
 247:Src/main.c    ****   /** Enable USB Voltage detector 
 248:Src/main.c    ****   */
 249:Src/main.c    ****   HAL_PWREx_EnableUSBVoltageDetector();
 250:Src/main.c    **** }
 251:Src/main.c    **** 
 252:Src/main.c    **** /**
 253:Src/main.c    ****   * @brief ETH Initialization Function
 254:Src/main.c    ****   * @param None
 255:Src/main.c    ****   * @retval None
 256:Src/main.c    ****   */
 257:Src/main.c    **** static void MX_ETH_Init(void)
 258:Src/main.c    **** {
 259:Src/main.c    **** 
 260:Src/main.c    ****   /* USER CODE BEGIN ETH_Init 0 */
ARM GAS  /tmp/ccEgivj9.s 			page 6


 261:Src/main.c    **** 
 262:Src/main.c    ****   /* USER CODE END ETH_Init 0 */
 263:Src/main.c    **** 
 264:Src/main.c    ****    uint8_t MACAddr[6] ;
 265:Src/main.c    **** 
 266:Src/main.c    ****   /* USER CODE BEGIN ETH_Init 1 */
 267:Src/main.c    **** 
 268:Src/main.c    ****   /* USER CODE END ETH_Init 1 */
 269:Src/main.c    ****   heth.Instance = ETH;
 270:Src/main.c    ****   MACAddr[0] = 0x00;
 271:Src/main.c    ****   MACAddr[1] = 0x80;
 272:Src/main.c    ****   MACAddr[2] = 0xE1;
 273:Src/main.c    ****   MACAddr[3] = 0x00;
 274:Src/main.c    ****   MACAddr[4] = 0x00;
 275:Src/main.c    ****   MACAddr[5] = 0x00;
 276:Src/main.c    ****   heth.Init.MACAddr = &MACAddr[0];
 277:Src/main.c    ****   heth.Init.MediaInterface = HAL_ETH_RMII_MODE;
 278:Src/main.c    ****   heth.Init.TxDesc = DMATxDscrTab;
 279:Src/main.c    ****   heth.Init.RxDesc = DMARxDscrTab;
 280:Src/main.c    ****   heth.Init.RxBuffLen = 1524;
 281:Src/main.c    **** 
 282:Src/main.c    ****   /* USER CODE BEGIN MACADDRESS */
 283:Src/main.c    ****     
 284:Src/main.c    ****   /* USER CODE END MACADDRESS */
 285:Src/main.c    **** 
 286:Src/main.c    ****   if (HAL_ETH_Init(&heth) != HAL_OK)
 287:Src/main.c    ****   {
 288:Src/main.c    ****     Error_Handler();
 289:Src/main.c    ****   }
 290:Src/main.c    **** 
 291:Src/main.c    ****   memset(&TxConfig, 0 , sizeof(ETH_TxPacketConfig));
 292:Src/main.c    ****   TxConfig.Attributes = ETH_TX_PACKETS_FEATURES_CSUM | ETH_TX_PACKETS_FEATURES_CRCPAD;
 293:Src/main.c    ****   TxConfig.ChecksumCtrl = ETH_CHECKSUM_IPHDR_PAYLOAD_INSERT_PHDR_CALC;
 294:Src/main.c    ****   TxConfig.CRCPadCtrl = ETH_CRC_PAD_INSERT;
 295:Src/main.c    ****   /* USER CODE BEGIN ETH_Init 2 */
 296:Src/main.c    **** 
 297:Src/main.c    ****   /* USER CODE END ETH_Init 2 */
 298:Src/main.c    **** 
 299:Src/main.c    **** }
 300:Src/main.c    **** 
 301:Src/main.c    **** /**
 302:Src/main.c    ****   * @brief USART3 Initialization Function
 303:Src/main.c    ****   * @param None
 304:Src/main.c    ****   * @retval None
 305:Src/main.c    ****   */
 306:Src/main.c    **** static void MX_USART3_UART_Init(void)
 307:Src/main.c    **** {
 308:Src/main.c    **** 
 309:Src/main.c    ****   /* USER CODE BEGIN USART3_Init 0 */
 310:Src/main.c    **** 
 311:Src/main.c    ****   /* USER CODE END USART3_Init 0 */
 312:Src/main.c    **** 
 313:Src/main.c    ****   /* USER CODE BEGIN USART3_Init 1 */
 314:Src/main.c    **** 
 315:Src/main.c    ****   /* USER CODE END USART3_Init 1 */
 316:Src/main.c    ****   huart3.Instance = USART3;
 317:Src/main.c    ****   huart3.Init.BaudRate = 115200;
ARM GAS  /tmp/ccEgivj9.s 			page 7


 318:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 319:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 320:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 321:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 322:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 323:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 324:Src/main.c    ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 325:Src/main.c    ****   huart3.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 326:Src/main.c    ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 327:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 328:Src/main.c    ****   {
 329:Src/main.c    ****     Error_Handler();
 330:Src/main.c    ****   }
 331:Src/main.c    ****   if (HAL_UARTEx_SetTxFifoThreshold(&huart3, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 332:Src/main.c    ****   {
 333:Src/main.c    ****     Error_Handler();
 334:Src/main.c    ****   }
 335:Src/main.c    ****   if (HAL_UARTEx_SetRxFifoThreshold(&huart3, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 336:Src/main.c    ****   {
 337:Src/main.c    ****     Error_Handler();
 338:Src/main.c    ****   }
 339:Src/main.c    ****   if (HAL_UARTEx_DisableFifoMode(&huart3) != HAL_OK)
 340:Src/main.c    ****   {
 341:Src/main.c    ****     Error_Handler();
 342:Src/main.c    ****   }
 343:Src/main.c    ****   /* USER CODE BEGIN USART3_Init 2 */
 344:Src/main.c    **** 
 345:Src/main.c    ****   /* USER CODE END USART3_Init 2 */
 346:Src/main.c    **** 
 347:Src/main.c    **** }
 348:Src/main.c    **** 
 349:Src/main.c    **** /**
 350:Src/main.c    ****   * @brief USB_OTG_FS Initialization Function
 351:Src/main.c    ****   * @param None
 352:Src/main.c    ****   * @retval None
 353:Src/main.c    ****   */
 354:Src/main.c    **** static void MX_USB_OTG_FS_PCD_Init(void)
 355:Src/main.c    **** {
 356:Src/main.c    **** 
 357:Src/main.c    ****   /* USER CODE BEGIN USB_OTG_FS_Init 0 */
 358:Src/main.c    **** 
 359:Src/main.c    ****   /* USER CODE END USB_OTG_FS_Init 0 */
 360:Src/main.c    **** 
 361:Src/main.c    ****   /* USER CODE BEGIN USB_OTG_FS_Init 1 */
 362:Src/main.c    **** 
 363:Src/main.c    ****   /* USER CODE END USB_OTG_FS_Init 1 */
 364:Src/main.c    ****   hpcd_USB_OTG_FS.Instance = USB_OTG_FS;
 365:Src/main.c    ****   hpcd_USB_OTG_FS.Init.dev_endpoints = 9;
 366:Src/main.c    ****   hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
 367:Src/main.c    ****   hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 368:Src/main.c    ****   hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 369:Src/main.c    ****   hpcd_USB_OTG_FS.Init.Sof_enable = ENABLE;
 370:Src/main.c    ****   hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 371:Src/main.c    ****   hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 372:Src/main.c    ****   hpcd_USB_OTG_FS.Init.battery_charging_enable = ENABLE;
 373:Src/main.c    ****   hpcd_USB_OTG_FS.Init.vbus_sensing_enable = ENABLE;
 374:Src/main.c    ****   hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
ARM GAS  /tmp/ccEgivj9.s 			page 8


 375:Src/main.c    ****   if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 376:Src/main.c    ****   {
 377:Src/main.c    ****     Error_Handler();
 378:Src/main.c    ****   }
 379:Src/main.c    ****   /* USER CODE BEGIN USB_OTG_FS_Init 2 */
 380:Src/main.c    **** 
 381:Src/main.c    ****   /* USER CODE END USB_OTG_FS_Init 2 */
 382:Src/main.c    **** 
 383:Src/main.c    **** }
 384:Src/main.c    **** 
 385:Src/main.c    **** /**
 386:Src/main.c    ****   * @brief GPIO Initialization Function
 387:Src/main.c    ****   * @param None
 388:Src/main.c    ****   * @retval None
 389:Src/main.c    ****   */
 390:Src/main.c    **** static void MX_GPIO_Init(void)
 391:Src/main.c    **** {
  27              		.loc 1 391 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 48
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 24
  34              		.cfi_offset 4, -24
  35              		.cfi_offset 5, -20
  36              		.cfi_offset 6, -16
  37              		.cfi_offset 7, -12
  38              		.cfi_offset 8, -8
  39              		.cfi_offset 14, -4
  40 0004 8CB0     		sub	sp, sp, #48
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 72
 392:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  43              		.loc 1 392 3 view .LVU1
  44              		.loc 1 392 20 is_stmt 0 view .LVU2
  45 0006 0024     		movs	r4, #0
  46 0008 0794     		str	r4, [sp, #28]
  47 000a 0894     		str	r4, [sp, #32]
  48 000c 0994     		str	r4, [sp, #36]
  49 000e 0A94     		str	r4, [sp, #40]
  50 0010 0B94     		str	r4, [sp, #44]
 393:Src/main.c    **** 
 394:Src/main.c    ****   /* GPIO Ports Clock Enable */
 395:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  51              		.loc 1 395 3 is_stmt 1 view .LVU3
  52              	.LBB2:
  53              		.loc 1 395 3 view .LVU4
  54              		.loc 1 395 3 view .LVU5
  55 0012 4E4B     		ldr	r3, .L3
  56 0014 D3F8E020 		ldr	r2, [r3, #224]
  57 0018 42F00402 		orr	r2, r2, #4
  58 001c C3F8E020 		str	r2, [r3, #224]
  59              		.loc 1 395 3 view .LVU6
  60 0020 D3F8E020 		ldr	r2, [r3, #224]
  61 0024 02F00402 		and	r2, r2, #4
  62 0028 0092     		str	r2, [sp]
ARM GAS  /tmp/ccEgivj9.s 			page 9


  63              		.loc 1 395 3 view .LVU7
  64 002a 009A     		ldr	r2, [sp]
  65              	.LBE2:
 396:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  66              		.loc 1 396 3 view .LVU8
  67              	.LBB3:
  68              		.loc 1 396 3 view .LVU9
  69              		.loc 1 396 3 view .LVU10
  70 002c D3F8E020 		ldr	r2, [r3, #224]
  71 0030 42F08002 		orr	r2, r2, #128
  72 0034 C3F8E020 		str	r2, [r3, #224]
  73              		.loc 1 396 3 view .LVU11
  74 0038 D3F8E020 		ldr	r2, [r3, #224]
  75 003c 02F08002 		and	r2, r2, #128
  76 0040 0192     		str	r2, [sp, #4]
  77              		.loc 1 396 3 view .LVU12
  78 0042 019A     		ldr	r2, [sp, #4]
  79              	.LBE3:
 397:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  80              		.loc 1 397 3 view .LVU13
  81              	.LBB4:
  82              		.loc 1 397 3 view .LVU14
  83              		.loc 1 397 3 view .LVU15
  84 0044 D3F8E020 		ldr	r2, [r3, #224]
  85 0048 42F00102 		orr	r2, r2, #1
  86 004c C3F8E020 		str	r2, [r3, #224]
  87              		.loc 1 397 3 view .LVU16
  88 0050 D3F8E020 		ldr	r2, [r3, #224]
  89 0054 02F00102 		and	r2, r2, #1
  90 0058 0292     		str	r2, [sp, #8]
  91              		.loc 1 397 3 view .LVU17
  92 005a 029A     		ldr	r2, [sp, #8]
  93              	.LBE4:
 398:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  94              		.loc 1 398 3 view .LVU18
  95              	.LBB5:
  96              		.loc 1 398 3 view .LVU19
  97              		.loc 1 398 3 view .LVU20
  98 005c D3F8E020 		ldr	r2, [r3, #224]
  99 0060 42F00202 		orr	r2, r2, #2
 100 0064 C3F8E020 		str	r2, [r3, #224]
 101              		.loc 1 398 3 view .LVU21
 102 0068 D3F8E020 		ldr	r2, [r3, #224]
 103 006c 02F00202 		and	r2, r2, #2
 104 0070 0392     		str	r2, [sp, #12]
 105              		.loc 1 398 3 view .LVU22
 106 0072 039A     		ldr	r2, [sp, #12]
 107              	.LBE5:
 399:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 108              		.loc 1 399 3 view .LVU23
 109              	.LBB6:
 110              		.loc 1 399 3 view .LVU24
 111              		.loc 1 399 3 view .LVU25
 112 0074 D3F8E020 		ldr	r2, [r3, #224]
 113 0078 42F00802 		orr	r2, r2, #8
 114 007c C3F8E020 		str	r2, [r3, #224]
 115              		.loc 1 399 3 view .LVU26
ARM GAS  /tmp/ccEgivj9.s 			page 10


 116 0080 D3F8E020 		ldr	r2, [r3, #224]
 117 0084 02F00802 		and	r2, r2, #8
 118 0088 0492     		str	r2, [sp, #16]
 119              		.loc 1 399 3 view .LVU27
 120 008a 049A     		ldr	r2, [sp, #16]
 121              	.LBE6:
 400:Src/main.c    ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 122              		.loc 1 400 3 view .LVU28
 123              	.LBB7:
 124              		.loc 1 400 3 view .LVU29
 125              		.loc 1 400 3 view .LVU30
 126 008c D3F8E020 		ldr	r2, [r3, #224]
 127 0090 42F04002 		orr	r2, r2, #64
 128 0094 C3F8E020 		str	r2, [r3, #224]
 129              		.loc 1 400 3 view .LVU31
 130 0098 D3F8E020 		ldr	r2, [r3, #224]
 131 009c 02F04002 		and	r2, r2, #64
 132 00a0 0592     		str	r2, [sp, #20]
 133              		.loc 1 400 3 view .LVU32
 134 00a2 059A     		ldr	r2, [sp, #20]
 135              	.LBE7:
 401:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 136              		.loc 1 401 3 view .LVU33
 137              	.LBB8:
 138              		.loc 1 401 3 view .LVU34
 139              		.loc 1 401 3 view .LVU35
 140 00a4 D3F8E020 		ldr	r2, [r3, #224]
 141 00a8 42F01002 		orr	r2, r2, #16
 142 00ac C3F8E020 		str	r2, [r3, #224]
 143              		.loc 1 401 3 view .LVU36
 144 00b0 D3F8E030 		ldr	r3, [r3, #224]
 145 00b4 03F01003 		and	r3, r3, #16
 146 00b8 0693     		str	r3, [sp, #24]
 147              		.loc 1 401 3 view .LVU37
 148 00ba 069B     		ldr	r3, [sp, #24]
 149              	.LBE8:
 402:Src/main.c    **** 
 403:Src/main.c    ****   /*Configure GPIO pin Output Level */
 404:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, LD1_Pin|LD3_Pin, GPIO_PIN_RESET);
 150              		.loc 1 404 3 view .LVU38
 151 00bc DFF8A480 		ldr	r8, .L3+24
 152 00c0 2246     		mov	r2, r4
 153 00c2 44F20101 		movw	r1, #16385
 154 00c6 4046     		mov	r0, r8
 155 00c8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 156              	.LVL0:
 405:Src/main.c    **** 
 406:Src/main.c    ****   /*Configure GPIO pin Output Level */
 407:Src/main.c    ****   HAL_GPIO_WritePin(USB_OTG_FS_PWR_EN_GPIO_Port, USB_OTG_FS_PWR_EN_Pin, GPIO_PIN_RESET);
 157              		.loc 1 407 3 view .LVU39
 158 00cc 204F     		ldr	r7, .L3+4
 159 00ce 2246     		mov	r2, r4
 160 00d0 4FF48061 		mov	r1, #1024
 161 00d4 3846     		mov	r0, r7
 162 00d6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 163              	.LVL1:
 408:Src/main.c    **** 
ARM GAS  /tmp/ccEgivj9.s 			page 11


 409:Src/main.c    ****   /*Configure GPIO pin Output Level */
 410:Src/main.c    ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 164              		.loc 1 410 3 view .LVU40
 165 00da 1E4E     		ldr	r6, .L3+8
 166 00dc 2246     		mov	r2, r4
 167 00de 0221     		movs	r1, #2
 168 00e0 3046     		mov	r0, r6
 169 00e2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 170              	.LVL2:
 411:Src/main.c    **** 
 412:Src/main.c    ****   /*Configure GPIO pin : B1_Pin */
 413:Src/main.c    ****   GPIO_InitStruct.Pin = B1_Pin;
 171              		.loc 1 413 3 view .LVU41
 172              		.loc 1 413 23 is_stmt 0 view .LVU42
 173 00e6 4FF40053 		mov	r3, #8192
 174 00ea 0793     		str	r3, [sp, #28]
 414:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 175              		.loc 1 414 3 is_stmt 1 view .LVU43
 176              		.loc 1 414 24 is_stmt 0 view .LVU44
 177 00ec 0894     		str	r4, [sp, #32]
 415:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 178              		.loc 1 415 3 is_stmt 1 view .LVU45
 179              		.loc 1 415 24 is_stmt 0 view .LVU46
 180 00ee 0994     		str	r4, [sp, #36]
 416:Src/main.c    ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 181              		.loc 1 416 3 is_stmt 1 view .LVU47
 182 00f0 07A9     		add	r1, sp, #28
 183 00f2 1948     		ldr	r0, .L3+12
 184 00f4 FFF7FEFF 		bl	HAL_GPIO_Init
 185              	.LVL3:
 417:Src/main.c    **** 
 418:Src/main.c    ****   /*Configure GPIO pins : LD1_Pin LD3_Pin */
 419:Src/main.c    ****   GPIO_InitStruct.Pin = LD1_Pin|LD3_Pin;
 186              		.loc 1 419 3 view .LVU48
 187              		.loc 1 419 23 is_stmt 0 view .LVU49
 188 00f8 44F20103 		movw	r3, #16385
 189 00fc 0793     		str	r3, [sp, #28]
 420:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 190              		.loc 1 420 3 is_stmt 1 view .LVU50
 191              		.loc 1 420 24 is_stmt 0 view .LVU51
 192 00fe 0125     		movs	r5, #1
 193 0100 0895     		str	r5, [sp, #32]
 421:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 194              		.loc 1 421 3 is_stmt 1 view .LVU52
 195              		.loc 1 421 24 is_stmt 0 view .LVU53
 196 0102 0994     		str	r4, [sp, #36]
 422:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 197              		.loc 1 422 3 is_stmt 1 view .LVU54
 198              		.loc 1 422 25 is_stmt 0 view .LVU55
 199 0104 0A94     		str	r4, [sp, #40]
 423:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 200              		.loc 1 423 3 is_stmt 1 view .LVU56
 201 0106 07A9     		add	r1, sp, #28
 202 0108 4046     		mov	r0, r8
 203 010a FFF7FEFF 		bl	HAL_GPIO_Init
 204              	.LVL4:
 424:Src/main.c    **** 
ARM GAS  /tmp/ccEgivj9.s 			page 12


 425:Src/main.c    ****   /*Configure GPIO pin : USB_OTG_FS_PWR_EN_Pin */
 426:Src/main.c    ****   GPIO_InitStruct.Pin = USB_OTG_FS_PWR_EN_Pin;
 205              		.loc 1 426 3 view .LVU57
 206              		.loc 1 426 23 is_stmt 0 view .LVU58
 207 010e 4FF48063 		mov	r3, #1024
 208 0112 0793     		str	r3, [sp, #28]
 427:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 209              		.loc 1 427 3 is_stmt 1 view .LVU59
 210              		.loc 1 427 24 is_stmt 0 view .LVU60
 211 0114 0895     		str	r5, [sp, #32]
 428:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 212              		.loc 1 428 3 is_stmt 1 view .LVU61
 213              		.loc 1 428 24 is_stmt 0 view .LVU62
 214 0116 0994     		str	r4, [sp, #36]
 429:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 215              		.loc 1 429 3 is_stmt 1 view .LVU63
 216              		.loc 1 429 25 is_stmt 0 view .LVU64
 217 0118 0A94     		str	r4, [sp, #40]
 430:Src/main.c    ****   HAL_GPIO_Init(USB_OTG_FS_PWR_EN_GPIO_Port, &GPIO_InitStruct);
 218              		.loc 1 430 3 is_stmt 1 view .LVU65
 219 011a 07A9     		add	r1, sp, #28
 220 011c 3846     		mov	r0, r7
 221 011e FFF7FEFF 		bl	HAL_GPIO_Init
 222              	.LVL5:
 431:Src/main.c    **** 
 432:Src/main.c    ****   /*Configure GPIO pin : USB_OTG_FS_OVCR_Pin */
 433:Src/main.c    ****   GPIO_InitStruct.Pin = USB_OTG_FS_OVCR_Pin;
 223              		.loc 1 433 3 view .LVU66
 224              		.loc 1 433 23 is_stmt 0 view .LVU67
 225 0122 8023     		movs	r3, #128
 226 0124 0793     		str	r3, [sp, #28]
 434:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 227              		.loc 1 434 3 is_stmt 1 view .LVU68
 228              		.loc 1 434 24 is_stmt 0 view .LVU69
 229 0126 0D4B     		ldr	r3, .L3+16
 230 0128 0893     		str	r3, [sp, #32]
 435:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 231              		.loc 1 435 3 is_stmt 1 view .LVU70
 232              		.loc 1 435 24 is_stmt 0 view .LVU71
 233 012a 0994     		str	r4, [sp, #36]
 436:Src/main.c    ****   HAL_GPIO_Init(USB_OTG_FS_OVCR_GPIO_Port, &GPIO_InitStruct);
 234              		.loc 1 436 3 is_stmt 1 view .LVU72
 235 012c 07A9     		add	r1, sp, #28
 236 012e 0C48     		ldr	r0, .L3+20
 237 0130 FFF7FEFF 		bl	HAL_GPIO_Init
 238              	.LVL6:
 437:Src/main.c    **** 
 438:Src/main.c    ****   /*Configure GPIO pin : LD2_Pin */
 439:Src/main.c    ****   GPIO_InitStruct.Pin = LD2_Pin;
 239              		.loc 1 439 3 view .LVU73
 240              		.loc 1 439 23 is_stmt 0 view .LVU74
 241 0134 0223     		movs	r3, #2
 242 0136 0793     		str	r3, [sp, #28]
 440:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 243              		.loc 1 440 3 is_stmt 1 view .LVU75
 244              		.loc 1 440 24 is_stmt 0 view .LVU76
 245 0138 0895     		str	r5, [sp, #32]
ARM GAS  /tmp/ccEgivj9.s 			page 13


 441:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 246              		.loc 1 441 3 is_stmt 1 view .LVU77
 247              		.loc 1 441 24 is_stmt 0 view .LVU78
 248 013a 0994     		str	r4, [sp, #36]
 442:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 249              		.loc 1 442 3 is_stmt 1 view .LVU79
 250              		.loc 1 442 25 is_stmt 0 view .LVU80
 251 013c 0A94     		str	r4, [sp, #40]
 443:Src/main.c    ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 252              		.loc 1 443 3 is_stmt 1 view .LVU81
 253 013e 07A9     		add	r1, sp, #28
 254 0140 3046     		mov	r0, r6
 255 0142 FFF7FEFF 		bl	HAL_GPIO_Init
 256              	.LVL7:
 444:Src/main.c    **** 
 445:Src/main.c    **** }
 257              		.loc 1 445 1 is_stmt 0 view .LVU82
 258 0146 0CB0     		add	sp, sp, #48
 259              	.LCFI2:
 260              		.cfi_def_cfa_offset 24
 261              		@ sp needed
 262 0148 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 263              	.L4:
 264              		.align	2
 265              	.L3:
 266 014c 00440258 		.word	1476543488
 267 0150 000C0258 		.word	1476529152
 268 0154 00100258 		.word	1476530176
 269 0158 00080258 		.word	1476528128
 270 015c 00001111 		.word	286326784
 271 0160 00180258 		.word	1476532224
 272 0164 00040258 		.word	1476527104
 273              		.cfi_endproc
 274              	.LFE150:
 276              		.section	.text.MX_ETH_Init,"ax",%progbits
 277              		.align	1
 278              		.syntax unified
 279              		.thumb
 280              		.thumb_func
 281              		.fpu fpv5-d16
 283              	MX_ETH_Init:
 284              	.LFB147:
 258:Src/main.c    **** 
 285              		.loc 1 258 1 is_stmt 1 view -0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 8
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289 0000 30B5     		push	{r4, r5, lr}
 290              	.LCFI3:
 291              		.cfi_def_cfa_offset 12
 292              		.cfi_offset 4, -12
 293              		.cfi_offset 5, -8
 294              		.cfi_offset 14, -4
 295 0002 83B0     		sub	sp, sp, #12
 296              	.LCFI4:
 297              		.cfi_def_cfa_offset 24
 264:Src/main.c    **** 
ARM GAS  /tmp/ccEgivj9.s 			page 14


 298              		.loc 1 264 4 view .LVU84
 269:Src/main.c    ****   MACAddr[0] = 0x00;
 299              		.loc 1 269 3 view .LVU85
 269:Src/main.c    ****   MACAddr[0] = 0x00;
 300              		.loc 1 269 17 is_stmt 0 view .LVU86
 301 0004 1648     		ldr	r0, .L7
 302 0006 174B     		ldr	r3, .L7+4
 303 0008 0360     		str	r3, [r0]
 270:Src/main.c    ****   MACAddr[1] = 0x80;
 304              		.loc 1 270 3 is_stmt 1 view .LVU87
 270:Src/main.c    ****   MACAddr[1] = 0x80;
 305              		.loc 1 270 14 is_stmt 0 view .LVU88
 306 000a 0024     		movs	r4, #0
 307 000c 8DF80040 		strb	r4, [sp]
 271:Src/main.c    ****   MACAddr[2] = 0xE1;
 308              		.loc 1 271 3 is_stmt 1 view .LVU89
 271:Src/main.c    ****   MACAddr[2] = 0xE1;
 309              		.loc 1 271 14 is_stmt 0 view .LVU90
 310 0010 8023     		movs	r3, #128
 311 0012 8DF80130 		strb	r3, [sp, #1]
 272:Src/main.c    ****   MACAddr[3] = 0x00;
 312              		.loc 1 272 3 is_stmt 1 view .LVU91
 272:Src/main.c    ****   MACAddr[3] = 0x00;
 313              		.loc 1 272 14 is_stmt 0 view .LVU92
 314 0016 E123     		movs	r3, #225
 315 0018 8DF80230 		strb	r3, [sp, #2]
 273:Src/main.c    ****   MACAddr[4] = 0x00;
 316              		.loc 1 273 3 is_stmt 1 view .LVU93
 273:Src/main.c    ****   MACAddr[4] = 0x00;
 317              		.loc 1 273 14 is_stmt 0 view .LVU94
 318 001c 8DF80340 		strb	r4, [sp, #3]
 274:Src/main.c    ****   MACAddr[5] = 0x00;
 319              		.loc 1 274 3 is_stmt 1 view .LVU95
 274:Src/main.c    ****   MACAddr[5] = 0x00;
 320              		.loc 1 274 14 is_stmt 0 view .LVU96
 321 0020 8DF80440 		strb	r4, [sp, #4]
 275:Src/main.c    ****   heth.Init.MACAddr = &MACAddr[0];
 322              		.loc 1 275 3 is_stmt 1 view .LVU97
 275:Src/main.c    ****   heth.Init.MACAddr = &MACAddr[0];
 323              		.loc 1 275 14 is_stmt 0 view .LVU98
 324 0024 8DF80540 		strb	r4, [sp, #5]
 276:Src/main.c    ****   heth.Init.MediaInterface = HAL_ETH_RMII_MODE;
 325              		.loc 1 276 3 is_stmt 1 view .LVU99
 276:Src/main.c    ****   heth.Init.MediaInterface = HAL_ETH_RMII_MODE;
 326              		.loc 1 276 21 is_stmt 0 view .LVU100
 327 0028 C0F804D0 		str	sp, [r0, #4]
 277:Src/main.c    ****   heth.Init.TxDesc = DMATxDscrTab;
 328              		.loc 1 277 3 is_stmt 1 view .LVU101
 277:Src/main.c    ****   heth.Init.TxDesc = DMATxDscrTab;
 329              		.loc 1 277 28 is_stmt 0 view .LVU102
 330 002c 0123     		movs	r3, #1
 331 002e 0372     		strb	r3, [r0, #8]
 278:Src/main.c    ****   heth.Init.RxDesc = DMARxDscrTab;
 332              		.loc 1 278 3 is_stmt 1 view .LVU103
 278:Src/main.c    ****   heth.Init.RxDesc = DMARxDscrTab;
 333              		.loc 1 278 20 is_stmt 0 view .LVU104
 334 0030 0D4B     		ldr	r3, .L7+8
ARM GAS  /tmp/ccEgivj9.s 			page 15


 335 0032 C360     		str	r3, [r0, #12]
 279:Src/main.c    ****   heth.Init.RxBuffLen = 1524;
 336              		.loc 1 279 3 is_stmt 1 view .LVU105
 279:Src/main.c    ****   heth.Init.RxBuffLen = 1524;
 337              		.loc 1 279 20 is_stmt 0 view .LVU106
 338 0034 0D4B     		ldr	r3, .L7+12
 339 0036 0361     		str	r3, [r0, #16]
 280:Src/main.c    **** 
 340              		.loc 1 280 3 is_stmt 1 view .LVU107
 280:Src/main.c    **** 
 341              		.loc 1 280 23 is_stmt 0 view .LVU108
 342 0038 40F2F453 		movw	r3, #1524
 343 003c 4361     		str	r3, [r0, #20]
 286:Src/main.c    ****   {
 344              		.loc 1 286 3 is_stmt 1 view .LVU109
 286:Src/main.c    ****   {
 345              		.loc 1 286 7 is_stmt 0 view .LVU110
 346 003e FFF7FEFF 		bl	HAL_ETH_Init
 347              	.LVL8:
 291:Src/main.c    ****   TxConfig.Attributes = ETH_TX_PACKETS_FEATURES_CSUM | ETH_TX_PACKETS_FEATURES_CRCPAD;
 348              		.loc 1 291 3 is_stmt 1 view .LVU111
 349 0042 0B4D     		ldr	r5, .L7+16
 350 0044 3022     		movs	r2, #48
 351 0046 2146     		mov	r1, r4
 352 0048 2846     		mov	r0, r5
 353 004a FFF7FEFF 		bl	memset
 354              	.LVL9:
 292:Src/main.c    ****   TxConfig.ChecksumCtrl = ETH_CHECKSUM_IPHDR_PAYLOAD_INSERT_PHDR_CALC;
 355              		.loc 1 292 3 view .LVU112
 292:Src/main.c    ****   TxConfig.ChecksumCtrl = ETH_CHECKSUM_IPHDR_PAYLOAD_INSERT_PHDR_CALC;
 356              		.loc 1 292 23 is_stmt 0 view .LVU113
 357 004e 2123     		movs	r3, #33
 358 0050 45F8043C 		str	r3, [r5, #-4]
 293:Src/main.c    ****   TxConfig.CRCPadCtrl = ETH_CRC_PAD_INSERT;
 359              		.loc 1 293 3 is_stmt 1 view .LVU114
 293:Src/main.c    ****   TxConfig.CRCPadCtrl = ETH_CRC_PAD_INSERT;
 360              		.loc 1 293 25 is_stmt 0 view .LVU115
 361 0054 4FF44033 		mov	r3, #196608
 362 0058 2B61     		str	r3, [r5, #16]
 294:Src/main.c    ****   /* USER CODE BEGIN ETH_Init 2 */
 363              		.loc 1 294 3 is_stmt 1 view .LVU116
 299:Src/main.c    **** 
 364              		.loc 1 299 1 is_stmt 0 view .LVU117
 365 005a 03B0     		add	sp, sp, #12
 366              	.LCFI5:
 367              		.cfi_def_cfa_offset 12
 368              		@ sp needed
 369 005c 30BD     		pop	{r4, r5, pc}
 370              	.L8:
 371 005e 00BF     		.align	2
 372              	.L7:
 373 0060 00000000 		.word	heth
 374 0064 00800240 		.word	1073905664
 375 0068 00000000 		.word	.LANCHOR0
 376 006c 00000000 		.word	.LANCHOR1
 377 0070 04000000 		.word	TxConfig+4
 378              		.cfi_endproc
ARM GAS  /tmp/ccEgivj9.s 			page 16


 379              	.LFE147:
 381              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
 382              		.align	1
 383              		.syntax unified
 384              		.thumb
 385              		.thumb_func
 386              		.fpu fpv5-d16
 388              	MX_USART3_UART_Init:
 389              	.LFB148:
 307:Src/main.c    **** 
 390              		.loc 1 307 1 is_stmt 1 view -0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 0
 393              		@ frame_needed = 0, uses_anonymous_args = 0
 394 0000 38B5     		push	{r3, r4, r5, lr}
 395              	.LCFI6:
 396              		.cfi_def_cfa_offset 16
 397              		.cfi_offset 3, -16
 398              		.cfi_offset 4, -12
 399              		.cfi_offset 5, -8
 400              		.cfi_offset 14, -4
 316:Src/main.c    ****   huart3.Init.BaudRate = 115200;
 401              		.loc 1 316 3 view .LVU119
 316:Src/main.c    ****   huart3.Init.BaudRate = 115200;
 402              		.loc 1 316 19 is_stmt 0 view .LVU120
 403 0002 104C     		ldr	r4, .L11
 404 0004 104B     		ldr	r3, .L11+4
 405 0006 2360     		str	r3, [r4]
 317:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 406              		.loc 1 317 3 is_stmt 1 view .LVU121
 317:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 407              		.loc 1 317 24 is_stmt 0 view .LVU122
 408 0008 4FF4E133 		mov	r3, #115200
 409 000c 6360     		str	r3, [r4, #4]
 318:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 410              		.loc 1 318 3 is_stmt 1 view .LVU123
 318:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 411              		.loc 1 318 26 is_stmt 0 view .LVU124
 412 000e 0025     		movs	r5, #0
 413 0010 A560     		str	r5, [r4, #8]
 319:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 414              		.loc 1 319 3 is_stmt 1 view .LVU125
 319:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 415              		.loc 1 319 24 is_stmt 0 view .LVU126
 416 0012 E560     		str	r5, [r4, #12]
 320:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 417              		.loc 1 320 3 is_stmt 1 view .LVU127
 320:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 418              		.loc 1 320 22 is_stmt 0 view .LVU128
 419 0014 2561     		str	r5, [r4, #16]
 321:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 420              		.loc 1 321 3 is_stmt 1 view .LVU129
 321:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 421              		.loc 1 321 20 is_stmt 0 view .LVU130
 422 0016 0C23     		movs	r3, #12
 423 0018 6361     		str	r3, [r4, #20]
 322:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
ARM GAS  /tmp/ccEgivj9.s 			page 17


 424              		.loc 1 322 3 is_stmt 1 view .LVU131
 322:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 425              		.loc 1 322 25 is_stmt 0 view .LVU132
 426 001a A561     		str	r5, [r4, #24]
 323:Src/main.c    ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 427              		.loc 1 323 3 is_stmt 1 view .LVU133
 323:Src/main.c    ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 428              		.loc 1 323 28 is_stmt 0 view .LVU134
 429 001c E561     		str	r5, [r4, #28]
 324:Src/main.c    ****   huart3.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 430              		.loc 1 324 3 is_stmt 1 view .LVU135
 324:Src/main.c    ****   huart3.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 431              		.loc 1 324 30 is_stmt 0 view .LVU136
 432 001e 2562     		str	r5, [r4, #32]
 325:Src/main.c    ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 433              		.loc 1 325 3 is_stmt 1 view .LVU137
 325:Src/main.c    ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 434              		.loc 1 325 30 is_stmt 0 view .LVU138
 435 0020 6562     		str	r5, [r4, #36]
 326:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 436              		.loc 1 326 3 is_stmt 1 view .LVU139
 326:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 437              		.loc 1 326 38 is_stmt 0 view .LVU140
 438 0022 A562     		str	r5, [r4, #40]
 327:Src/main.c    ****   {
 439              		.loc 1 327 3 is_stmt 1 view .LVU141
 327:Src/main.c    ****   {
 440              		.loc 1 327 7 is_stmt 0 view .LVU142
 441 0024 2046     		mov	r0, r4
 442 0026 FFF7FEFF 		bl	HAL_UART_Init
 443              	.LVL10:
 331:Src/main.c    ****   {
 444              		.loc 1 331 3 is_stmt 1 view .LVU143
 331:Src/main.c    ****   {
 445              		.loc 1 331 7 is_stmt 0 view .LVU144
 446 002a 2946     		mov	r1, r5
 447 002c 2046     		mov	r0, r4
 448 002e FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
 449              	.LVL11:
 335:Src/main.c    ****   {
 450              		.loc 1 335 3 is_stmt 1 view .LVU145
 335:Src/main.c    ****   {
 451              		.loc 1 335 7 is_stmt 0 view .LVU146
 452 0032 2946     		mov	r1, r5
 453 0034 2046     		mov	r0, r4
 454 0036 FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
 455              	.LVL12:
 339:Src/main.c    ****   {
 456              		.loc 1 339 3 is_stmt 1 view .LVU147
 339:Src/main.c    ****   {
 457              		.loc 1 339 7 is_stmt 0 view .LVU148
 458 003a 2046     		mov	r0, r4
 459 003c FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
 460              	.LVL13:
 347:Src/main.c    **** 
 461              		.loc 1 347 1 view .LVU149
 462 0040 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/ccEgivj9.s 			page 18


 463              	.L12:
 464 0042 00BF     		.align	2
 465              	.L11:
 466 0044 00000000 		.word	huart3
 467 0048 00480040 		.word	1073760256
 468              		.cfi_endproc
 469              	.LFE148:
 471              		.section	.text.MX_USB_OTG_FS_PCD_Init,"ax",%progbits
 472              		.align	1
 473              		.syntax unified
 474              		.thumb
 475              		.thumb_func
 476              		.fpu fpv5-d16
 478              	MX_USB_OTG_FS_PCD_Init:
 479              	.LFB149:
 355:Src/main.c    **** 
 480              		.loc 1 355 1 is_stmt 1 view -0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 0
 483              		@ frame_needed = 0, uses_anonymous_args = 0
 484 0000 08B5     		push	{r3, lr}
 485              	.LCFI7:
 486              		.cfi_def_cfa_offset 8
 487              		.cfi_offset 3, -8
 488              		.cfi_offset 14, -4
 364:Src/main.c    ****   hpcd_USB_OTG_FS.Init.dev_endpoints = 9;
 489              		.loc 1 364 3 view .LVU151
 364:Src/main.c    ****   hpcd_USB_OTG_FS.Init.dev_endpoints = 9;
 490              		.loc 1 364 28 is_stmt 0 view .LVU152
 491 0002 0A48     		ldr	r0, .L15
 492 0004 0A4B     		ldr	r3, .L15+4
 493 0006 0360     		str	r3, [r0]
 365:Src/main.c    ****   hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
 494              		.loc 1 365 3 is_stmt 1 view .LVU153
 365:Src/main.c    ****   hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
 495              		.loc 1 365 38 is_stmt 0 view .LVU154
 496 0008 0923     		movs	r3, #9
 497 000a 4360     		str	r3, [r0, #4]
 366:Src/main.c    ****   hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 498              		.loc 1 366 3 is_stmt 1 view .LVU155
 366:Src/main.c    ****   hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 499              		.loc 1 366 30 is_stmt 0 view .LVU156
 500 000c 0222     		movs	r2, #2
 501 000e C260     		str	r2, [r0, #12]
 367:Src/main.c    ****   hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 502              		.loc 1 367 3 is_stmt 1 view .LVU157
 367:Src/main.c    ****   hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 503              		.loc 1 367 35 is_stmt 0 view .LVU158
 504 0010 0023     		movs	r3, #0
 505 0012 0361     		str	r3, [r0, #16]
 368:Src/main.c    ****   hpcd_USB_OTG_FS.Init.Sof_enable = ENABLE;
 506              		.loc 1 368 3 is_stmt 1 view .LVU159
 368:Src/main.c    ****   hpcd_USB_OTG_FS.Init.Sof_enable = ENABLE;
 507              		.loc 1 368 35 is_stmt 0 view .LVU160
 508 0014 8261     		str	r2, [r0, #24]
 369:Src/main.c    ****   hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 509              		.loc 1 369 3 is_stmt 1 view .LVU161
ARM GAS  /tmp/ccEgivj9.s 			page 19


 369:Src/main.c    ****   hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 510              		.loc 1 369 35 is_stmt 0 view .LVU162
 511 0016 0122     		movs	r2, #1
 512 0018 C261     		str	r2, [r0, #28]
 370:Src/main.c    ****   hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 513              		.loc 1 370 3 is_stmt 1 view .LVU163
 370:Src/main.c    ****   hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 514              		.loc 1 370 41 is_stmt 0 view .LVU164
 515 001a 0362     		str	r3, [r0, #32]
 371:Src/main.c    ****   hpcd_USB_OTG_FS.Init.battery_charging_enable = ENABLE;
 516              		.loc 1 371 3 is_stmt 1 view .LVU165
 371:Src/main.c    ****   hpcd_USB_OTG_FS.Init.battery_charging_enable = ENABLE;
 517              		.loc 1 371 35 is_stmt 0 view .LVU166
 518 001c 4362     		str	r3, [r0, #36]
 372:Src/main.c    ****   hpcd_USB_OTG_FS.Init.vbus_sensing_enable = ENABLE;
 519              		.loc 1 372 3 is_stmt 1 view .LVU167
 372:Src/main.c    ****   hpcd_USB_OTG_FS.Init.vbus_sensing_enable = ENABLE;
 520              		.loc 1 372 48 is_stmt 0 view .LVU168
 521 001e 8262     		str	r2, [r0, #40]
 373:Src/main.c    ****   hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 522              		.loc 1 373 3 is_stmt 1 view .LVU169
 373:Src/main.c    ****   hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 523              		.loc 1 373 44 is_stmt 0 view .LVU170
 524 0020 C262     		str	r2, [r0, #44]
 374:Src/main.c    ****   if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 525              		.loc 1 374 3 is_stmt 1 view .LVU171
 374:Src/main.c    ****   if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 526              		.loc 1 374 42 is_stmt 0 view .LVU172
 527 0022 0363     		str	r3, [r0, #48]
 375:Src/main.c    ****   {
 528              		.loc 1 375 3 is_stmt 1 view .LVU173
 375:Src/main.c    ****   {
 529              		.loc 1 375 7 is_stmt 0 view .LVU174
 530 0024 FFF7FEFF 		bl	HAL_PCD_Init
 531              	.LVL14:
 383:Src/main.c    **** 
 532              		.loc 1 383 1 view .LVU175
 533 0028 08BD     		pop	{r3, pc}
 534              	.L16:
 535 002a 00BF     		.align	2
 536              	.L15:
 537 002c 00000000 		.word	hpcd_USB_OTG_FS
 538 0030 00000840 		.word	1074266112
 539              		.cfi_endproc
 540              	.LFE149:
 542              		.section	.text.StartDefaultTask,"ax",%progbits
 543              		.align	1
 544              		.global	StartDefaultTask
 545              		.syntax unified
 546              		.thumb
 547              		.thumb_func
 548              		.fpu fpv5-d16
 550              	StartDefaultTask:
 551              	.LFB151:
 446:Src/main.c    **** 
 447:Src/main.c    **** /* USER CODE BEGIN 4 */
 448:Src/main.c    **** 
ARM GAS  /tmp/ccEgivj9.s 			page 20


 449:Src/main.c    **** /* USER CODE END 4 */
 450:Src/main.c    **** 
 451:Src/main.c    **** /* USER CODE BEGIN Header_StartDefaultTask */
 452:Src/main.c    **** /**
 453:Src/main.c    ****   * @brief  Function implementing the defaultTask thread.
 454:Src/main.c    ****   * @param  argument: Not used 
 455:Src/main.c    ****   * @retval None
 456:Src/main.c    ****   */
 457:Src/main.c    **** /* USER CODE END Header_StartDefaultTask */
 458:Src/main.c    **** void StartDefaultTask(void *argument)
 459:Src/main.c    **** {
 552              		.loc 1 459 1 is_stmt 1 view -0
 553              		.cfi_startproc
 554              		@ Volatile: function does not return.
 555              		@ args = 0, pretend = 0, frame = 0
 556              		@ frame_needed = 0, uses_anonymous_args = 0
 557              	.LVL15:
 558              		.loc 1 459 1 is_stmt 0 view .LVU177
 559 0000 08B5     		push	{r3, lr}
 560              	.LCFI8:
 561              		.cfi_def_cfa_offset 8
 562              		.cfi_offset 3, -8
 563              		.cfi_offset 14, -4
 564              	.LVL16:
 565              	.L18:
 460:Src/main.c    ****     
 461:Src/main.c    ****     
 462:Src/main.c    ****     
 463:Src/main.c    **** 
 464:Src/main.c    ****   /* USER CODE BEGIN 5 */
 465:Src/main.c    ****   /* Infinite loop */
 466:Src/main.c    ****   for(;;)
 566              		.loc 1 466 3 is_stmt 1 discriminator 1 view .LVU178
 467:Src/main.c    ****   {
 468:Src/main.c    ****     BSP_LED_Toggle(LED_GREEN);
 567              		.loc 1 468 5 discriminator 1 view .LVU179
 568 0002 0020     		movs	r0, #0
 569 0004 FFF7FEFF 		bl	BSP_LED_Toggle
 570              	.LVL17:
 469:Src/main.c    ****     osDelay(1000);
 571              		.loc 1 469 5 discriminator 1 view .LVU180
 572 0008 4FF47A70 		mov	r0, #1000
 573 000c FFF7FEFF 		bl	osDelay
 574              	.LVL18:
 575 0010 F7E7     		b	.L18
 576              		.cfi_endproc
 577              	.LFE151:
 579              		.section	.text.SystemClock_Config,"ax",%progbits
 580              		.align	1
 581              		.global	SystemClock_Config
 582              		.syntax unified
 583              		.thumb
 584              		.thumb_func
 585              		.fpu fpv5-d16
 587              	SystemClock_Config:
 588              	.LFB146:
 190:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
ARM GAS  /tmp/ccEgivj9.s 			page 21


 589              		.loc 1 190 1 view -0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 304
 592              		@ frame_needed = 0, uses_anonymous_args = 0
 593 0000 10B5     		push	{r4, lr}
 594              	.LCFI9:
 595              		.cfi_def_cfa_offset 8
 596              		.cfi_offset 4, -8
 597              		.cfi_offset 14, -4
 598 0002 CCB0     		sub	sp, sp, #304
 599              	.LCFI10:
 600              		.cfi_def_cfa_offset 312
 191:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 601              		.loc 1 191 3 view .LVU182
 191:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 602              		.loc 1 191 22 is_stmt 0 view .LVU183
 603 0004 4C22     		movs	r2, #76
 604 0006 0021     		movs	r1, #0
 605 0008 39A8     		add	r0, sp, #228
 606 000a FFF7FEFF 		bl	memset
 607              	.LVL19:
 192:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 608              		.loc 1 192 3 is_stmt 1 view .LVU184
 192:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 609              		.loc 1 192 22 is_stmt 0 view .LVU185
 610 000e 2022     		movs	r2, #32
 611 0010 0021     		movs	r1, #0
 612 0012 31A8     		add	r0, sp, #196
 613 0014 FFF7FEFF 		bl	memset
 614              	.LVL20:
 193:Src/main.c    **** 
 615              		.loc 1 193 3 is_stmt 1 view .LVU186
 193:Src/main.c    **** 
 616              		.loc 1 193 28 is_stmt 0 view .LVU187
 617 0018 BC22     		movs	r2, #188
 618 001a 0021     		movs	r1, #0
 619 001c 02A8     		add	r0, sp, #8
 620 001e FFF7FEFF 		bl	memset
 621              	.LVL21:
 197:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 622              		.loc 1 197 3 is_stmt 1 view .LVU188
 623 0022 0220     		movs	r0, #2
 624 0024 FFF7FEFF 		bl	HAL_PWREx_ConfigSupply
 625              	.LVL22:
 200:Src/main.c    **** 
 626              		.loc 1 200 3 view .LVU189
 627              	.LBB9:
 200:Src/main.c    **** 
 628              		.loc 1 200 3 view .LVU190
 629 0028 0023     		movs	r3, #0
 630 002a 0193     		str	r3, [sp, #4]
 200:Src/main.c    **** 
 631              		.loc 1 200 3 view .LVU191
 200:Src/main.c    **** 
 632              		.loc 1 200 3 view .LVU192
 633 002c 274B     		ldr	r3, .L23
 634 002e DA6A     		ldr	r2, [r3, #44]
ARM GAS  /tmp/ccEgivj9.s 			page 22


 635 0030 22F00102 		bic	r2, r2, #1
 636 0034 DA62     		str	r2, [r3, #44]
 200:Src/main.c    **** 
 637              		.loc 1 200 3 view .LVU193
 638 0036 DB6A     		ldr	r3, [r3, #44]
 639 0038 03F00103 		and	r3, r3, #1
 640 003c 0193     		str	r3, [sp, #4]
 200:Src/main.c    **** 
 641              		.loc 1 200 3 view .LVU194
 642 003e 244A     		ldr	r2, .L23+4
 643 0040 9369     		ldr	r3, [r2, #24]
 644 0042 23F44043 		bic	r3, r3, #49152
 645 0046 43F48043 		orr	r3, r3, #16384
 646 004a 9361     		str	r3, [r2, #24]
 200:Src/main.c    **** 
 647              		.loc 1 200 3 view .LVU195
 648 004c 9369     		ldr	r3, [r2, #24]
 649 004e 03F44043 		and	r3, r3, #49152
 650 0052 0193     		str	r3, [sp, #4]
 200:Src/main.c    **** 
 651              		.loc 1 200 3 view .LVU196
 652 0054 019B     		ldr	r3, [sp, #4]
 653              	.LBE9:
 202:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 654              		.loc 1 202 3 view .LVU197
 655              	.L21:
 202:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 656              		.loc 1 202 48 discriminator 1 view .LVU198
 202:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 657              		.loc 1 202 10 is_stmt 0 discriminator 1 view .LVU199
 658 0056 1E4B     		ldr	r3, .L23+4
 659 0058 9B69     		ldr	r3, [r3, #24]
 202:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 660              		.loc 1 202 8 discriminator 1 view .LVU200
 661 005a 13F4005F 		tst	r3, #8192
 662 005e FAD0     		beq	.L21
 205:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 663              		.loc 1 205 3 is_stmt 1 view .LVU201
 205:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 664              		.loc 1 205 36 is_stmt 0 view .LVU202
 665 0060 0323     		movs	r3, #3
 666 0062 3993     		str	r3, [sp, #228]
 206:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 667              		.loc 1 206 3 is_stmt 1 view .LVU203
 206:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 668              		.loc 1 206 30 is_stmt 0 view .LVU204
 669 0064 4FF4A023 		mov	r3, #327680
 670 0068 3A93     		str	r3, [sp, #232]
 207:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 671              		.loc 1 207 3 is_stmt 1 view .LVU205
 207:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 672              		.loc 1 207 30 is_stmt 0 view .LVU206
 673 006a 0122     		movs	r2, #1
 674 006c 3C92     		str	r2, [sp, #240]
 208:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 675              		.loc 1 208 3 is_stmt 1 view .LVU207
 208:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
ARM GAS  /tmp/ccEgivj9.s 			page 23


 676              		.loc 1 208 41 is_stmt 0 view .LVU208
 677 006e 2023     		movs	r3, #32
 678 0070 3D93     		str	r3, [sp, #244]
 209:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 679              		.loc 1 209 3 is_stmt 1 view .LVU209
 209:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 680              		.loc 1 209 34 is_stmt 0 view .LVU210
 681 0072 0223     		movs	r3, #2
 682 0074 4293     		str	r3, [sp, #264]
 210:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 1;
 683              		.loc 1 210 3 is_stmt 1 view .LVU211
 210:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 1;
 684              		.loc 1 210 35 is_stmt 0 view .LVU212
 685 0076 4393     		str	r3, [sp, #268]
 211:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 24;
 686              		.loc 1 211 3 is_stmt 1 view .LVU213
 211:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 24;
 687              		.loc 1 211 30 is_stmt 0 view .LVU214
 688 0078 4492     		str	r2, [sp, #272]
 212:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = 2;
 689              		.loc 1 212 3 is_stmt 1 view .LVU215
 212:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = 2;
 690              		.loc 1 212 30 is_stmt 0 view .LVU216
 691 007a 1822     		movs	r2, #24
 692 007c 4592     		str	r2, [sp, #276]
 213:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 693              		.loc 1 213 3 is_stmt 1 view .LVU217
 213:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 694              		.loc 1 213 30 is_stmt 0 view .LVU218
 695 007e 4693     		str	r3, [sp, #280]
 214:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = 2;
 696              		.loc 1 214 3 is_stmt 1 view .LVU219
 214:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = 2;
 697              		.loc 1 214 30 is_stmt 0 view .LVU220
 698 0080 0422     		movs	r2, #4
 699 0082 4792     		str	r2, [sp, #284]
 215:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 700              		.loc 1 215 3 is_stmt 1 view .LVU221
 215:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 701              		.loc 1 215 30 is_stmt 0 view .LVU222
 702 0084 4893     		str	r3, [sp, #288]
 216:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 703              		.loc 1 216 3 is_stmt 1 view .LVU223
 216:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 704              		.loc 1 216 32 is_stmt 0 view .LVU224
 705 0086 0C23     		movs	r3, #12
 706 0088 4993     		str	r3, [sp, #292]
 217:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 707              		.loc 1 217 3 is_stmt 1 view .LVU225
 217:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 708              		.loc 1 217 35 is_stmt 0 view .LVU226
 709 008a 0024     		movs	r4, #0
 710 008c 4A94     		str	r4, [sp, #296]
 218:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 711              		.loc 1 218 3 is_stmt 1 view .LVU227
 218:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 712              		.loc 1 218 34 is_stmt 0 view .LVU228
ARM GAS  /tmp/ccEgivj9.s 			page 24


 713 008e 4B94     		str	r4, [sp, #300]
 219:Src/main.c    ****   {
 714              		.loc 1 219 3 is_stmt 1 view .LVU229
 219:Src/main.c    ****   {
 715              		.loc 1 219 7 is_stmt 0 view .LVU230
 716 0090 39A8     		add	r0, sp, #228
 717 0092 FFF7FEFF 		bl	HAL_RCC_OscConfig
 718              	.LVL23:
 225:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 719              		.loc 1 225 3 is_stmt 1 view .LVU231
 225:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 720              		.loc 1 225 31 is_stmt 0 view .LVU232
 721 0096 3F23     		movs	r3, #63
 722 0098 3193     		str	r3, [sp, #196]
 228:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 723              		.loc 1 228 3 is_stmt 1 view .LVU233
 228:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 724              		.loc 1 228 34 is_stmt 0 view .LVU234
 725 009a 3294     		str	r4, [sp, #200]
 229:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV1;
 726              		.loc 1 229 3 is_stmt 1 view .LVU235
 229:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV1;
 727              		.loc 1 229 35 is_stmt 0 view .LVU236
 728 009c 3394     		str	r4, [sp, #204]
 230:Src/main.c    ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV1;
 729              		.loc 1 230 3 is_stmt 1 view .LVU237
 230:Src/main.c    ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV1;
 730              		.loc 1 230 35 is_stmt 0 view .LVU238
 731 009e 3494     		str	r4, [sp, #208]
 231:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV1;
 732              		.loc 1 231 3 is_stmt 1 view .LVU239
 231:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV1;
 733              		.loc 1 231 36 is_stmt 0 view .LVU240
 734 00a0 3594     		str	r4, [sp, #212]
 232:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV1;
 735              		.loc 1 232 3 is_stmt 1 view .LVU241
 232:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV1;
 736              		.loc 1 232 36 is_stmt 0 view .LVU242
 737 00a2 3694     		str	r4, [sp, #216]
 233:Src/main.c    ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV1;
 738              		.loc 1 233 3 is_stmt 1 view .LVU243
 233:Src/main.c    ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV1;
 739              		.loc 1 233 36 is_stmt 0 view .LVU244
 740 00a4 3794     		str	r4, [sp, #220]
 234:Src/main.c    **** 
 741              		.loc 1 234 3 is_stmt 1 view .LVU245
 234:Src/main.c    **** 
 742              		.loc 1 234 36 is_stmt 0 view .LVU246
 743 00a6 3894     		str	r4, [sp, #224]
 236:Src/main.c    ****   {
 744              		.loc 1 236 3 is_stmt 1 view .LVU247
 236:Src/main.c    ****   {
 745              		.loc 1 236 7 is_stmt 0 view .LVU248
 746 00a8 2146     		mov	r1, r4
 747 00aa 31A8     		add	r0, sp, #196
 748 00ac FFF7FEFF 		bl	HAL_RCC_ClockConfig
 749              	.LVL24:
ARM GAS  /tmp/ccEgivj9.s 			page 25


 240:Src/main.c    ****   PeriphClkInitStruct.Usart234578ClockSelection = RCC_USART234578CLKSOURCE_D2PCLK1;
 750              		.loc 1 240 3 is_stmt 1 view .LVU249
 240:Src/main.c    ****   PeriphClkInitStruct.Usart234578ClockSelection = RCC_USART234578CLKSOURCE_D2PCLK1;
 751              		.loc 1 240 44 is_stmt 0 view .LVU250
 752 00b0 084B     		ldr	r3, .L23+8
 753 00b2 0293     		str	r3, [sp, #8]
 241:Src/main.c    ****   PeriphClkInitStruct.UsbClockSelection = RCC_USBCLKSOURCE_PLL;
 754              		.loc 1 241 3 is_stmt 1 view .LVU251
 241:Src/main.c    ****   PeriphClkInitStruct.UsbClockSelection = RCC_USBCLKSOURCE_PLL;
 755              		.loc 1 241 49 is_stmt 0 view .LVU252
 756 00b4 1F94     		str	r4, [sp, #124]
 242:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 757              		.loc 1 242 3 is_stmt 1 view .LVU253
 242:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 758              		.loc 1 242 41 is_stmt 0 view .LVU254
 759 00b6 4FF48013 		mov	r3, #1048576
 760 00ba 2393     		str	r3, [sp, #140]
 243:Src/main.c    ****   {
 761              		.loc 1 243 3 is_stmt 1 view .LVU255
 243:Src/main.c    ****   {
 762              		.loc 1 243 7 is_stmt 0 view .LVU256
 763 00bc 02A8     		add	r0, sp, #8
 764 00be FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 765              	.LVL25:
 249:Src/main.c    **** }
 766              		.loc 1 249 3 is_stmt 1 view .LVU257
 767 00c2 FFF7FEFF 		bl	HAL_PWREx_EnableUSBVoltageDetector
 768              	.LVL26:
 250:Src/main.c    **** 
 769              		.loc 1 250 1 is_stmt 0 view .LVU258
 770 00c6 4CB0     		add	sp, sp, #304
 771              	.LCFI11:
 772              		.cfi_def_cfa_offset 8
 773              		@ sp needed
 774 00c8 10BD     		pop	{r4, pc}
 775              	.L24:
 776 00ca 00BF     		.align	2
 777              	.L23:
 778 00cc 00040058 		.word	1476396032
 779 00d0 00480258 		.word	1476544512
 780 00d4 02000400 		.word	262146
 781              		.cfi_endproc
 782              	.LFE146:
 784              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 785              		.align	2
 786              	.LC0:
 787 0000 64656661 		.ascii	"defaultTask\000"
 787      756C7454 
 787      61736B00 
 788              		.section	.text.main,"ax",%progbits
 789              		.align	1
 790              		.global	main
 791              		.syntax unified
 792              		.thumb
 793              		.thumb_func
 794              		.fpu fpv5-d16
 796              	main:
ARM GAS  /tmp/ccEgivj9.s 			page 26


 797              	.LFB145:
 106:Src/main.c    ****   /* USER CODE BEGIN 1 */
 798              		.loc 1 106 1 is_stmt 1 view -0
 799              		.cfi_startproc
 800              		@ Volatile: function does not return.
 801              		@ args = 0, pretend = 0, frame = 40
 802              		@ frame_needed = 0, uses_anonymous_args = 0
 803 0000 00B5     		push	{lr}
 804              	.LCFI12:
 805              		.cfi_def_cfa_offset 4
 806              		.cfi_offset 14, -4
 807 0002 8BB0     		sub	sp, sp, #44
 808              	.LCFI13:
 809              		.cfi_def_cfa_offset 48
 115:Src/main.c    **** 
 810              		.loc 1 115 3 view .LVU260
 811 0004 FFF7FEFF 		bl	HAL_Init
 812              	.LVL27:
 122:Src/main.c    **** 
 813              		.loc 1 122 3 view .LVU261
 814 0008 FFF7FEFF 		bl	SystemClock_Config
 815              	.LVL28:
 129:Src/main.c    ****   MX_ETH_Init();
 816              		.loc 1 129 3 view .LVU262
 817 000c FFF7FEFF 		bl	MX_GPIO_Init
 818              	.LVL29:
 130:Src/main.c    ****   MX_USART3_UART_Init();
 819              		.loc 1 130 3 view .LVU263
 820 0010 FFF7FEFF 		bl	MX_ETH_Init
 821              	.LVL30:
 131:Src/main.c    ****   MX_USB_OTG_FS_PCD_Init();
 822              		.loc 1 131 3 view .LVU264
 823 0014 FFF7FEFF 		bl	MX_USART3_UART_Init
 824              	.LVL31:
 132:Src/main.c    ****   /* USER CODE BEGIN 2 */
 825              		.loc 1 132 3 view .LVU265
 826 0018 FFF7FEFF 		bl	MX_USB_OTG_FS_PCD_Init
 827              	.LVL32:
 134:Src/main.c    **** 
 828              		.loc 1 134 3 view .LVU266
 829 001c 0020     		movs	r0, #0
 830 001e FFF7FEFF 		bl	BSP_LED_Init
 831              	.LVL33:
 138:Src/main.c    **** 
 832              		.loc 1 138 3 view .LVU267
 833 0022 FFF7FEFF 		bl	osKernelInitialize
 834              	.LVL34:
 158:Src/main.c    ****     .name = "defaultTask",
 835              		.loc 1 158 3 view .LVU268
 158:Src/main.c    ****     .name = "defaultTask",
 836              		.loc 1 158 24 is_stmt 0 view .LVU269
 837 0026 2022     		movs	r2, #32
 838 0028 0021     		movs	r1, #0
 839 002a 02A8     		add	r0, sp, #8
 840 002c FFF7FEFF 		bl	memset
 841              	.LVL35:
 842 0030 074B     		ldr	r3, .L28
ARM GAS  /tmp/ccEgivj9.s 			page 27


 843 0032 0193     		str	r3, [sp, #4]
 844 0034 8023     		movs	r3, #128
 845 0036 0693     		str	r3, [sp, #24]
 846 0038 1823     		movs	r3, #24
 847 003a 0793     		str	r3, [sp, #28]
 163:Src/main.c    **** 
 848              		.loc 1 163 3 is_stmt 1 view .LVU270
 163:Src/main.c    **** 
 849              		.loc 1 163 23 is_stmt 0 view .LVU271
 850 003c 01AA     		add	r2, sp, #4
 851 003e 0021     		movs	r1, #0
 852 0040 0448     		ldr	r0, .L28+4
 853 0042 FFF7FEFF 		bl	osThreadNew
 854              	.LVL36:
 163:Src/main.c    **** 
 855              		.loc 1 163 21 view .LVU272
 856 0046 044B     		ldr	r3, .L28+8
 857 0048 1860     		str	r0, [r3]
 170:Src/main.c    ****   
 858              		.loc 1 170 3 is_stmt 1 view .LVU273
 859 004a FFF7FEFF 		bl	osKernelStart
 860              	.LVL37:
 861              	.L26:
 176:Src/main.c    ****   {
 862              		.loc 1 176 3 discriminator 1 view .LVU274
 181:Src/main.c    ****   /* USER CODE END 3 */
 863              		.loc 1 181 3 discriminator 1 view .LVU275
 864 004e FEE7     		b	.L26
 865              	.L29:
 866              		.align	2
 867              	.L28:
 868 0050 00000000 		.word	.LC0
 869 0054 00000000 		.word	StartDefaultTask
 870 0058 00000000 		.word	defaultTaskHandle
 871              		.cfi_endproc
 872              	.LFE145:
 874              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 875              		.align	1
 876              		.global	HAL_TIM_PeriodElapsedCallback
 877              		.syntax unified
 878              		.thumb
 879              		.thumb_func
 880              		.fpu fpv5-d16
 882              	HAL_TIM_PeriodElapsedCallback:
 883              	.LVL38:
 884              	.LFB152:
 470:Src/main.c    ****   }
 471:Src/main.c    ****   /* USER CODE END 5 */ 
 472:Src/main.c    **** }
 473:Src/main.c    **** 
 474:Src/main.c    **** /**
 475:Src/main.c    ****   * @brief  Period elapsed callback in non blocking mode
 476:Src/main.c    ****   * @note   This function is called  when TIM1 interrupt took place, inside
 477:Src/main.c    ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 478:Src/main.c    ****   * a global variable "uwTick" used as application time base.
 479:Src/main.c    ****   * @param  htim : TIM handle
 480:Src/main.c    ****   * @retval None
ARM GAS  /tmp/ccEgivj9.s 			page 28


 481:Src/main.c    ****   */
 482:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 483:Src/main.c    **** {
 885              		.loc 1 483 1 view -0
 886              		.cfi_startproc
 887              		@ args = 0, pretend = 0, frame = 0
 888              		@ frame_needed = 0, uses_anonymous_args = 0
 889              		.loc 1 483 1 is_stmt 0 view .LVU277
 890 0000 08B5     		push	{r3, lr}
 891              	.LCFI14:
 892              		.cfi_def_cfa_offset 8
 893              		.cfi_offset 3, -8
 894              		.cfi_offset 14, -4
 484:Src/main.c    ****   /* USER CODE BEGIN Callback 0 */
 485:Src/main.c    **** 
 486:Src/main.c    ****   /* USER CODE END Callback 0 */
 487:Src/main.c    ****   if (htim->Instance == TIM1) {
 895              		.loc 1 487 3 is_stmt 1 view .LVU278
 896              		.loc 1 487 11 is_stmt 0 view .LVU279
 897 0002 0268     		ldr	r2, [r0]
 898              		.loc 1 487 6 view .LVU280
 899 0004 034B     		ldr	r3, .L34
 900 0006 9A42     		cmp	r2, r3
 901 0008 00D0     		beq	.L33
 902              	.LVL39:
 903              	.L30:
 488:Src/main.c    ****     HAL_IncTick();
 489:Src/main.c    ****   }
 490:Src/main.c    ****   /* USER CODE BEGIN Callback 1 */
 491:Src/main.c    **** 
 492:Src/main.c    ****   /* USER CODE END Callback 1 */
 493:Src/main.c    **** }
 904              		.loc 1 493 1 view .LVU281
 905 000a 08BD     		pop	{r3, pc}
 906              	.LVL40:
 907              	.L33:
 488:Src/main.c    ****     HAL_IncTick();
 908              		.loc 1 488 5 is_stmt 1 view .LVU282
 909 000c FFF7FEFF 		bl	HAL_IncTick
 910              	.LVL41:
 911              		.loc 1 493 1 is_stmt 0 view .LVU283
 912 0010 FBE7     		b	.L30
 913              	.L35:
 914 0012 00BF     		.align	2
 915              	.L34:
 916 0014 00000140 		.word	1073807360
 917              		.cfi_endproc
 918              	.LFE152:
 920              		.section	.text.Error_Handler,"ax",%progbits
 921              		.align	1
 922              		.global	Error_Handler
 923              		.syntax unified
 924              		.thumb
 925              		.thumb_func
 926              		.fpu fpv5-d16
 928              	Error_Handler:
 929              	.LFB153:
ARM GAS  /tmp/ccEgivj9.s 			page 29


 494:Src/main.c    **** 
 495:Src/main.c    **** /**
 496:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 497:Src/main.c    ****   * @retval None
 498:Src/main.c    ****   */
 499:Src/main.c    **** void Error_Handler(void)
 500:Src/main.c    **** {
 930              		.loc 1 500 1 is_stmt 1 view -0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 0
 933              		@ frame_needed = 0, uses_anonymous_args = 0
 934              		@ link register save eliminated.
 501:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 502:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 503:Src/main.c    **** 
 504:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 505:Src/main.c    **** }
 935              		.loc 1 505 1 view .LVU285
 936 0000 7047     		bx	lr
 937              		.cfi_endproc
 938              	.LFE153:
 940              		.comm	defaultTaskHandle,4,4
 941              		.comm	hpcd_USB_OTG_FS,1032,4
 942              		.comm	huart3,140,4
 943              		.comm	heth,112,4
 944              		.comm	TxConfig,52,4
 945              		.global	Rx_Buff
 946              		.global	DMATxDscrTab
 947              		.global	DMARxDscrTab
 948              		.section	.RxArraySection,"aw"
 949              		.align	2
 952              	Rx_Buff:
 953 0000 00000000 		.space	6112
 953      00000000 
 953      00000000 
 953      00000000 
 953      00000000 
 954              		.section	.RxDecripSection,"aw"
 955              		.align	2
 956              		.set	.LANCHOR1,. + 0
 959              	DMARxDscrTab:
 960 0000 00000000 		.space	96
 960      00000000 
 960      00000000 
 960      00000000 
 960      00000000 
 961              		.section	.TxDecripSection,"aw"
 962              		.align	2
 963              		.set	.LANCHOR0,. + 0
 966              	DMATxDscrTab:
 967 0000 00000000 		.space	96
 967      00000000 
 967      00000000 
 967      00000000 
 967      00000000 
 968              		.text
 969              	.Letext0:
ARM GAS  /tmp/ccEgivj9.s 			page 30


 970              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 971              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 972              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 973              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 974              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 975              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 976              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 977              		.file 9 "/usr/lib/gcc/arm-none-eabi/9.1.0/include/stddef.h"
 978              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 979              		.file 11 "/usr/arm-none-eabi/include/math.h"
 980              		.file 12 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 981              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 982              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 983              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc_ex.h"
 984              		.file 16 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_gpio.h"
 985              		.file 17 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 986              		.file 18 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_eth.h"
 987              		.file 19 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 988              		.file 20 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim.h"
 989              		.file 21 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 990              		.file 22 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_usb.h"
 991              		.file 23 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_pcd.h"
 992              		.file 24 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 993              		.file 25 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 994              		.file 26 "BSP/stm32h7xx_nucleo_144.h"
 995              		.file 27 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart_ex.h"
 996              		.file 28 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_pwr_ex.h"
 997              		.file 29 "<built-in>"
ARM GAS  /tmp/ccEgivj9.s 			page 31


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccEgivj9.s:17     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccEgivj9.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccEgivj9.s:266    .text.MX_GPIO_Init:000000000000014c $d
     /tmp/ccEgivj9.s:277    .text.MX_ETH_Init:0000000000000000 $t
     /tmp/ccEgivj9.s:283    .text.MX_ETH_Init:0000000000000000 MX_ETH_Init
     /tmp/ccEgivj9.s:373    .text.MX_ETH_Init:0000000000000060 $d
                            *COM*:0000000000000070 heth
                            *COM*:0000000000000034 TxConfig
     /tmp/ccEgivj9.s:382    .text.MX_USART3_UART_Init:0000000000000000 $t
     /tmp/ccEgivj9.s:388    .text.MX_USART3_UART_Init:0000000000000000 MX_USART3_UART_Init
     /tmp/ccEgivj9.s:466    .text.MX_USART3_UART_Init:0000000000000044 $d
                            *COM*:000000000000008c huart3
     /tmp/ccEgivj9.s:472    .text.MX_USB_OTG_FS_PCD_Init:0000000000000000 $t
     /tmp/ccEgivj9.s:478    .text.MX_USB_OTG_FS_PCD_Init:0000000000000000 MX_USB_OTG_FS_PCD_Init
     /tmp/ccEgivj9.s:537    .text.MX_USB_OTG_FS_PCD_Init:000000000000002c $d
                            *COM*:0000000000000408 hpcd_USB_OTG_FS
     /tmp/ccEgivj9.s:543    .text.StartDefaultTask:0000000000000000 $t
     /tmp/ccEgivj9.s:550    .text.StartDefaultTask:0000000000000000 StartDefaultTask
     /tmp/ccEgivj9.s:580    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccEgivj9.s:587    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccEgivj9.s:778    .text.SystemClock_Config:00000000000000cc $d
     /tmp/ccEgivj9.s:785    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccEgivj9.s:789    .text.main:0000000000000000 $t
     /tmp/ccEgivj9.s:796    .text.main:0000000000000000 main
     /tmp/ccEgivj9.s:868    .text.main:0000000000000050 $d
                            *COM*:0000000000000004 defaultTaskHandle
     /tmp/ccEgivj9.s:875    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccEgivj9.s:882    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccEgivj9.s:916    .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
     /tmp/ccEgivj9.s:921    .text.Error_Handler:0000000000000000 $t
     /tmp/ccEgivj9.s:928    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccEgivj9.s:952    .RxArraySection:0000000000000000 Rx_Buff
     /tmp/ccEgivj9.s:966    .TxDecripSection:0000000000000000 DMATxDscrTab
     /tmp/ccEgivj9.s:959    .RxDecripSection:0000000000000000 DMARxDscrTab
     /tmp/ccEgivj9.s:949    .RxArraySection:0000000000000000 $d
     /tmp/ccEgivj9.s:955    .RxDecripSection:0000000000000000 $d
     /tmp/ccEgivj9.s:962    .TxDecripSection:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_ETH_Init
memset
HAL_UART_Init
HAL_UARTEx_SetTxFifoThreshold
HAL_UARTEx_SetRxFifoThreshold
HAL_UARTEx_DisableFifoMode
HAL_PCD_Init
BSP_LED_Toggle
osDelay
HAL_PWREx_ConfigSupply
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_PWREx_EnableUSBVoltageDetector
ARM GAS  /tmp/ccEgivj9.s 			page 32


HAL_Init
BSP_LED_Init
osKernelInitialize
osThreadNew
osKernelStart
HAL_IncTick
