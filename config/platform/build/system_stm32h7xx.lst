ARM GAS  /tmp/ccAzqaAP.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"system_stm32h7xx.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.SystemInit,"ax",%progbits
  17              		.align	1
  18              		.global	SystemInit
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	SystemInit:
  26              	.LFB141:
  27              		.file 1 "Src/system_stm32h7xx.c"
   1:Src/system_stm32h7xx.c **** /**
   2:Src/system_stm32h7xx.c ****   ******************************************************************************
   3:Src/system_stm32h7xx.c ****   * @file    system_stm32h7xx.c
   4:Src/system_stm32h7xx.c ****   * @author  MCD Application Team
   5:Src/system_stm32h7xx.c ****   * @brief   CMSIS Cortex-Mx Device Peripheral Access Layer System Source File.
   6:Src/system_stm32h7xx.c ****   *
   7:Src/system_stm32h7xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Src/system_stm32h7xx.c ****   *   user application:
   9:Src/system_stm32h7xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Src/system_stm32h7xx.c ****   *                      before branch to main program. This call is made inside
  11:Src/system_stm32h7xx.c ****   *                      the "startup_stm32h7xx.s" file.
  12:Src/system_stm32h7xx.c ****   *
  13:Src/system_stm32h7xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Src/system_stm32h7xx.c ****   *                                  by the user application to setup the SysTick
  15:Src/system_stm32h7xx.c ****   *                                  timer or configure other parameters.
  16:Src/system_stm32h7xx.c ****   *
  17:Src/system_stm32h7xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Src/system_stm32h7xx.c ****   *                                 be called whenever the core clock is changed
  19:Src/system_stm32h7xx.c ****   *                                 during program execution.
  20:Src/system_stm32h7xx.c ****   *
  21:Src/system_stm32h7xx.c ****   *
  22:Src/system_stm32h7xx.c ****   ******************************************************************************
  23:Src/system_stm32h7xx.c ****   * @attention
  24:Src/system_stm32h7xx.c ****   *
  25:Src/system_stm32h7xx.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  26:Src/system_stm32h7xx.c ****   * All rights reserved.</center></h2>
  27:Src/system_stm32h7xx.c ****   *
  28:Src/system_stm32h7xx.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  29:Src/system_stm32h7xx.c ****   * the "License"; You may not use this file except in compliance with the
  30:Src/system_stm32h7xx.c ****   * License. You may obtain a copy of the License at:
  31:Src/system_stm32h7xx.c ****   *                        opensource.org/licenses/BSD-3-Clause
ARM GAS  /tmp/ccAzqaAP.s 			page 2


  32:Src/system_stm32h7xx.c ****   *
  33:Src/system_stm32h7xx.c ****   ******************************************************************************
  34:Src/system_stm32h7xx.c ****   */
  35:Src/system_stm32h7xx.c **** 
  36:Src/system_stm32h7xx.c **** /** @addtogroup CMSIS
  37:Src/system_stm32h7xx.c ****   * @{
  38:Src/system_stm32h7xx.c ****   */
  39:Src/system_stm32h7xx.c **** 
  40:Src/system_stm32h7xx.c **** /** @addtogroup stm32h7xx_system
  41:Src/system_stm32h7xx.c ****   * @{
  42:Src/system_stm32h7xx.c ****   */
  43:Src/system_stm32h7xx.c **** 
  44:Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Includes
  45:Src/system_stm32h7xx.c ****   * @{
  46:Src/system_stm32h7xx.c ****   */
  47:Src/system_stm32h7xx.c **** 
  48:Src/system_stm32h7xx.c **** #include "stm32h7xx.h"
  49:Src/system_stm32h7xx.c **** #include <math.h>
  50:Src/system_stm32h7xx.c **** #if !defined  (HSE_VALUE)
  51:Src/system_stm32h7xx.c **** #define HSE_VALUE    ((uint32_t)25000000) /*!< Value of the External oscillator in Hz */
  52:Src/system_stm32h7xx.c **** #endif /* HSE_VALUE */
  53:Src/system_stm32h7xx.c **** 
  54:Src/system_stm32h7xx.c **** #if !defined  (CSI_VALUE)
  55:Src/system_stm32h7xx.c ****   #define CSI_VALUE    ((uint32_t)4000000) /*!< Value of the Internal oscillator in Hz*/
  56:Src/system_stm32h7xx.c **** #endif /* CSI_VALUE */
  57:Src/system_stm32h7xx.c **** 
  58:Src/system_stm32h7xx.c **** #if !defined  (HSI_VALUE)
  59:Src/system_stm32h7xx.c ****   #define HSI_VALUE    ((uint32_t)64000000) /*!< Value of the Internal oscillator in Hz*/
  60:Src/system_stm32h7xx.c **** #endif /* HSI_VALUE */
  61:Src/system_stm32h7xx.c **** 
  62:Src/system_stm32h7xx.c **** 
  63:Src/system_stm32h7xx.c **** /**
  64:Src/system_stm32h7xx.c ****   * @}
  65:Src/system_stm32h7xx.c ****   */
  66:Src/system_stm32h7xx.c **** 
  67:Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_TypesDefinitions
  68:Src/system_stm32h7xx.c ****   * @{
  69:Src/system_stm32h7xx.c ****   */
  70:Src/system_stm32h7xx.c **** 
  71:Src/system_stm32h7xx.c **** /**
  72:Src/system_stm32h7xx.c ****   * @}
  73:Src/system_stm32h7xx.c ****   */
  74:Src/system_stm32h7xx.c **** 
  75:Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Defines
  76:Src/system_stm32h7xx.c ****   * @{
  77:Src/system_stm32h7xx.c ****   */
  78:Src/system_stm32h7xx.c **** 
  79:Src/system_stm32h7xx.c **** /************************* Miscellaneous Configuration ************************/
  80:Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to use initialized data in D2 domain SRAM (AHB SRAM) 
  81:Src/system_stm32h7xx.c **** /* #define DATA_IN_D2_SRAM */
  82:Src/system_stm32h7xx.c **** 
  83:Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
  84:Src/system_stm32h7xx.c ****      Internal SRAM. */
  85:Src/system_stm32h7xx.c **** /* #define VECT_TAB_SRAM */
  86:Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET  0x00000000UL /*!< Vector Table base offset field.
  87:Src/system_stm32h7xx.c ****                                       This value must be a multiple of 0x200. */
  88:Src/system_stm32h7xx.c **** /******************************************************************************/
ARM GAS  /tmp/ccAzqaAP.s 			page 3


  89:Src/system_stm32h7xx.c **** 
  90:Src/system_stm32h7xx.c **** /**
  91:Src/system_stm32h7xx.c ****   * @}
  92:Src/system_stm32h7xx.c ****   */
  93:Src/system_stm32h7xx.c **** 
  94:Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Macros
  95:Src/system_stm32h7xx.c ****   * @{
  96:Src/system_stm32h7xx.c ****   */
  97:Src/system_stm32h7xx.c **** 
  98:Src/system_stm32h7xx.c **** /**
  99:Src/system_stm32h7xx.c ****   * @}
 100:Src/system_stm32h7xx.c ****   */
 101:Src/system_stm32h7xx.c **** 
 102:Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Variables
 103:Src/system_stm32h7xx.c ****   * @{
 104:Src/system_stm32h7xx.c ****   */
 105:Src/system_stm32h7xx.c ****   /* This variable is updated in three ways:
 106:Src/system_stm32h7xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 107:Src/system_stm32h7xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 108:Src/system_stm32h7xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 109:Src/system_stm32h7xx.c ****          Note: If you use this function to configure the system clock; then there
 110:Src/system_stm32h7xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 111:Src/system_stm32h7xx.c ****                variable is updated automatically.
 112:Src/system_stm32h7xx.c ****   */
 113:Src/system_stm32h7xx.c ****   uint32_t SystemCoreClock = 64000000;
 114:Src/system_stm32h7xx.c ****   uint32_t SystemD2Clock = 64000000;
 115:Src/system_stm32h7xx.c ****   const  uint8_t D1CorePrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 116:Src/system_stm32h7xx.c **** 
 117:Src/system_stm32h7xx.c **** /**
 118:Src/system_stm32h7xx.c ****   * @}
 119:Src/system_stm32h7xx.c ****   */
 120:Src/system_stm32h7xx.c **** 
 121:Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_FunctionPrototypes
 122:Src/system_stm32h7xx.c ****   * @{
 123:Src/system_stm32h7xx.c ****   */
 124:Src/system_stm32h7xx.c **** 
 125:Src/system_stm32h7xx.c **** /**
 126:Src/system_stm32h7xx.c ****   * @}
 127:Src/system_stm32h7xx.c ****   */
 128:Src/system_stm32h7xx.c **** 
 129:Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Functions
 130:Src/system_stm32h7xx.c ****   * @{
 131:Src/system_stm32h7xx.c ****   */
 132:Src/system_stm32h7xx.c **** 
 133:Src/system_stm32h7xx.c **** /**
 134:Src/system_stm32h7xx.c ****   * @brief  Setup the microcontroller system
 135:Src/system_stm32h7xx.c ****   *         Initialize the FPU setting and  vector table location
 136:Src/system_stm32h7xx.c ****   *         configuration.
 137:Src/system_stm32h7xx.c ****   * @param  None
 138:Src/system_stm32h7xx.c ****   * @retval None
 139:Src/system_stm32h7xx.c ****   */
 140:Src/system_stm32h7xx.c **** void SystemInit (void)
 141:Src/system_stm32h7xx.c **** {
  28              		.loc 1 141 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccAzqaAP.s 			page 4


  32              		@ link register save eliminated.
 142:Src/system_stm32h7xx.c **** #if defined (DATA_IN_D2_SRAM)
 143:Src/system_stm32h7xx.c ****  __IO uint32_t tmpreg;
 144:Src/system_stm32h7xx.c **** #endif /* DATA_IN_D2_SRAM */
 145:Src/system_stm32h7xx.c **** 
 146:Src/system_stm32h7xx.c ****   /* FPU settings ------------------------------------------------------------*/
 147:Src/system_stm32h7xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 148:Src/system_stm32h7xx.c ****     SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
  33              		.loc 1 148 5 view .LVU1
  34              		.loc 1 148 16 is_stmt 0 view .LVU2
  35 0000 184A     		ldr	r2, .L3
  36 0002 D2F88830 		ldr	r3, [r2, #136]
  37 0006 43F47003 		orr	r3, r3, #15728640
  38 000a C2F88830 		str	r3, [r2, #136]
 149:Src/system_stm32h7xx.c ****   #endif
 150:Src/system_stm32h7xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 151:Src/system_stm32h7xx.c ****   /* Set HSION bit */
 152:Src/system_stm32h7xx.c ****   RCC->CR |= RCC_CR_HSION;
  39              		.loc 1 152 3 is_stmt 1 view .LVU3
  40              		.loc 1 152 11 is_stmt 0 view .LVU4
  41 000e 164B     		ldr	r3, .L3+4
  42 0010 1A68     		ldr	r2, [r3]
  43 0012 42F00102 		orr	r2, r2, #1
  44 0016 1A60     		str	r2, [r3]
 153:Src/system_stm32h7xx.c **** 
 154:Src/system_stm32h7xx.c ****   /* Reset CFGR register */
 155:Src/system_stm32h7xx.c ****   RCC->CFGR = 0x00000000;
  45              		.loc 1 155 3 is_stmt 1 view .LVU5
  46              		.loc 1 155 13 is_stmt 0 view .LVU6
  47 0018 0022     		movs	r2, #0
  48 001a 1A61     		str	r2, [r3, #16]
 156:Src/system_stm32h7xx.c **** 
 157:Src/system_stm32h7xx.c ****   /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
 158:Src/system_stm32h7xx.c ****   RCC->CR &= 0xEAF6ED7FU;
  49              		.loc 1 158 3 is_stmt 1 view .LVU7
  50              		.loc 1 158 11 is_stmt 0 view .LVU8
  51 001c 1868     		ldr	r0, [r3]
  52 001e 1349     		ldr	r1, .L3+8
  53 0020 0140     		ands	r1, r1, r0
  54 0022 1960     		str	r1, [r3]
 159:Src/system_stm32h7xx.c **** 
 160:Src/system_stm32h7xx.c ****   /* Reset D1CFGR register */
 161:Src/system_stm32h7xx.c ****   RCC->D1CFGR = 0x00000000;
  55              		.loc 1 161 3 is_stmt 1 view .LVU9
  56              		.loc 1 161 15 is_stmt 0 view .LVU10
  57 0024 9A61     		str	r2, [r3, #24]
 162:Src/system_stm32h7xx.c **** 
 163:Src/system_stm32h7xx.c ****   /* Reset D2CFGR register */
 164:Src/system_stm32h7xx.c ****   RCC->D2CFGR = 0x00000000;
  58              		.loc 1 164 3 is_stmt 1 view .LVU11
  59              		.loc 1 164 15 is_stmt 0 view .LVU12
  60 0026 DA61     		str	r2, [r3, #28]
 165:Src/system_stm32h7xx.c **** 
 166:Src/system_stm32h7xx.c ****   /* Reset D3CFGR register */
 167:Src/system_stm32h7xx.c ****   RCC->D3CFGR = 0x00000000;
  61              		.loc 1 167 3 is_stmt 1 view .LVU13
  62              		.loc 1 167 15 is_stmt 0 view .LVU14
ARM GAS  /tmp/ccAzqaAP.s 			page 5


  63 0028 1A62     		str	r2, [r3, #32]
 168:Src/system_stm32h7xx.c **** 
 169:Src/system_stm32h7xx.c ****   /* Reset PLLCKSELR register */
 170:Src/system_stm32h7xx.c ****   RCC->PLLCKSELR = 0x00000000;
  64              		.loc 1 170 3 is_stmt 1 view .LVU15
  65              		.loc 1 170 18 is_stmt 0 view .LVU16
  66 002a 9A62     		str	r2, [r3, #40]
 171:Src/system_stm32h7xx.c **** 
 172:Src/system_stm32h7xx.c ****   /* Reset PLLCFGR register */
 173:Src/system_stm32h7xx.c ****   RCC->PLLCFGR = 0x00000000;
  67              		.loc 1 173 3 is_stmt 1 view .LVU17
  68              		.loc 1 173 16 is_stmt 0 view .LVU18
  69 002c DA62     		str	r2, [r3, #44]
 174:Src/system_stm32h7xx.c ****   /* Reset PLL1DIVR register */
 175:Src/system_stm32h7xx.c ****   RCC->PLL1DIVR = 0x00000000;
  70              		.loc 1 175 3 is_stmt 1 view .LVU19
  71              		.loc 1 175 17 is_stmt 0 view .LVU20
  72 002e 1A63     		str	r2, [r3, #48]
 176:Src/system_stm32h7xx.c ****   /* Reset PLL1FRACR register */
 177:Src/system_stm32h7xx.c ****   RCC->PLL1FRACR = 0x00000000;
  73              		.loc 1 177 3 is_stmt 1 view .LVU21
  74              		.loc 1 177 18 is_stmt 0 view .LVU22
  75 0030 5A63     		str	r2, [r3, #52]
 178:Src/system_stm32h7xx.c **** 
 179:Src/system_stm32h7xx.c ****   /* Reset PLL2DIVR register */
 180:Src/system_stm32h7xx.c ****   RCC->PLL2DIVR = 0x00000000;
  76              		.loc 1 180 3 is_stmt 1 view .LVU23
  77              		.loc 1 180 17 is_stmt 0 view .LVU24
  78 0032 9A63     		str	r2, [r3, #56]
 181:Src/system_stm32h7xx.c **** 
 182:Src/system_stm32h7xx.c ****   /* Reset PLL2FRACR register */
 183:Src/system_stm32h7xx.c **** 
 184:Src/system_stm32h7xx.c ****   RCC->PLL2FRACR = 0x00000000;
  79              		.loc 1 184 3 is_stmt 1 view .LVU25
  80              		.loc 1 184 18 is_stmt 0 view .LVU26
  81 0034 DA63     		str	r2, [r3, #60]
 185:Src/system_stm32h7xx.c ****   /* Reset PLL3DIVR register */
 186:Src/system_stm32h7xx.c ****   RCC->PLL3DIVR = 0x00000000;
  82              		.loc 1 186 3 is_stmt 1 view .LVU27
  83              		.loc 1 186 17 is_stmt 0 view .LVU28
  84 0036 1A64     		str	r2, [r3, #64]
 187:Src/system_stm32h7xx.c **** 
 188:Src/system_stm32h7xx.c ****   /* Reset PLL3FRACR register */
 189:Src/system_stm32h7xx.c ****   RCC->PLL3FRACR = 0x00000000;
  85              		.loc 1 189 3 is_stmt 1 view .LVU29
  86              		.loc 1 189 18 is_stmt 0 view .LVU30
  87 0038 5A64     		str	r2, [r3, #68]
 190:Src/system_stm32h7xx.c **** 
 191:Src/system_stm32h7xx.c ****   /* Reset HSEBYP bit */
 192:Src/system_stm32h7xx.c ****   RCC->CR &= 0xFFFBFFFFU;
  88              		.loc 1 192 3 is_stmt 1 view .LVU31
  89              		.loc 1 192 11 is_stmt 0 view .LVU32
  90 003a 1968     		ldr	r1, [r3]
  91 003c 21F48021 		bic	r1, r1, #262144
  92 0040 1960     		str	r1, [r3]
 193:Src/system_stm32h7xx.c **** 
 194:Src/system_stm32h7xx.c ****   /* Disable all interrupts */
ARM GAS  /tmp/ccAzqaAP.s 			page 6


 195:Src/system_stm32h7xx.c ****   RCC->CIER = 0x00000000;
  93              		.loc 1 195 3 is_stmt 1 view .LVU33
  94              		.loc 1 195 13 is_stmt 0 view .LVU34
  95 0042 1A66     		str	r2, [r3, #96]
 196:Src/system_stm32h7xx.c **** 
 197:Src/system_stm32h7xx.c **** #if defined (DATA_IN_D2_SRAM)
 198:Src/system_stm32h7xx.c ****   /* in case of initialized data in D2 SRAM (AHB SRAM) , enable the D2 SRAM clock ((AHB SRAM clock)
 199:Src/system_stm32h7xx.c **** #if defined(RCC_AHB2ENR_D2SRAM1EN)
 200:Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_D2SRAM1EN | RCC_AHB2ENR_D2SRAM2EN | RCC_AHB2ENR_D2SRAM3EN);
 201:Src/system_stm32h7xx.c **** #else
 202:Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_AHBSRAM1EN | RCC_AHB2ENR_AHBSRAM2EN);
 203:Src/system_stm32h7xx.c **** #endif /* RCC_AHB2ENR_D2SRAM1EN */
 204:Src/system_stm32h7xx.c **** 
 205:Src/system_stm32h7xx.c ****   tmpreg = RCC->AHB2ENR;
 206:Src/system_stm32h7xx.c ****   (void) tmpreg;
 207:Src/system_stm32h7xx.c **** #endif /* DATA_IN_D2_SRAM */
 208:Src/system_stm32h7xx.c **** 
 209:Src/system_stm32h7xx.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
 210:Src/system_stm32h7xx.c ****   /* Configure the Vector Table location add offset address for cortex-M4 ------------------*/
 211:Src/system_stm32h7xx.c **** #ifdef VECT_TAB_SRAM
 212:Src/system_stm32h7xx.c ****   SCB->VTOR = D2_AHBSRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 213:Src/system_stm32h7xx.c **** #else
 214:Src/system_stm32h7xx.c ****   SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 215:Src/system_stm32h7xx.c **** #endif /* VECT_TAB_SRAM */
 216:Src/system_stm32h7xx.c **** 
 217:Src/system_stm32h7xx.c **** #else
 218:Src/system_stm32h7xx.c ****   /* dual core CM7 or single core line */
 219:Src/system_stm32h7xx.c ****   if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
  96              		.loc 1 219 3 is_stmt 1 view .LVU35
  97              		.loc 1 219 13 is_stmt 0 view .LVU36
  98 0044 0A4B     		ldr	r3, .L3+12
  99 0046 1A68     		ldr	r2, [r3]
 100              		.loc 1 219 22 view .LVU37
 101 0048 0A4B     		ldr	r3, .L3+16
 102 004a 1340     		ands	r3, r3, r2
 103              		.loc 1 219 5 view .LVU38
 104 004c B3F1005F 		cmp	r3, #536870912
 105 0050 02D2     		bcs	.L2
 220:Src/system_stm32h7xx.c ****   {
 221:Src/system_stm32h7xx.c ****     /* if stm32h7 revY*/
 222:Src/system_stm32h7xx.c ****     /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
 223:Src/system_stm32h7xx.c ****     *((__IO uint32_t*)0x51008108) = 0x000000001U;
 106              		.loc 1 223 5 is_stmt 1 view .LVU39
 107              		.loc 1 223 35 is_stmt 0 view .LVU40
 108 0052 094B     		ldr	r3, .L3+20
 109 0054 0122     		movs	r2, #1
 110 0056 1A60     		str	r2, [r3]
 111              	.L2:
 224:Src/system_stm32h7xx.c ****   }
 225:Src/system_stm32h7xx.c **** 
 226:Src/system_stm32h7xx.c ****   /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
 227:Src/system_stm32h7xx.c **** #ifdef VECT_TAB_SRAM
 228:Src/system_stm32h7xx.c ****   SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM
 229:Src/system_stm32h7xx.c **** #else
 230:Src/system_stm32h7xx.c ****   SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 112              		.loc 1 230 3 is_stmt 1 view .LVU41
 113              		.loc 1 230 13 is_stmt 0 view .LVU42
ARM GAS  /tmp/ccAzqaAP.s 			page 7


 114 0058 024B     		ldr	r3, .L3
 115 005a 4FF00062 		mov	r2, #134217728
 116 005e 9A60     		str	r2, [r3, #8]
 231:Src/system_stm32h7xx.c **** #endif
 232:Src/system_stm32h7xx.c **** 
 233:Src/system_stm32h7xx.c **** #endif /*DUAL_CORE && CORE_CM4*/
 234:Src/system_stm32h7xx.c **** 
 235:Src/system_stm32h7xx.c **** }
 117              		.loc 1 235 1 view .LVU43
 118 0060 7047     		bx	lr
 119              	.L4:
 120 0062 00BF     		.align	2
 121              	.L3:
 122 0064 00ED00E0 		.word	-536810240
 123 0068 00440258 		.word	1476543488
 124 006c 7FEDF6EA 		.word	-352916097
 125 0070 0010005C 		.word	1543507968
 126 0074 0000FFFF 		.word	-65536
 127 0078 08810051 		.word	1358987528
 128              		.cfi_endproc
 129              	.LFE141:
 131              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 132              		.align	1
 133              		.global	SystemCoreClockUpdate
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 137              		.fpu fpv5-d16
 139              	SystemCoreClockUpdate:
 140              	.LFB142:
 236:Src/system_stm32h7xx.c **** 
 237:Src/system_stm32h7xx.c **** /**
 238:Src/system_stm32h7xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 239:Src/system_stm32h7xx.c ****   *         The SystemCoreClock variable contains the core clock , it can
 240:Src/system_stm32h7xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 241:Src/system_stm32h7xx.c ****   *         other parameters.
 242:Src/system_stm32h7xx.c ****   *
 243:Src/system_stm32h7xx.c ****   * @note   Each time the core clock changes, this function must be called
 244:Src/system_stm32h7xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 245:Src/system_stm32h7xx.c ****   *         based on this variable will be incorrect.
 246:Src/system_stm32h7xx.c ****   *
 247:Src/system_stm32h7xx.c ****   * @note   - The system frequency computed by this function is not the real
 248:Src/system_stm32h7xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 249:Src/system_stm32h7xx.c ****   *           constant and the selected clock source:
 250:Src/system_stm32h7xx.c ****   *
 251:Src/system_stm32h7xx.c ****   *           - If SYSCLK source is CSI, SystemCoreClock will contain the CSI_VALUE(*)
 252:Src/system_stm32h7xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 253:Src/system_stm32h7xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 254:Src/system_stm32h7xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the CSI_VALUE(*),
 255:Src/system_stm32h7xx.c ****   *             HSI_VALUE(**) or HSE_VALUE(***) multiplied/divided by the PLL factors.
 256:Src/system_stm32h7xx.c ****   *
 257:Src/system_stm32h7xx.c ****   *         (*) CSI_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 258:Src/system_stm32h7xx.c ****   *             4 MHz) but the real value may vary depending on the variations
 259:Src/system_stm32h7xx.c ****   *             in voltage and temperature.
 260:Src/system_stm32h7xx.c ****   *         (**) HSI_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 261:Src/system_stm32h7xx.c ****   *             64 MHz) but the real value may vary depending on the variations
 262:Src/system_stm32h7xx.c ****   *             in voltage and temperature.
ARM GAS  /tmp/ccAzqaAP.s 			page 8


 263:Src/system_stm32h7xx.c ****   *
 264:Src/system_stm32h7xx.c ****   *         (***)HSE_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 265:Src/system_stm32h7xx.c ****   *              25 MHz), user has to ensure that HSE_VALUE is same as the real
 266:Src/system_stm32h7xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 267:Src/system_stm32h7xx.c ****   *              have wrong result.
 268:Src/system_stm32h7xx.c ****   *
 269:Src/system_stm32h7xx.c ****   *         - The result of this function could be not correct when using fractional
 270:Src/system_stm32h7xx.c ****   *           value for HSE crystal.
 271:Src/system_stm32h7xx.c ****   * @param  None
 272:Src/system_stm32h7xx.c ****   * @retval None
 273:Src/system_stm32h7xx.c ****   */
 274:Src/system_stm32h7xx.c **** void SystemCoreClockUpdate (void)
 275:Src/system_stm32h7xx.c **** {
 141              		.loc 1 275 1 is_stmt 1 view -0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 146 0000 10B4     		push	{r4}
 147              	.LCFI0:
 148              		.cfi_def_cfa_offset 4
 149              		.cfi_offset 4, -4
 276:Src/system_stm32h7xx.c ****   uint32_t pllp, pllsource, pllm, pllfracen, hsivalue, tmp;
 150              		.loc 1 276 3 view .LVU45
 277:Src/system_stm32h7xx.c ****   float_t fracn1, pllvco;
 151              		.loc 1 277 3 view .LVU46
 278:Src/system_stm32h7xx.c **** 
 279:Src/system_stm32h7xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 280:Src/system_stm32h7xx.c **** 
 281:Src/system_stm32h7xx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 152              		.loc 1 281 3 view .LVU47
 153              		.loc 1 281 14 is_stmt 0 view .LVU48
 154 0002 7B4B     		ldr	r3, .L20
 155 0004 1B69     		ldr	r3, [r3, #16]
 156              		.loc 1 281 21 view .LVU49
 157 0006 03F03803 		and	r3, r3, #56
 158 000a 182B     		cmp	r3, #24
 159 000c 00F2EC80 		bhi	.L6
 160 0010 DFE813F0 		tbh	[pc, r3, lsl #1]
 161              	.L8:
 162 0014 1900     		.2byte	(.L11-.L8)/2
 163 0016 EA00     		.2byte	(.L6-.L8)/2
 164 0018 EA00     		.2byte	(.L6-.L8)/2
 165 001a EA00     		.2byte	(.L6-.L8)/2
 166 001c EA00     		.2byte	(.L6-.L8)/2
 167 001e EA00     		.2byte	(.L6-.L8)/2
 168 0020 EA00     		.2byte	(.L6-.L8)/2
 169 0022 EA00     		.2byte	(.L6-.L8)/2
 170 0024 3700     		.2byte	(.L10-.L8)/2
 171 0026 EA00     		.2byte	(.L6-.L8)/2
 172 0028 EA00     		.2byte	(.L6-.L8)/2
 173 002a EA00     		.2byte	(.L6-.L8)/2
 174 002c EA00     		.2byte	(.L6-.L8)/2
 175 002e EA00     		.2byte	(.L6-.L8)/2
 176 0030 EA00     		.2byte	(.L6-.L8)/2
 177 0032 EA00     		.2byte	(.L6-.L8)/2
 178 0034 3B00     		.2byte	(.L9-.L8)/2
ARM GAS  /tmp/ccAzqaAP.s 			page 9


 179 0036 EA00     		.2byte	(.L6-.L8)/2
 180 0038 EA00     		.2byte	(.L6-.L8)/2
 181 003a EA00     		.2byte	(.L6-.L8)/2
 182 003c EA00     		.2byte	(.L6-.L8)/2
 183 003e EA00     		.2byte	(.L6-.L8)/2
 184 0040 EA00     		.2byte	(.L6-.L8)/2
 185 0042 EA00     		.2byte	(.L6-.L8)/2
 186 0044 3F00     		.2byte	(.L7-.L8)/2
 187              		.p2align 1
 188              	.L11:
 282:Src/system_stm32h7xx.c ****   {
 283:Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
 284:Src/system_stm32h7xx.c ****     SystemCoreClock = (uint32_t) (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3));
 189              		.loc 1 284 5 is_stmt 1 view .LVU50
 190              		.loc 1 284 53 is_stmt 0 view .LVU51
 191 0046 6A4B     		ldr	r3, .L20
 192 0048 1A68     		ldr	r2, [r3]
 193              		.loc 1 284 74 view .LVU52
 194 004a C2F3C102 		ubfx	r2, r2, #3, #2
 195              		.loc 1 284 23 view .LVU53
 196 004e 694B     		ldr	r3, .L20+4
 197 0050 D340     		lsrs	r3, r3, r2
 198              		.loc 1 284 21 view .LVU54
 199 0052 694A     		ldr	r2, .L20+8
 200 0054 1360     		str	r3, [r2]
 285:Src/system_stm32h7xx.c ****     break;
 201              		.loc 1 285 5 is_stmt 1 view .LVU55
 202              	.L12:
 286:Src/system_stm32h7xx.c **** 
 287:Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_CSI:  /* CSI used as system clock  source */
 288:Src/system_stm32h7xx.c ****     SystemCoreClock = CSI_VALUE;
 289:Src/system_stm32h7xx.c ****     break;
 290:Src/system_stm32h7xx.c **** 
 291:Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
 292:Src/system_stm32h7xx.c ****     SystemCoreClock = HSE_VALUE;
 293:Src/system_stm32h7xx.c ****     break;
 294:Src/system_stm32h7xx.c **** 
 295:Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */
 296:Src/system_stm32h7xx.c **** 
 297:Src/system_stm32h7xx.c ****     /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
 298:Src/system_stm32h7xx.c ****     SYSCLK = PLL_VCO / PLLR
 299:Src/system_stm32h7xx.c ****     */
 300:Src/system_stm32h7xx.c ****     pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 301:Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 302:Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 303:Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 304:Src/system_stm32h7xx.c **** 
 305:Src/system_stm32h7xx.c ****     if (pllm != 0U)
 306:Src/system_stm32h7xx.c ****     {
 307:Src/system_stm32h7xx.c ****       switch (pllsource)
 308:Src/system_stm32h7xx.c ****       {
 309:Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_HSI:  /* HSI used as PLL clock source */
 310:Src/system_stm32h7xx.c **** 
 311:Src/system_stm32h7xx.c ****         hsivalue = (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3)) ;
 312:Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 313:Src/system_stm32h7xx.c **** 
 314:Src/system_stm32h7xx.c ****         break;
ARM GAS  /tmp/ccAzqaAP.s 			page 10


 315:Src/system_stm32h7xx.c **** 
 316:Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_CSI:  /* CSI used as PLL clock source */
 317:Src/system_stm32h7xx.c ****           pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
 318:Src/system_stm32h7xx.c ****         break;
 319:Src/system_stm32h7xx.c **** 
 320:Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_HSE:  /* HSE used as PLL clock source */
 321:Src/system_stm32h7xx.c ****           pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
 322:Src/system_stm32h7xx.c ****         break;
 323:Src/system_stm32h7xx.c **** 
 324:Src/system_stm32h7xx.c ****       default:
 325:Src/system_stm32h7xx.c ****           pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
 326:Src/system_stm32h7xx.c ****         break;
 327:Src/system_stm32h7xx.c ****       }
 328:Src/system_stm32h7xx.c ****       pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >>9) + 1U ) ;
 329:Src/system_stm32h7xx.c ****       SystemCoreClock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 330:Src/system_stm32h7xx.c ****     }
 331:Src/system_stm32h7xx.c ****     else
 332:Src/system_stm32h7xx.c ****     {
 333:Src/system_stm32h7xx.c ****       SystemCoreClock = 0U;
 334:Src/system_stm32h7xx.c ****     }
 335:Src/system_stm32h7xx.c ****     break;
 336:Src/system_stm32h7xx.c **** 
 337:Src/system_stm32h7xx.c ****   default:
 338:Src/system_stm32h7xx.c ****     SystemCoreClock = CSI_VALUE;
 339:Src/system_stm32h7xx.c ****     break;
 340:Src/system_stm32h7xx.c ****   }
 341:Src/system_stm32h7xx.c **** 
 342:Src/system_stm32h7xx.c ****   /* Compute SystemClock frequency --------------------------------------------------*/
 343:Src/system_stm32h7xx.c ****   tmp = D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos];
 203              		.loc 1 343 3 view .LVU56
 204              		.loc 1 343 30 is_stmt 0 view .LVU57
 205 0056 664A     		ldr	r2, .L20
 206 0058 9369     		ldr	r3, [r2, #24]
 207              		.loc 1 343 59 view .LVU58
 208 005a C3F30323 		ubfx	r3, r3, #8, #4
 209              		.loc 1 343 25 view .LVU59
 210 005e 6749     		ldr	r1, .L20+12
 211 0060 CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
 212              	.LVL0:
 344:Src/system_stm32h7xx.c **** 
 345:Src/system_stm32h7xx.c ****   /* SystemCoreClock frequency : CM7 CPU frequency  */
 346:Src/system_stm32h7xx.c ****   SystemCoreClock >>= tmp;
 213              		.loc 1 346 3 is_stmt 1 view .LVU60
 214              		.loc 1 346 19 is_stmt 0 view .LVU61
 215 0062 6548     		ldr	r0, .L20+8
 216 0064 0368     		ldr	r3, [r0]
 217 0066 E340     		lsrs	r3, r3, r4
 218 0068 0360     		str	r3, [r0]
 347:Src/system_stm32h7xx.c **** 
 348:Src/system_stm32h7xx.c ****   /* SystemD2Clock frequency : CM4 CPU, AXI and AHBs Clock frequency  */
 349:Src/system_stm32h7xx.c ****   SystemD2Clock = (SystemCoreClock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CF
 219              		.loc 1 349 3 is_stmt 1 view .LVU62
 220              		.loc 1 349 62 is_stmt 0 view .LVU63
 221 006a 9269     		ldr	r2, [r2, #24]
 222              		.loc 1 349 89 view .LVU64
 223 006c 02F00F02 		and	r2, r2, #15
 224              		.loc 1 349 57 view .LVU65
ARM GAS  /tmp/ccAzqaAP.s 			page 11


 225 0070 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 226              		.loc 1 349 114 view .LVU66
 227 0072 02F01F02 		and	r2, r2, #31
 228              		.loc 1 349 36 view .LVU67
 229 0076 D340     		lsrs	r3, r3, r2
 230              		.loc 1 349 17 view .LVU68
 231 0078 614A     		ldr	r2, .L20+16
 232 007a 1360     		str	r3, [r2]
 350:Src/system_stm32h7xx.c **** 
 351:Src/system_stm32h7xx.c **** }
 233              		.loc 1 351 1 view .LVU69
 234 007c 5DF8044B 		ldr	r4, [sp], #4
 235              	.LCFI1:
 236              		.cfi_remember_state
 237              		.cfi_restore 4
 238              		.cfi_def_cfa_offset 0
 239              	.LVL1:
 240              		.loc 1 351 1 view .LVU70
 241 0080 7047     		bx	lr
 242              	.L10:
 243              	.LCFI2:
 244              		.cfi_restore_state
 288:Src/system_stm32h7xx.c ****     break;
 245              		.loc 1 288 5 is_stmt 1 view .LVU71
 288:Src/system_stm32h7xx.c ****     break;
 246              		.loc 1 288 21 is_stmt 0 view .LVU72
 247 0082 5D4B     		ldr	r3, .L20+8
 248 0084 5F4A     		ldr	r2, .L20+20
 249 0086 1A60     		str	r2, [r3]
 289:Src/system_stm32h7xx.c **** 
 250              		.loc 1 289 5 is_stmt 1 view .LVU73
 251 0088 E5E7     		b	.L12
 252              	.L9:
 292:Src/system_stm32h7xx.c ****     break;
 253              		.loc 1 292 5 view .LVU74
 292:Src/system_stm32h7xx.c ****     break;
 254              		.loc 1 292 21 is_stmt 0 view .LVU75
 255 008a 5B4B     		ldr	r3, .L20+8
 256 008c 5E4A     		ldr	r2, .L20+24
 257 008e 1A60     		str	r2, [r3]
 293:Src/system_stm32h7xx.c **** 
 258              		.loc 1 293 5 is_stmt 1 view .LVU76
 259 0090 E1E7     		b	.L12
 260              	.L7:
 300:Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 261              		.loc 1 300 5 view .LVU77
 300:Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 262              		.loc 1 300 21 is_stmt 0 view .LVU78
 263 0092 574A     		ldr	r2, .L20
 264 0094 916A     		ldr	r1, [r2, #40]
 300:Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 265              		.loc 1 300 15 view .LVU79
 266 0096 01F00301 		and	r1, r1, #3
 267              	.LVL2:
 301:Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 268              		.loc 1 301 5 is_stmt 1 view .LVU80
 301:Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
ARM GAS  /tmp/ccAzqaAP.s 			page 12


 269              		.loc 1 301 17 is_stmt 0 view .LVU81
 270 009a 906A     		ldr	r0, [r2, #40]
 301:Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 271              		.loc 1 301 10 view .LVU82
 272 009c C0F30514 		ubfx	r4, r0, #4, #6
 273              	.LVL3:
 302:Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 274              		.loc 1 302 5 is_stmt 1 view .LVU83
 302:Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 275              		.loc 1 302 22 is_stmt 0 view .LVU84
 276 00a0 D36A     		ldr	r3, [r2, #44]
 302:Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 277              		.loc 1 302 15 view .LVU85
 278 00a2 03F00103 		and	r3, r3, #1
 279              	.LVL4:
 303:Src/system_stm32h7xx.c **** 
 280              		.loc 1 303 5 is_stmt 1 view .LVU86
 303:Src/system_stm32h7xx.c **** 
 281              		.loc 1 303 50 is_stmt 0 view .LVU87
 282 00a6 526B     		ldr	r2, [r2, #52]
 303:Src/system_stm32h7xx.c **** 
 283              		.loc 1 303 85 view .LVU88
 284 00a8 C2F3CC02 		ubfx	r2, r2, #3, #13
 303:Src/system_stm32h7xx.c **** 
 285              		.loc 1 303 23 view .LVU89
 286 00ac 03FB02F3 		mul	r3, r3, r2
 287              	.LVL5:
 303:Src/system_stm32h7xx.c **** 
 288              		.loc 1 303 12 view .LVU90
 289 00b0 07EE903A 		vmov	s15, r3	@ int
 290 00b4 F8EE677A 		vcvt.f32.u32	s15, s15
 291              	.LVL6:
 305:Src/system_stm32h7xx.c ****     {
 292              		.loc 1 305 5 is_stmt 1 view .LVU91
 305:Src/system_stm32h7xx.c ****     {
 293              		.loc 1 305 8 is_stmt 0 view .LVU92
 294 00b8 10F47C7F 		tst	r0, #1008
 295 00bc 00F09080 		beq	.L13
 307:Src/system_stm32h7xx.c ****       {
 296              		.loc 1 307 7 is_stmt 1 view .LVU93
 297 00c0 0129     		cmp	r1, #1
 298 00c2 53D0     		beq	.L14
 299 00c4 0229     		cmp	r1, #2
 300 00c6 6ED0     		beq	.L15
 301 00c8 E1B1     		cbz	r1, .L19
 325:Src/system_stm32h7xx.c ****         break;
 302              		.loc 1 325 11 view .LVU94
 325:Src/system_stm32h7xx.c ****         break;
 303              		.loc 1 325 42 is_stmt 0 view .LVU95
 304 00ca 07EE104A 		vmov	s14, r4	@ int
 305 00ce B8EE477A 		vcvt.f32.u32	s14, s14
 325:Src/system_stm32h7xx.c ****         break;
 306              		.loc 1 325 40 view .LVU96
 307 00d2 9FED4E6A 		vldr.32	s12, .L20+28
 308 00d6 C6EE076A 		vdiv.f32	s13, s12, s14
 325:Src/system_stm32h7xx.c ****         break;
 309              		.loc 1 325 83 view .LVU97
ARM GAS  /tmp/ccAzqaAP.s 			page 13


 310 00da 454B     		ldr	r3, .L20
 311 00dc 1B6B     		ldr	r3, [r3, #48]
 325:Src/system_stm32h7xx.c ****         break;
 312              		.loc 1 325 69 view .LVU98
 313 00de C3F30803 		ubfx	r3, r3, #0, #9
 325:Src/system_stm32h7xx.c ****         break;
 314              		.loc 1 325 60 view .LVU99
 315 00e2 07EE103A 		vmov	s14, r3	@ int
 316 00e6 B8EE477A 		vcvt.f32.u32	s14, s14
 325:Src/system_stm32h7xx.c ****         break;
 317              		.loc 1 325 122 view .LVU100
 318 00ea 9FED496A 		vldr.32	s12, .L20+32
 319 00ee 67EE867A 		vmul.f32	s15, s15, s12
 320              	.LVL7:
 325:Src/system_stm32h7xx.c ****         break;
 321              		.loc 1 325 113 view .LVU101
 322 00f2 77EE277A 		vadd.f32	s15, s14, s15
 325:Src/system_stm32h7xx.c ****         break;
 323              		.loc 1 325 140 view .LVU102
 324 00f6 B7EE007A 		vmov.f32	s14, #1.0e+0
 325 00fa 77EE877A 		vadd.f32	s15, s15, s14
 325:Src/system_stm32h7xx.c ****         break;
 326              		.loc 1 325 18 view .LVU103
 327 00fe 66EEA76A 		vmul.f32	s13, s13, s15
 328              	.LVL8:
 326:Src/system_stm32h7xx.c ****       }
 329              		.loc 1 326 9 is_stmt 1 view .LVU104
 330 0102 22E0     		b	.L17
 331              	.LVL9:
 332              	.L19:
 311:Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 333              		.loc 1 311 9 view .LVU105
 311:Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 334              		.loc 1 311 39 is_stmt 0 view .LVU106
 335 0104 3A49     		ldr	r1, .L20
 336              	.LVL10:
 311:Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 337              		.loc 1 311 39 view .LVU107
 338 0106 0A68     		ldr	r2, [r1]
 311:Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 339              		.loc 1 311 60 view .LVU108
 340 0108 C2F3C102 		ubfx	r2, r2, #3, #2
 311:Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 341              		.loc 1 311 18 view .LVU109
 342 010c 394B     		ldr	r3, .L20+4
 343 010e D340     		lsrs	r3, r3, r2
 344              	.LVL11:
 312:Src/system_stm32h7xx.c **** 
 345              		.loc 1 312 9 is_stmt 1 view .LVU110
 312:Src/system_stm32h7xx.c **** 
 346              		.loc 1 312 20 is_stmt 0 view .LVU111
 347 0110 07EE103A 		vmov	s14, r3	@ int
 348 0114 B8EE476A 		vcvt.f32.u32	s12, s14
 312:Src/system_stm32h7xx.c **** 
 349              		.loc 1 312 40 view .LVU112
 350 0118 07EE104A 		vmov	s14, r4	@ int
 351 011c B8EE477A 		vcvt.f32.u32	s14, s14
ARM GAS  /tmp/ccAzqaAP.s 			page 14


 312:Src/system_stm32h7xx.c **** 
 352              		.loc 1 312 38 view .LVU113
 353 0120 C6EE076A 		vdiv.f32	s13, s12, s14
 312:Src/system_stm32h7xx.c **** 
 354              		.loc 1 312 81 view .LVU114
 355 0124 0B6B     		ldr	r3, [r1, #48]
 356              	.LVL12:
 312:Src/system_stm32h7xx.c **** 
 357              		.loc 1 312 67 view .LVU115
 358 0126 C3F30803 		ubfx	r3, r3, #0, #9
 312:Src/system_stm32h7xx.c **** 
 359              		.loc 1 312 58 view .LVU116
 360 012a 07EE103A 		vmov	s14, r3	@ int
 361 012e B8EE477A 		vcvt.f32.u32	s14, s14
 312:Src/system_stm32h7xx.c **** 
 362              		.loc 1 312 120 view .LVU117
 363 0132 9FED376A 		vldr.32	s12, .L20+32
 364 0136 67EE867A 		vmul.f32	s15, s15, s12
 365              	.LVL13:
 312:Src/system_stm32h7xx.c **** 
 366              		.loc 1 312 111 view .LVU118
 367 013a 77EE277A 		vadd.f32	s15, s14, s15
 312:Src/system_stm32h7xx.c **** 
 368              		.loc 1 312 138 view .LVU119
 369 013e B7EE007A 		vmov.f32	s14, #1.0e+0
 370 0142 77EE877A 		vadd.f32	s15, s15, s14
 312:Src/system_stm32h7xx.c **** 
 371              		.loc 1 312 16 view .LVU120
 372 0146 66EEA76A 		vmul.f32	s13, s13, s15
 373              	.LVL14:
 314:Src/system_stm32h7xx.c **** 
 374              		.loc 1 314 9 is_stmt 1 view .LVU121
 375              	.L17:
 328:Src/system_stm32h7xx.c ****       SystemCoreClock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 376              		.loc 1 328 7 view .LVU122
 328:Src/system_stm32h7xx.c ****       SystemCoreClock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 377              		.loc 1 328 20 is_stmt 0 view .LVU123
 378 014a 294B     		ldr	r3, .L20
 379 014c 1B6B     		ldr	r3, [r3, #48]
 328:Src/system_stm32h7xx.c ****       SystemCoreClock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 380              		.loc 1 328 50 view .LVU124
 381 014e C3F34623 		ubfx	r3, r3, #9, #7
 328:Src/system_stm32h7xx.c ****       SystemCoreClock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 382              		.loc 1 328 12 view .LVU125
 383 0152 0133     		adds	r3, r3, #1
 384              	.LVL15:
 329:Src/system_stm32h7xx.c ****     }
 385              		.loc 1 329 7 is_stmt 1 view .LVU126
 329:Src/system_stm32h7xx.c ****     }
 386              		.loc 1 329 53 is_stmt 0 view .LVU127
 387 0154 07EE903A 		vmov	s15, r3	@ int
 388 0158 F8EE677A 		vcvt.f32.u32	s15, s15
 329:Src/system_stm32h7xx.c ****     }
 389              		.loc 1 329 36 view .LVU128
 390 015c 86EEA77A 		vdiv.f32	s14, s13, s15
 329:Src/system_stm32h7xx.c ****     }
 391              		.loc 1 329 26 view .LVU129
ARM GAS  /tmp/ccAzqaAP.s 			page 15


 392 0160 BCEEC77A 		vcvt.u32.f32	s14, s14
 329:Src/system_stm32h7xx.c ****     }
 393              		.loc 1 329 23 view .LVU130
 394 0164 244B     		ldr	r3, .L20+8
 395              	.LVL16:
 329:Src/system_stm32h7xx.c ****     }
 396              		.loc 1 329 23 view .LVU131
 397 0166 83ED007A 		vstr.32	s14, [r3]	@ int
 398 016a 74E7     		b	.L12
 399              	.LVL17:
 400              	.L14:
 317:Src/system_stm32h7xx.c ****         break;
 401              		.loc 1 317 11 is_stmt 1 view .LVU132
 317:Src/system_stm32h7xx.c ****         break;
 402              		.loc 1 317 42 is_stmt 0 view .LVU133
 403 016c 07EE104A 		vmov	s14, r4	@ int
 404 0170 B8EE477A 		vcvt.f32.u32	s14, s14
 317:Src/system_stm32h7xx.c ****         break;
 405              		.loc 1 317 40 view .LVU134
 406 0174 9FED256A 		vldr.32	s12, .L20+28
 407 0178 C6EE076A 		vdiv.f32	s13, s12, s14
 317:Src/system_stm32h7xx.c ****         break;
 408              		.loc 1 317 83 view .LVU135
 409 017c 1C4B     		ldr	r3, .L20
 410 017e 1B6B     		ldr	r3, [r3, #48]
 317:Src/system_stm32h7xx.c ****         break;
 411              		.loc 1 317 69 view .LVU136
 412 0180 C3F30803 		ubfx	r3, r3, #0, #9
 317:Src/system_stm32h7xx.c ****         break;
 413              		.loc 1 317 60 view .LVU137
 414 0184 07EE103A 		vmov	s14, r3	@ int
 415 0188 B8EE477A 		vcvt.f32.u32	s14, s14
 317:Src/system_stm32h7xx.c ****         break;
 416              		.loc 1 317 122 view .LVU138
 417 018c 9FED206A 		vldr.32	s12, .L20+32
 418 0190 67EE867A 		vmul.f32	s15, s15, s12
 419              	.LVL18:
 317:Src/system_stm32h7xx.c ****         break;
 420              		.loc 1 317 113 view .LVU139
 421 0194 77EE277A 		vadd.f32	s15, s14, s15
 317:Src/system_stm32h7xx.c ****         break;
 422              		.loc 1 317 140 view .LVU140
 423 0198 B7EE007A 		vmov.f32	s14, #1.0e+0
 424 019c 77EE877A 		vadd.f32	s15, s15, s14
 317:Src/system_stm32h7xx.c ****         break;
 425              		.loc 1 317 18 view .LVU141
 426 01a0 66EEA76A 		vmul.f32	s13, s13, s15
 427              	.LVL19:
 318:Src/system_stm32h7xx.c **** 
 428              		.loc 1 318 9 is_stmt 1 view .LVU142
 429 01a4 D1E7     		b	.L17
 430              	.LVL20:
 431              	.L15:
 321:Src/system_stm32h7xx.c ****         break;
 432              		.loc 1 321 11 view .LVU143
 321:Src/system_stm32h7xx.c ****         break;
 433              		.loc 1 321 42 is_stmt 0 view .LVU144
ARM GAS  /tmp/ccAzqaAP.s 			page 16


 434 01a6 07EE104A 		vmov	s14, r4	@ int
 435 01aa B8EE477A 		vcvt.f32.u32	s14, s14
 321:Src/system_stm32h7xx.c ****         break;
 436              		.loc 1 321 40 view .LVU145
 437 01ae 9FED196A 		vldr.32	s12, .L20+36
 438 01b2 C6EE076A 		vdiv.f32	s13, s12, s14
 321:Src/system_stm32h7xx.c ****         break;
 439              		.loc 1 321 83 view .LVU146
 440 01b6 0E4B     		ldr	r3, .L20
 441 01b8 1B6B     		ldr	r3, [r3, #48]
 321:Src/system_stm32h7xx.c ****         break;
 442              		.loc 1 321 69 view .LVU147
 443 01ba C3F30803 		ubfx	r3, r3, #0, #9
 321:Src/system_stm32h7xx.c ****         break;
 444              		.loc 1 321 60 view .LVU148
 445 01be 07EE103A 		vmov	s14, r3	@ int
 446 01c2 B8EE477A 		vcvt.f32.u32	s14, s14
 321:Src/system_stm32h7xx.c ****         break;
 447              		.loc 1 321 122 view .LVU149
 448 01c6 9FED126A 		vldr.32	s12, .L20+32
 449 01ca 67EE867A 		vmul.f32	s15, s15, s12
 450              	.LVL21:
 321:Src/system_stm32h7xx.c ****         break;
 451              		.loc 1 321 113 view .LVU150
 452 01ce 77EE277A 		vadd.f32	s15, s14, s15
 321:Src/system_stm32h7xx.c ****         break;
 453              		.loc 1 321 140 view .LVU151
 454 01d2 B7EE007A 		vmov.f32	s14, #1.0e+0
 455 01d6 77EE877A 		vadd.f32	s15, s15, s14
 321:Src/system_stm32h7xx.c ****         break;
 456              		.loc 1 321 18 view .LVU152
 457 01da 66EEA76A 		vmul.f32	s13, s13, s15
 458              	.LVL22:
 322:Src/system_stm32h7xx.c **** 
 459              		.loc 1 322 9 is_stmt 1 view .LVU153
 460 01de B4E7     		b	.L17
 461              	.LVL23:
 462              	.L13:
 333:Src/system_stm32h7xx.c ****     }
 463              		.loc 1 333 7 view .LVU154
 333:Src/system_stm32h7xx.c ****     }
 464              		.loc 1 333 23 is_stmt 0 view .LVU155
 465 01e0 054B     		ldr	r3, .L20+8
 466 01e2 0022     		movs	r2, #0
 467 01e4 1A60     		str	r2, [r3]
 468 01e6 36E7     		b	.L12
 469              	.LVL24:
 470              	.L6:
 338:Src/system_stm32h7xx.c ****     break;
 471              		.loc 1 338 5 is_stmt 1 view .LVU156
 338:Src/system_stm32h7xx.c ****     break;
 472              		.loc 1 338 21 is_stmt 0 view .LVU157
 473 01e8 034B     		ldr	r3, .L20+8
 474 01ea 064A     		ldr	r2, .L20+20
 475 01ec 1A60     		str	r2, [r3]
 339:Src/system_stm32h7xx.c ****   }
 476              		.loc 1 339 5 is_stmt 1 view .LVU158
ARM GAS  /tmp/ccAzqaAP.s 			page 17


 477 01ee 32E7     		b	.L12
 478              	.L21:
 479              		.align	2
 480              	.L20:
 481 01f0 00440258 		.word	1476543488
 482 01f4 0090D003 		.word	64000000
 483 01f8 00000000 		.word	.LANCHOR0
 484 01fc 00000000 		.word	.LANCHOR1
 485 0200 00000000 		.word	.LANCHOR2
 486 0204 00093D00 		.word	4000000
 487 0208 00127A00 		.word	8000000
 488 020c 0024744A 		.word	1249125376
 489 0210 00000039 		.word	956301312
 490 0214 0024F44A 		.word	1257513984
 491              		.cfi_endproc
 492              	.LFE142:
 494              		.global	D1CorePrescTable
 495              		.global	SystemD2Clock
 496              		.global	SystemCoreClock
 497              		.section	.data.SystemCoreClock,"aw"
 498              		.align	2
 499              		.set	.LANCHOR0,. + 0
 502              	SystemCoreClock:
 503 0000 0090D003 		.word	64000000
 504              		.section	.data.SystemD2Clock,"aw"
 505              		.align	2
 506              		.set	.LANCHOR2,. + 0
 509              	SystemD2Clock:
 510 0000 0090D003 		.word	64000000
 511              		.section	.rodata.D1CorePrescTable,"a"
 512              		.align	2
 513              		.set	.LANCHOR1,. + 0
 516              	D1CorePrescTable:
 517 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004\001\002\003\004\006"
 517      01020304 
 517      01020304 
 517      06
 518 000d 070809   		.ascii	"\007\010\011"
 519              		.text
 520              	.Letext0:
 521              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 522              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 523              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 524              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 525              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 526              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 527              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 528              		.file 9 "/usr/lib/gcc/arm-none-eabi/9.1.0/include/stddef.h"
 529              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 530              		.file 11 "/usr/arm-none-eabi/include/math.h"
 531              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 532              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 533              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/ccAzqaAP.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32h7xx.c
     /tmp/ccAzqaAP.s:17     .text.SystemInit:0000000000000000 $t
     /tmp/ccAzqaAP.s:25     .text.SystemInit:0000000000000000 SystemInit
     /tmp/ccAzqaAP.s:122    .text.SystemInit:0000000000000064 $d
     /tmp/ccAzqaAP.s:132    .text.SystemCoreClockUpdate:0000000000000000 $t
     /tmp/ccAzqaAP.s:139    .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
     /tmp/ccAzqaAP.s:162    .text.SystemCoreClockUpdate:0000000000000014 $d
     /tmp/ccAzqaAP.s:187    .text.SystemCoreClockUpdate:0000000000000046 $t
     /tmp/ccAzqaAP.s:481    .text.SystemCoreClockUpdate:00000000000001f0 $d
     /tmp/ccAzqaAP.s:516    .rodata.D1CorePrescTable:0000000000000000 D1CorePrescTable
     /tmp/ccAzqaAP.s:509    .data.SystemD2Clock:0000000000000000 SystemD2Clock
     /tmp/ccAzqaAP.s:502    .data.SystemCoreClock:0000000000000000 SystemCoreClock
     /tmp/ccAzqaAP.s:498    .data.SystemCoreClock:0000000000000000 $d
     /tmp/ccAzqaAP.s:505    .data.SystemD2Clock:0000000000000000 $d
     /tmp/ccAzqaAP.s:512    .rodata.D1CorePrescTable:0000000000000000 $d

NO UNDEFINED SYMBOLS
