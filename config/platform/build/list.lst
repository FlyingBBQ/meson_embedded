ARM GAS  /tmp/ccFiRPCV.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"list.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.vListInitialise,"ax",%progbits
  17              		.align	1
  18              		.global	vListInitialise
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	vListInitialise:
  26              	.LVL0:
  27              	.LFB4:
  28              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/list.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * FreeRTOS Kernel V10.0.1
   3:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/list.c **** #include <stdlib.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/list.c **** #include "FreeRTOS.h"
ARM GAS  /tmp/ccFiRPCV.s 			page 2


  31:Middlewares/Third_Party/FreeRTOS/Source/list.c **** #include "list.h"
  32:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  33:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------
  34:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * PUBLIC LIST API documented in list.h
  35:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  *----------------------------------------------------------*/
  36:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  37:Middlewares/Third_Party/FreeRTOS/Source/list.c **** void vListInitialise( List_t * const pxList )
  38:Middlewares/Third_Party/FreeRTOS/Source/list.c **** {
  29              		.loc 1 38 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  39:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* The list structure contains a list item which is used to mark the
  40:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	end of the list.  To initialise the list the list end is inserted
  41:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	as the only list entry. */
  42:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 The mini list struc
  34              		.loc 1 42 2 view .LVU1
  35              		.loc 1 42 37 is_stmt 0 view .LVU2
  36 0000 00F10803 		add	r3, r0, #8
  37              		.loc 1 42 18 view .LVU3
  38 0004 4360     		str	r3, [r0, #4]
  43:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  44:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* The list end value is the highest possible value in the list to
  45:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	ensure it remains at the end of the list. */
  46:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxList->xListEnd.xItemValue = portMAX_DELAY;
  39              		.loc 1 46 2 is_stmt 1 view .LVU4
  40              		.loc 1 46 30 is_stmt 0 view .LVU5
  41 0006 4FF0FF32 		mov	r2, #-1
  42 000a 8260     		str	r2, [r0, #8]
  47:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  48:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* The list end next and previous pointers point to itself so we know
  49:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	when the list is empty. */
  50:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 The mini list
  43              		.loc 1 50 2 is_stmt 1 view .LVU6
  44              		.loc 1 50 26 is_stmt 0 view .LVU7
  45 000c C360     		str	r3, [r0, #12]
  51:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 The mini l
  46              		.loc 1 51 2 is_stmt 1 view .LVU8
  47              		.loc 1 51 30 is_stmt 0 view .LVU9
  48 000e 0361     		str	r3, [r0, #16]
  52:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  53:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
  49              		.loc 1 53 2 is_stmt 1 view .LVU10
  50              		.loc 1 53 26 is_stmt 0 view .LVU11
  51 0010 0023     		movs	r3, #0
  52 0012 0360     		str	r3, [r0]
  54:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Write known values into the list if
  56:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
  57:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
  53              		.loc 1 57 48 is_stmt 1 view .LVU12
  58:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
  54              		.loc 1 58 48 view .LVU13
  59:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
  55              		.loc 1 59 1 is_stmt 0 view .LVU14
  56 0014 7047     		bx	lr
ARM GAS  /tmp/ccFiRPCV.s 			page 3


  57              		.cfi_endproc
  58              	.LFE4:
  60              		.section	.text.vListInitialiseItem,"ax",%progbits
  61              		.align	1
  62              		.global	vListInitialiseItem
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  66              		.fpu fpv5-d16
  68              	vListInitialiseItem:
  69              	.LVL1:
  70              	.LFB5:
  60:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
  61:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  62:Middlewares/Third_Party/FreeRTOS/Source/list.c **** void vListInitialiseItem( ListItem_t * const pxItem )
  63:Middlewares/Third_Party/FreeRTOS/Source/list.c **** {
  71              		.loc 1 63 1 is_stmt 1 view -0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  75              		@ link register save eliminated.
  64:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Make sure the list item is not recorded as being on a list. */
  65:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxItem->pvContainer = NULL;
  76              		.loc 1 65 2 view .LVU16
  77              		.loc 1 65 22 is_stmt 0 view .LVU17
  78 0000 0023     		movs	r3, #0
  79 0002 0361     		str	r3, [r0, #16]
  66:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Write known values into the list item if
  68:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
  69:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
  80              		.loc 1 69 57 is_stmt 1 view .LVU18
  70:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
  81              		.loc 1 70 58 view .LVU19
  71:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
  82              		.loc 1 71 1 is_stmt 0 view .LVU20
  83 0004 7047     		bx	lr
  84              		.cfi_endproc
  85              	.LFE5:
  87              		.section	.text.vListInsertEnd,"ax",%progbits
  88              		.align	1
  89              		.global	vListInsertEnd
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu fpv5-d16
  95              	vListInsertEnd:
  96              	.LVL2:
  97              	.LFB6:
  72:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
  73:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  74:Middlewares/Third_Party/FreeRTOS/Source/list.c **** void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
  75:Middlewares/Third_Party/FreeRTOS/Source/list.c **** {
  98              		.loc 1 75 1 is_stmt 1 view -0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccFiRPCV.s 			page 4


 102              		@ link register save eliminated.
  76:Middlewares/Third_Party/FreeRTOS/Source/list.c **** ListItem_t * const pxIndex = pxList->pxIndex;
 103              		.loc 1 76 1 view .LVU22
 104              		.loc 1 76 20 is_stmt 0 view .LVU23
 105 0000 4368     		ldr	r3, [r0, #4]
 106              	.LVL3:
  77:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Only effective when configASSERT() is also defined, these tests may catch
  79:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	the list data structures being overwritten in memory.  They will not catch
  80:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	data errors caused by incorrect configuration or use of FreeRTOS. */
  81:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listTEST_LIST_INTEGRITY( pxList );
 107              		.loc 1 81 35 is_stmt 1 view .LVU24
  82:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );
 108              		.loc 1 82 47 view .LVU25
  83:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  84:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Insert a new list item into pxList, but rather than sort the list,
  85:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	makes the new list item the last item to be removed by a call to
  86:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listGET_OWNER_OF_NEXT_ENTRY(). */
  87:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxNext = pxIndex;
 109              		.loc 1 87 2 view .LVU26
 110              		.loc 1 87 24 is_stmt 0 view .LVU27
 111 0002 4B60     		str	r3, [r1, #4]
  88:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 112              		.loc 1 88 2 is_stmt 1 view .LVU28
 113              		.loc 1 88 37 is_stmt 0 view .LVU29
 114 0004 9A68     		ldr	r2, [r3, #8]
 115              		.loc 1 88 28 view .LVU30
 116 0006 8A60     		str	r2, [r1, #8]
  89:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Only used during decision coverage testing. */
  91:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	mtCOVERAGE_TEST_DELAY();
 117              		.loc 1 91 25 is_stmt 1 view .LVU31
  92:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  93:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxIndex->pxPrevious->pxNext = pxNewListItem;
 118              		.loc 1 93 2 view .LVU32
 119              		.loc 1 93 30 is_stmt 0 view .LVU33
 120 0008 5160     		str	r1, [r2, #4]
  94:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxIndex->pxPrevious = pxNewListItem;
 121              		.loc 1 94 2 is_stmt 1 view .LVU34
 122              		.loc 1 94 22 is_stmt 0 view .LVU35
 123 000a 9960     		str	r1, [r3, #8]
  95:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Remember which list the item is in. */
  97:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pvContainer = ( void * ) pxList;
 124              		.loc 1 97 2 is_stmt 1 view .LVU36
 125              		.loc 1 97 29 is_stmt 0 view .LVU37
 126 000c 0861     		str	r0, [r1, #16]
  98:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  99:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	( pxList->uxNumberOfItems )++;
 127              		.loc 1 99 2 is_stmt 1 view .LVU38
 128              		.loc 1 99 10 is_stmt 0 view .LVU39
 129 000e 0368     		ldr	r3, [r0]
 130              	.LVL4:
 131              		.loc 1 99 29 view .LVU40
 132 0010 0133     		adds	r3, r3, #1
 133 0012 0360     		str	r3, [r0]
 100:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
ARM GAS  /tmp/ccFiRPCV.s 			page 5


 134              		.loc 1 100 1 view .LVU41
 135 0014 7047     		bx	lr
 136              		.cfi_endproc
 137              	.LFE6:
 139              		.section	.text.vListInsert,"ax",%progbits
 140              		.align	1
 141              		.global	vListInsert
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv5-d16
 147              	vListInsert:
 148              	.LVL5:
 149              	.LFB7:
 101:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
 102:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 103:Middlewares/Third_Party/FreeRTOS/Source/list.c **** void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
 104:Middlewares/Third_Party/FreeRTOS/Source/list.c **** {
 150              		.loc 1 104 1 is_stmt 1 view -0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 155              		.loc 1 104 1 is_stmt 0 view .LVU43
 156 0000 30B4     		push	{r4, r5}
 157              	.LCFI0:
 158              		.cfi_def_cfa_offset 8
 159              		.cfi_offset 4, -8
 160              		.cfi_offset 5, -4
 105:Middlewares/Third_Party/FreeRTOS/Source/list.c **** ListItem_t *pxIterator;
 161              		.loc 1 105 1 is_stmt 1 view .LVU44
 106:Middlewares/Third_Party/FreeRTOS/Source/list.c **** const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 162              		.loc 1 106 1 view .LVU45
 163              		.loc 1 106 18 is_stmt 0 view .LVU46
 164 0002 0D68     		ldr	r5, [r1]
 165              	.LVL6:
 107:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Only effective when configASSERT() is also defined, these tests may catch
 109:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	the list data structures being overwritten in memory.  They will not catch
 110:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	data errors caused by incorrect configuration or use of FreeRTOS. */
 111:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listTEST_LIST_INTEGRITY( pxList );
 166              		.loc 1 111 35 is_stmt 1 view .LVU47
 112:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );
 167              		.loc 1 112 47 view .LVU48
 113:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 114:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Insert the new list item into the list, sorted in xItemValue order.
 115:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 116:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	If the list already contains a list item with the same item value then the
 117:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	new list item should be placed after it.  This ensures that TCB's which are
 118:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	stored in ready lists (all of which have the same xItemValue value) get a
 119:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	share of the CPU.  However, if the xItemValue is the same as the back marker
 120:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	the iteration loop below will not end.  Therefore the value is checked
 121:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	first, and the algorithm slightly modified if necessary. */
 122:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	if( xValueOfInsertion == portMAX_DELAY )
 168              		.loc 1 122 2 view .LVU49
 169              		.loc 1 122 4 is_stmt 0 view .LVU50
 170 0004 B5F1FF3F 		cmp	r5, #-1
ARM GAS  /tmp/ccFiRPCV.s 			page 6


 171 0008 11D0     		beq	.L9
 123:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	{
 124:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		pxIterator = pxList->xListEnd.pxPrevious;
 125:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 126:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	else
 127:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	{
 128:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		/* *** NOTE ***********************************************************
 129:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		If you find your application is crashing here then likely causes are
 130:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		listed below.  In addition see http://www.freertos.org/FAQHelp.html for
 131:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		more tips, and ensure configASSERT() is defined!
 132:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		http://www.freertos.org/a00110.html#configASSERT
 133:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			1) Stack overflow -
 135:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   see http://www.freertos.org/Stacks-and-stack-overflow-checking.html
 136:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			2) Incorrect interrupt priority assignment, especially on Cortex-M
 137:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   parts where numerically high priority values denote low actual
 138:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   interrupt priorities, which can seem counter intuitive.  See
 139:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   http://www.freertos.org/RTOS-Cortex-M3-M4.html and the definition
 140:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   of configMAX_SYSCALL_INTERRUPT_PRIORITY on
 141:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   http://www.freertos.org/a00110.html
 142:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			3) Calling an API function from within a critical section or when
 143:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   the scheduler is suspended, or calling an API function that does
 144:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   not end in "FromISR" from an interrupt.
 145:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			4) Using a queue or semaphore before it has been initialised or
 146:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   before the scheduler has been started (are interrupts firing
 147:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   before vTaskStartScheduler() has been called?).
 148:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		**********************************************************************/
 149:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 150:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValu
 172              		.loc 1 150 3 is_stmt 1 view .LVU51
 173              		.loc 1 150 19 is_stmt 0 view .LVU52
 174 000a 00F10803 		add	r3, r0, #8
 175              	.LVL7:
 176              	.L7:
 177              		.loc 1 150 19 view .LVU53
 178 000e 1C46     		mov	r4, r3
 179              		.loc 1 150 71 discriminator 1 view .LVU54
 180 0010 5B68     		ldr	r3, [r3, #4]
 181              	.LVL8:
 182              		.loc 1 150 79 discriminator 1 view .LVU55
 183 0012 1A68     		ldr	r2, [r3]
 184              		.loc 1 150 3 discriminator 1 view .LVU56
 185 0014 AA42     		cmp	r2, r5
 186 0016 FAD9     		bls	.L7
 187              	.L6:
 151:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		{
 152:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			/* There is nothing to do here, just iterating to the wanted
 153:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			insertion position. */
 154:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		}
 155:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 156:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 157:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxNext = pxIterator->pxNext;
 188              		.loc 1 157 2 is_stmt 1 view .LVU57
 189              		.loc 1 157 36 is_stmt 0 view .LVU58
 190 0018 6368     		ldr	r3, [r4, #4]
 191              		.loc 1 157 24 view .LVU59
 192 001a 4B60     		str	r3, [r1, #4]
ARM GAS  /tmp/ccFiRPCV.s 			page 7


 158:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 193              		.loc 1 158 2 is_stmt 1 view .LVU60
 194              		.loc 1 158 36 is_stmt 0 view .LVU61
 195 001c 9960     		str	r1, [r3, #8]
 159:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxPrevious = pxIterator;
 196              		.loc 1 159 2 is_stmt 1 view .LVU62
 197              		.loc 1 159 28 is_stmt 0 view .LVU63
 198 001e 8C60     		str	r4, [r1, #8]
 160:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxIterator->pxNext = pxNewListItem;
 199              		.loc 1 160 2 is_stmt 1 view .LVU64
 200              		.loc 1 160 21 is_stmt 0 view .LVU65
 201 0020 6160     		str	r1, [r4, #4]
 161:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 162:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Remember which list the item is in.  This allows fast removal of the
 163:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	item later. */
 164:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pvContainer = ( void * ) pxList;
 202              		.loc 1 164 2 is_stmt 1 view .LVU66
 203              		.loc 1 164 29 is_stmt 0 view .LVU67
 204 0022 0861     		str	r0, [r1, #16]
 165:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 166:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	( pxList->uxNumberOfItems )++;
 205              		.loc 1 166 2 is_stmt 1 view .LVU68
 206              		.loc 1 166 10 is_stmt 0 view .LVU69
 207 0024 0368     		ldr	r3, [r0]
 208              		.loc 1 166 29 view .LVU70
 209 0026 0133     		adds	r3, r3, #1
 210 0028 0360     		str	r3, [r0]
 167:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
 211              		.loc 1 167 1 view .LVU71
 212 002a 30BC     		pop	{r4, r5}
 213              	.LCFI1:
 214              		.cfi_remember_state
 215              		.cfi_restore 5
 216              		.cfi_restore 4
 217              		.cfi_def_cfa_offset 0
 218              	.LVL9:
 219              		.loc 1 167 1 view .LVU72
 220 002c 7047     		bx	lr
 221              	.LVL10:
 222              	.L9:
 223              	.LCFI2:
 224              		.cfi_restore_state
 124:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 225              		.loc 1 124 3 is_stmt 1 view .LVU73
 124:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 226              		.loc 1 124 14 is_stmt 0 view .LVU74
 227 002e 0469     		ldr	r4, [r0, #16]
 228              	.LVL11:
 124:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 229              		.loc 1 124 14 view .LVU75
 230 0030 F2E7     		b	.L6
 231              		.cfi_endproc
 232              	.LFE7:
 234              		.section	.text.uxListRemove,"ax",%progbits
 235              		.align	1
 236              		.global	uxListRemove
 237              		.syntax unified
ARM GAS  /tmp/ccFiRPCV.s 			page 8


 238              		.thumb
 239              		.thumb_func
 240              		.fpu fpv5-d16
 242              	uxListRemove:
 243              	.LVL12:
 244              	.LFB8:
 168:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
 169:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 170:Middlewares/Third_Party/FreeRTOS/Source/list.c **** UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
 171:Middlewares/Third_Party/FreeRTOS/Source/list.c **** {
 245              		.loc 1 171 1 is_stmt 1 view -0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              		@ link register save eliminated.
 172:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /* The list item knows which list it is in.  Obtain the list from the list
 173:Middlewares/Third_Party/FreeRTOS/Source/list.c **** item. */
 174:Middlewares/Third_Party/FreeRTOS/Source/list.c **** List_t * const pxList = ( List_t * ) pxItemToRemove->pvContainer;
 250              		.loc 1 174 1 view .LVU77
 251              		.loc 1 174 16 is_stmt 0 view .LVU78
 252 0000 0369     		ldr	r3, [r0, #16]
 253              	.LVL13:
 175:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 176:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 254              		.loc 1 176 2 is_stmt 1 view .LVU79
 255              		.loc 1 176 16 is_stmt 0 view .LVU80
 256 0002 4168     		ldr	r1, [r0, #4]
 257              		.loc 1 176 53 view .LVU81
 258 0004 8268     		ldr	r2, [r0, #8]
 259              		.loc 1 176 37 view .LVU82
 260 0006 8A60     		str	r2, [r1, #8]
 177:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 261              		.loc 1 177 2 is_stmt 1 view .LVU83
 262              		.loc 1 177 53 is_stmt 0 view .LVU84
 263 0008 4168     		ldr	r1, [r0, #4]
 264              		.loc 1 177 37 view .LVU85
 265 000a 5160     		str	r1, [r2, #4]
 178:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 179:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Only used during decision coverage testing. */
 180:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	mtCOVERAGE_TEST_DELAY();
 266              		.loc 1 180 25 is_stmt 1 view .LVU86
 181:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 182:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Make sure the index is left pointing to a valid item. */
 183:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	if( pxList->pxIndex == pxItemToRemove )
 267              		.loc 1 183 2 view .LVU87
 268              		.loc 1 183 12 is_stmt 0 view .LVU88
 269 000c 5A68     		ldr	r2, [r3, #4]
 270              		.loc 1 183 4 view .LVU89
 271 000e 8242     		cmp	r2, r0
 272 0010 06D0     		beq	.L12
 273              	.L11:
 184:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	{
 185:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		pxList->pxIndex = pxItemToRemove->pxPrevious;
 186:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 187:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	else
 188:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	{
 189:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/ccFiRPCV.s 			page 9


 274              		.loc 1 189 27 is_stmt 1 view .LVU90
 190:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 191:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 192:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxItemToRemove->pvContainer = NULL;
 275              		.loc 1 192 2 view .LVU91
 276              		.loc 1 192 30 is_stmt 0 view .LVU92
 277 0012 0022     		movs	r2, #0
 278 0014 0261     		str	r2, [r0, #16]
 193:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	( pxList->uxNumberOfItems )--;
 279              		.loc 1 193 2 is_stmt 1 view .LVU93
 280              		.loc 1 193 10 is_stmt 0 view .LVU94
 281 0016 1A68     		ldr	r2, [r3]
 282              		.loc 1 193 29 view .LVU95
 283 0018 013A     		subs	r2, r2, #1
 284 001a 1A60     		str	r2, [r3]
 194:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	return pxList->uxNumberOfItems;
 285              		.loc 1 195 2 is_stmt 1 view .LVU96
 286              		.loc 1 195 15 is_stmt 0 view .LVU97
 287 001c 1868     		ldr	r0, [r3]
 288              	.LVL14:
 196:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
 289              		.loc 1 196 1 view .LVU98
 290 001e 7047     		bx	lr
 291              	.LVL15:
 292              	.L12:
 185:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 293              		.loc 1 185 3 is_stmt 1 view .LVU99
 185:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 294              		.loc 1 185 35 is_stmt 0 view .LVU100
 295 0020 8268     		ldr	r2, [r0, #8]
 185:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 296              		.loc 1 185 19 view .LVU101
 297 0022 5A60     		str	r2, [r3, #4]
 298 0024 F5E7     		b	.L11
 299              		.cfi_endproc
 300              	.LFE8:
 302              		.text
 303              	.Letext0:
 304              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 305              		.file 3 "/usr/arm-none-eabi/include/sys/lock.h"
 306              		.file 4 "/usr/arm-none-eabi/include/sys/_types.h"
 307              		.file 5 "/usr/lib/gcc/arm-none-eabi/9.1.0/include/stddef.h"
 308              		.file 6 "/usr/arm-none-eabi/include/sys/reent.h"
 309              		.file 7 "/usr/arm-none-eabi/include/stdlib.h"
 310              		.file 8 "/usr/arm-none-eabi/include/sys/_stdint.h"
 311              		.file 9 "Inc/FreeRTOSConfig.h"
 312              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 313              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
ARM GAS  /tmp/ccFiRPCV.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 list.c
     /tmp/ccFiRPCV.s:17     .text.vListInitialise:0000000000000000 $t
     /tmp/ccFiRPCV.s:25     .text.vListInitialise:0000000000000000 vListInitialise
     /tmp/ccFiRPCV.s:61     .text.vListInitialiseItem:0000000000000000 $t
     /tmp/ccFiRPCV.s:68     .text.vListInitialiseItem:0000000000000000 vListInitialiseItem
     /tmp/ccFiRPCV.s:88     .text.vListInsertEnd:0000000000000000 $t
     /tmp/ccFiRPCV.s:95     .text.vListInsertEnd:0000000000000000 vListInsertEnd
     /tmp/ccFiRPCV.s:140    .text.vListInsert:0000000000000000 $t
     /tmp/ccFiRPCV.s:147    .text.vListInsert:0000000000000000 vListInsert
     /tmp/ccFiRPCV.s:235    .text.uxListRemove:0000000000000000 $t
     /tmp/ccFiRPCV.s:242    .text.uxListRemove:0000000000000000 uxListRemove

NO UNDEFINED SYMBOLS
