ARM GAS  /tmp/ccS2M6d9.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_nucleo_144.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.BSP_GetVersion,"ax",%progbits
  17              		.align	1
  18              		.global	BSP_GetVersion
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	BSP_GetVersion:
  26              	.LFB141:
  27              		.file 1 "BSP/stm32h7xx_nucleo_144.c"
   1:BSP/stm32h7xx_nucleo_144.c **** /**
   2:BSP/stm32h7xx_nucleo_144.c ****   ******************************************************************************
   3:BSP/stm32h7xx_nucleo_144.c ****   * @file    stm32h7xx_nucleo_144.c
   4:BSP/stm32h7xx_nucleo_144.c ****   * @author  MCD Application Team
   5:BSP/stm32h7xx_nucleo_144.c ****   * @brief   This file provides set of firmware functions to manage:
   6:BSP/stm32h7xx_nucleo_144.c ****   *          - LEDs and push-button available on STM32H7XX-Nucleo-144 Kit
   7:BSP/stm32h7xx_nucleo_144.c ****   *            from STMicroelectronics
   8:BSP/stm32h7xx_nucleo_144.c ****   *          - LCD, joystick and microSD available on Adafruit 1.8" TFT LCD
   9:BSP/stm32h7xx_nucleo_144.c ****   *            shield (reference ID 802)
  10:BSP/stm32h7xx_nucleo_144.c ****   ******************************************************************************
  11:BSP/stm32h7xx_nucleo_144.c ****   * @attention
  12:BSP/stm32h7xx_nucleo_144.c ****   *
  13:BSP/stm32h7xx_nucleo_144.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  14:BSP/stm32h7xx_nucleo_144.c ****   * All rights reserved.</center></h2>
  15:BSP/stm32h7xx_nucleo_144.c ****   *
  16:BSP/stm32h7xx_nucleo_144.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  17:BSP/stm32h7xx_nucleo_144.c ****   * the "License"; You may not use this file except in compliance with the
  18:BSP/stm32h7xx_nucleo_144.c ****   * License. You may obtain a copy of the License at:
  19:BSP/stm32h7xx_nucleo_144.c ****   *                        opensource.org/licenses/BSD-3-Clause
  20:BSP/stm32h7xx_nucleo_144.c ****   *
  21:BSP/stm32h7xx_nucleo_144.c ****   ******************************************************************************
  22:BSP/stm32h7xx_nucleo_144.c ****   */
  23:BSP/stm32h7xx_nucleo_144.c **** 
  24:BSP/stm32h7xx_nucleo_144.c **** /* Includes ------------------------------------------------------------------*/
  25:BSP/stm32h7xx_nucleo_144.c **** #include "stm32h7xx_nucleo_144.h"
  26:BSP/stm32h7xx_nucleo_144.c **** 
  27:BSP/stm32h7xx_nucleo_144.c **** 
  28:BSP/stm32h7xx_nucleo_144.c **** /** @addtogroup BSP
  29:BSP/stm32h7xx_nucleo_144.c ****   * @{
  30:BSP/stm32h7xx_nucleo_144.c ****   */
  31:BSP/stm32h7xx_nucleo_144.c **** 
ARM GAS  /tmp/ccS2M6d9.s 			page 2


  32:BSP/stm32h7xx_nucleo_144.c **** /** @addtogroup STM32H7xx_NUCLEO_144
  33:BSP/stm32h7xx_nucleo_144.c ****   * @{
  34:BSP/stm32h7xx_nucleo_144.c ****   */
  35:BSP/stm32h7xx_nucleo_144.c **** 
  36:BSP/stm32h7xx_nucleo_144.c **** /** @defgroup STM32H7xx_NUCLEO_144_LOW_LEVEL_Private_TypesDefinitions LOW LEVEL Private Types
  37:BSP/stm32h7xx_nucleo_144.c ****   * @{
  38:BSP/stm32h7xx_nucleo_144.c ****   */
  39:BSP/stm32h7xx_nucleo_144.c **** /**
  40:BSP/stm32h7xx_nucleo_144.c ****   * @}
  41:BSP/stm32h7xx_nucleo_144.c ****   */
  42:BSP/stm32h7xx_nucleo_144.c **** 
  43:BSP/stm32h7xx_nucleo_144.c **** 
  44:BSP/stm32h7xx_nucleo_144.c **** /** @defgroup STM32H7xx_NUCLEO_144_LOW_LEVEL_Private_Defines LOW LEVEL Private Defines
  45:BSP/stm32h7xx_nucleo_144.c ****   * @{
  46:BSP/stm32h7xx_nucleo_144.c ****   */
  47:BSP/stm32h7xx_nucleo_144.c **** 
  48:BSP/stm32h7xx_nucleo_144.c **** /**
  49:BSP/stm32h7xx_nucleo_144.c ****   * @brief STM32H7xx NUCLEO BSP Driver version number V1.3.0
  50:BSP/stm32h7xx_nucleo_144.c ****   */
  51:BSP/stm32h7xx_nucleo_144.c **** #define __STM32H7xx_NUCLEO_BSP_VERSION_MAIN   (0x01) /*!< [31:24] main version */
  52:BSP/stm32h7xx_nucleo_144.c **** #define __STM32H7xx_NUCLEO_BSP_VERSION_SUB1   (0x03) /*!< [23:16] sub1 version */
  53:BSP/stm32h7xx_nucleo_144.c **** #define __STM32H7xx_NUCLEO_BSP_VERSION_SUB2   (0x00) /*!< [15:8]  sub2 version */
  54:BSP/stm32h7xx_nucleo_144.c **** #define __STM32H7xx_NUCLEO_BSP_VERSION_RC     (0x00) /*!< [7:0]  release candidate */
  55:BSP/stm32h7xx_nucleo_144.c **** #define __STM32H7xx_NUCLEO_BSP_VERSION        ((__STM32H7xx_NUCLEO_BSP_VERSION_MAIN << 24)\
  56:BSP/stm32h7xx_nucleo_144.c ****                                              |(__STM32H7xx_NUCLEO_BSP_VERSION_SUB1 << 16)\
  57:BSP/stm32h7xx_nucleo_144.c ****                                              |(__STM32H7xx_NUCLEO_BSP_VERSION_SUB2 << 8 )\
  58:BSP/stm32h7xx_nucleo_144.c ****                                              |(__STM32H7xx_NUCLEO_BSP_VERSION_RC))
  59:BSP/stm32h7xx_nucleo_144.c **** 
  60:BSP/stm32h7xx_nucleo_144.c **** /**
  61:BSP/stm32h7xx_nucleo_144.c ****   * @brief LINK SD Card
  62:BSP/stm32h7xx_nucleo_144.c ****   */
  63:BSP/stm32h7xx_nucleo_144.c **** #define SD_DUMMY_BYTE            0xFF
  64:BSP/stm32h7xx_nucleo_144.c **** #define SD_NO_RESPONSE_EXPECTED  0x80
  65:BSP/stm32h7xx_nucleo_144.c **** 
  66:BSP/stm32h7xx_nucleo_144.c **** /**
  67:BSP/stm32h7xx_nucleo_144.c ****   * @}
  68:BSP/stm32h7xx_nucleo_144.c ****   */
  69:BSP/stm32h7xx_nucleo_144.c **** 
  70:BSP/stm32h7xx_nucleo_144.c **** /** @defgroup STM32H7xx_NUCLEO_144_LOW_LEVEL_Private_Macros LOW LEVEL Private Macros
  71:BSP/stm32h7xx_nucleo_144.c ****   * @{
  72:BSP/stm32h7xx_nucleo_144.c ****   */
  73:BSP/stm32h7xx_nucleo_144.c **** /**
  74:BSP/stm32h7xx_nucleo_144.c ****   * @}
  75:BSP/stm32h7xx_nucleo_144.c ****   */
  76:BSP/stm32h7xx_nucleo_144.c **** 
  77:BSP/stm32h7xx_nucleo_144.c **** /** @defgroup STM32H7xx_NUCLEO_144_LOW_LEVEL_Private_Variables LOW LEVEL Private Variables
  78:BSP/stm32h7xx_nucleo_144.c ****   * @{
  79:BSP/stm32h7xx_nucleo_144.c ****   */
  80:BSP/stm32h7xx_nucleo_144.c **** GPIO_TypeDef* GPIO_PORT[LEDn] = {LED1_GPIO_PORT, LED2_GPIO_PORT, LED3_GPIO_PORT};
  81:BSP/stm32h7xx_nucleo_144.c **** 
  82:BSP/stm32h7xx_nucleo_144.c **** const uint16_t GPIO_PIN[LEDn] = {LED1_PIN, LED2_PIN, LED3_PIN};
  83:BSP/stm32h7xx_nucleo_144.c **** 
  84:BSP/stm32h7xx_nucleo_144.c **** GPIO_TypeDef* BUTTON_PORT[BUTTONn] = {USER_BUTTON_GPIO_PORT};
  85:BSP/stm32h7xx_nucleo_144.c **** const uint16_t BUTTON_PIN[BUTTONn] = {USER_BUTTON_PIN};
  86:BSP/stm32h7xx_nucleo_144.c **** const uint8_t BUTTON_IRQn[BUTTONn] = {USER_BUTTON_EXTI_IRQn};
  87:BSP/stm32h7xx_nucleo_144.c **** 
  88:BSP/stm32h7xx_nucleo_144.c **** /**
ARM GAS  /tmp/ccS2M6d9.s 			page 3


  89:BSP/stm32h7xx_nucleo_144.c ****  * @brief BUS variables
  90:BSP/stm32h7xx_nucleo_144.c ****  */
  91:BSP/stm32h7xx_nucleo_144.c **** 
  92:BSP/stm32h7xx_nucleo_144.c **** #ifdef ADAFRUIT_TFT_JOY_SD_ID802
  93:BSP/stm32h7xx_nucleo_144.c **** #ifdef HAL_SPI_MODULE_ENABLED
  94:BSP/stm32h7xx_nucleo_144.c **** uint32_t SpixTimeout = NUCLEO_SPIx_TIMEOUT_MAX; /*<! Value of Timeout when SPI communication fails 
  95:BSP/stm32h7xx_nucleo_144.c **** static SPI_HandleTypeDef hnucleo_Spi;
  96:BSP/stm32h7xx_nucleo_144.c **** #endif /* HAL_SPI_MODULE_ENABLED */
  97:BSP/stm32h7xx_nucleo_144.c **** 
  98:BSP/stm32h7xx_nucleo_144.c **** #ifdef HAL_ADC_MODULE_ENABLED
  99:BSP/stm32h7xx_nucleo_144.c **** static ADC_HandleTypeDef hnucleo_Adc;
 100:BSP/stm32h7xx_nucleo_144.c **** /* ADC channel configuration structure declaration */
 101:BSP/stm32h7xx_nucleo_144.c **** static ADC_ChannelConfTypeDef sConfig;
 102:BSP/stm32h7xx_nucleo_144.c **** #endif /* HAL_ADC_MODULE_ENABLED */
 103:BSP/stm32h7xx_nucleo_144.c **** #endif /* ADAFRUIT_TFT_JOY_SD_ID802 */
 104:BSP/stm32h7xx_nucleo_144.c **** 
 105:BSP/stm32h7xx_nucleo_144.c **** /**
 106:BSP/stm32h7xx_nucleo_144.c ****   * @}
 107:BSP/stm32h7xx_nucleo_144.c ****   */
 108:BSP/stm32h7xx_nucleo_144.c **** 
 109:BSP/stm32h7xx_nucleo_144.c **** /** @defgroup STM32H7xx_NUCLEO_144_LOW_LEVEL_Private_Functions LOW LEVEL Private Functions
 110:BSP/stm32h7xx_nucleo_144.c ****   * @{
 111:BSP/stm32h7xx_nucleo_144.c ****   */
 112:BSP/stm32h7xx_nucleo_144.c **** #ifdef ADAFRUIT_TFT_JOY_SD_ID802
 113:BSP/stm32h7xx_nucleo_144.c **** 
 114:BSP/stm32h7xx_nucleo_144.c **** #ifdef HAL_SPI_MODULE_ENABLED
 115:BSP/stm32h7xx_nucleo_144.c **** static void       SPIx_Init(void);
 116:BSP/stm32h7xx_nucleo_144.c **** static void       SPIx_MspInit(SPI_HandleTypeDef *hspi);
 117:BSP/stm32h7xx_nucleo_144.c **** static void       SPIx_Write(uint8_t Value);
 118:BSP/stm32h7xx_nucleo_144.c **** static void       SPIx_WriteReadData(const uint8_t *DataIn, uint8_t *DataOut, uint16_t DataLength);
 119:BSP/stm32h7xx_nucleo_144.c **** static void       SPIx_Error(void);
 120:BSP/stm32h7xx_nucleo_144.c **** 
 121:BSP/stm32h7xx_nucleo_144.c **** /* SD IO functions */
 122:BSP/stm32h7xx_nucleo_144.c **** void              SD_IO_Init(void);
 123:BSP/stm32h7xx_nucleo_144.c **** void              SD_IO_CSState(uint8_t state);
 124:BSP/stm32h7xx_nucleo_144.c **** void              SD_IO_WriteReadData(const uint8_t *DataIn, uint8_t *DataOut, uint16_t DataLength)
 125:BSP/stm32h7xx_nucleo_144.c **** uint8_t           SD_IO_WriteByte(uint8_t Data);
 126:BSP/stm32h7xx_nucleo_144.c **** 
 127:BSP/stm32h7xx_nucleo_144.c **** /* LCD IO functions */
 128:BSP/stm32h7xx_nucleo_144.c **** void              LCD_IO_Init(void);
 129:BSP/stm32h7xx_nucleo_144.c **** void              LCD_IO_WriteData(uint8_t Data);
 130:BSP/stm32h7xx_nucleo_144.c **** void              LCD_IO_WriteMultipleData(uint8_t *pData, uint32_t Size);
 131:BSP/stm32h7xx_nucleo_144.c **** void              LCD_IO_WriteReg(uint8_t LCDReg);
 132:BSP/stm32h7xx_nucleo_144.c **** void              LCD_Delay(uint32_t delay);
 133:BSP/stm32h7xx_nucleo_144.c **** #endif /* HAL_SPI_MODULE_ENABLED */
 134:BSP/stm32h7xx_nucleo_144.c **** 
 135:BSP/stm32h7xx_nucleo_144.c **** #ifdef HAL_ADC_MODULE_ENABLED
 136:BSP/stm32h7xx_nucleo_144.c **** static void       ADCx_Init(void);
 137:BSP/stm32h7xx_nucleo_144.c **** static void       ADCx_DeInit(void);
 138:BSP/stm32h7xx_nucleo_144.c **** static void       ADCx_MspInit(ADC_HandleTypeDef *hadc);
 139:BSP/stm32h7xx_nucleo_144.c **** static void       ADCx_MspDeInit(ADC_HandleTypeDef *hadc);
 140:BSP/stm32h7xx_nucleo_144.c **** #endif /* HAL_ADC_MODULE_ENABLED */
 141:BSP/stm32h7xx_nucleo_144.c **** 
 142:BSP/stm32h7xx_nucleo_144.c **** #endif /* ADAFRUIT_TFT_JOY_SD_ID802 */
 143:BSP/stm32h7xx_nucleo_144.c **** 
 144:BSP/stm32h7xx_nucleo_144.c **** /**
 145:BSP/stm32h7xx_nucleo_144.c ****   * @}
ARM GAS  /tmp/ccS2M6d9.s 			page 4


 146:BSP/stm32h7xx_nucleo_144.c ****   */
 147:BSP/stm32h7xx_nucleo_144.c **** 
 148:BSP/stm32h7xx_nucleo_144.c **** /** @addtogroup STM32H7xx_NUCLEO_144_Exported_Functions
 149:BSP/stm32h7xx_nucleo_144.c ****   * @{
 150:BSP/stm32h7xx_nucleo_144.c ****   */
 151:BSP/stm32h7xx_nucleo_144.c **** 
 152:BSP/stm32h7xx_nucleo_144.c **** /**
 153:BSP/stm32h7xx_nucleo_144.c ****   * @brief  This method returns the STM32H7xx NUCLEO BSP Driver revision
 154:BSP/stm32h7xx_nucleo_144.c ****   * @retval version: 0xXYZR (8bits for each decimal, R for RC)
 155:BSP/stm32h7xx_nucleo_144.c ****   */
 156:BSP/stm32h7xx_nucleo_144.c **** uint32_t BSP_GetVersion(void)
 157:BSP/stm32h7xx_nucleo_144.c **** {
  28              		.loc 1 157 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 158:BSP/stm32h7xx_nucleo_144.c ****   return __STM32H7xx_NUCLEO_BSP_VERSION;
  33              		.loc 1 158 3 view .LVU1
 159:BSP/stm32h7xx_nucleo_144.c **** }
  34              		.loc 1 159 1 is_stmt 0 view .LVU2
  35 0000 0048     		ldr	r0, .L2
  36 0002 7047     		bx	lr
  37              	.L3:
  38              		.align	2
  39              	.L2:
  40 0004 00000301 		.word	16973824
  41              		.cfi_endproc
  42              	.LFE141:
  44              		.section	.text.BSP_LED_Init,"ax",%progbits
  45              		.align	1
  46              		.global	BSP_LED_Init
  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  50              		.fpu fpv5-d16
  52              	BSP_LED_Init:
  53              	.LVL0:
  54              	.LFB142:
 160:BSP/stm32h7xx_nucleo_144.c **** 
 161:BSP/stm32h7xx_nucleo_144.c **** /**
 162:BSP/stm32h7xx_nucleo_144.c ****   * @brief  Configures LED GPIO.
 163:BSP/stm32h7xx_nucleo_144.c ****   * @param  Led: Specifies the Led to be configured.
 164:BSP/stm32h7xx_nucleo_144.c ****   *   This parameter can be one of following parameters:
 165:BSP/stm32h7xx_nucleo_144.c ****   *     @arg  LED1
 166:BSP/stm32h7xx_nucleo_144.c ****   *     @arg  LED2
 167:BSP/stm32h7xx_nucleo_144.c ****   *     @arg  LED3
 168:BSP/stm32h7xx_nucleo_144.c ****   * @retval None
 169:BSP/stm32h7xx_nucleo_144.c ****   */
 170:BSP/stm32h7xx_nucleo_144.c **** void BSP_LED_Init(Led_TypeDef Led)
 171:BSP/stm32h7xx_nucleo_144.c **** {
  55              		.loc 1 171 1 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 32
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		.loc 1 171 1 is_stmt 0 view .LVU4
  60 0000 F0B5     		push	{r4, r5, r6, r7, lr}
ARM GAS  /tmp/ccS2M6d9.s 			page 5


  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 20
  63              		.cfi_offset 4, -20
  64              		.cfi_offset 5, -16
  65              		.cfi_offset 6, -12
  66              		.cfi_offset 7, -8
  67              		.cfi_offset 14, -4
  68 0002 89B0     		sub	sp, sp, #36
  69              	.LCFI1:
  70              		.cfi_def_cfa_offset 56
 172:BSP/stm32h7xx_nucleo_144.c ****   GPIO_InitTypeDef  GPIO_InitStruct;
  71              		.loc 1 172 3 is_stmt 1 view .LVU5
 173:BSP/stm32h7xx_nucleo_144.c **** 
 174:BSP/stm32h7xx_nucleo_144.c ****   /* Enable the GPIO_LED Clock */
 175:BSP/stm32h7xx_nucleo_144.c ****   LEDx_GPIO_CLK_ENABLE(Led);
  72              		.loc 1 175 3 view .LVU6
  73              		.loc 1 175 3 view .LVU7
  74 0004 0446     		mov	r4, r0
  75 0006 20BB     		cbnz	r0, .L5
  76              		.loc 1 175 3 discriminator 1 view .LVU8
  77              	.LBB2:
  78              		.loc 1 175 3 discriminator 1 view .LVU9
  79              		.loc 1 175 3 discriminator 1 view .LVU10
  80 0008 194B     		ldr	r3, .L8
  81 000a D3F8E020 		ldr	r2, [r3, #224]
  82 000e 42F00202 		orr	r2, r2, #2
  83 0012 C3F8E020 		str	r2, [r3, #224]
  84              		.loc 1 175 3 discriminator 1 view .LVU11
  85 0016 D3F8E030 		ldr	r3, [r3, #224]
  86 001a 03F00203 		and	r3, r3, #2
  87 001e 0193     		str	r3, [sp, #4]
  88              		.loc 1 175 3 discriminator 1 view .LVU12
  89 0020 019B     		ldr	r3, [sp, #4]
  90              	.L6:
  91              	.LBE2:
 176:BSP/stm32h7xx_nucleo_144.c **** 
 177:BSP/stm32h7xx_nucleo_144.c ****   /* Configure the GPIO_LED pin */
 178:BSP/stm32h7xx_nucleo_144.c ****   GPIO_InitStruct.Pin = GPIO_PIN[Led];
  92              		.loc 1 178 3 view .LVU13
  93              		.loc 1 178 33 is_stmt 0 view .LVU14
  94 0022 144B     		ldr	r3, .L8+4
  95 0024 33F81460 		ldrh	r6, [r3, r4, lsl #1]
  96              		.loc 1 178 23 view .LVU15
  97 0028 0396     		str	r6, [sp, #12]
 179:BSP/stm32h7xx_nucleo_144.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  98              		.loc 1 179 3 is_stmt 1 view .LVU16
  99              		.loc 1 179 24 is_stmt 0 view .LVU17
 100 002a 0123     		movs	r3, #1
 101 002c 0493     		str	r3, [sp, #16]
 180:BSP/stm32h7xx_nucleo_144.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 102              		.loc 1 180 3 is_stmt 1 view .LVU18
 103              		.loc 1 180 24 is_stmt 0 view .LVU19
 104 002e 0027     		movs	r7, #0
 105 0030 0597     		str	r7, [sp, #20]
 181:BSP/stm32h7xx_nucleo_144.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 106              		.loc 1 181 3 is_stmt 1 view .LVU20
 107              		.loc 1 181 25 is_stmt 0 view .LVU21
ARM GAS  /tmp/ccS2M6d9.s 			page 6


 108 0032 0323     		movs	r3, #3
 109 0034 0693     		str	r3, [sp, #24]
 182:BSP/stm32h7xx_nucleo_144.c **** 
 183:BSP/stm32h7xx_nucleo_144.c ****   HAL_GPIO_Init(GPIO_PORT[Led], &GPIO_InitStruct);
 110              		.loc 1 183 3 is_stmt 1 view .LVU22
 111 0036 104D     		ldr	r5, .L8+8
 112 0038 03A9     		add	r1, sp, #12
 113 003a 55F82400 		ldr	r0, [r5, r4, lsl #2]
 114              	.LVL1:
 115              		.loc 1 183 3 is_stmt 0 view .LVU23
 116 003e FFF7FEFF 		bl	HAL_GPIO_Init
 117              	.LVL2:
 184:BSP/stm32h7xx_nucleo_144.c ****   HAL_GPIO_WritePin(GPIO_PORT[Led], GPIO_PIN[Led], GPIO_PIN_RESET);
 118              		.loc 1 184 3 is_stmt 1 view .LVU24
 119 0042 3A46     		mov	r2, r7
 120 0044 3146     		mov	r1, r6
 121 0046 55F82400 		ldr	r0, [r5, r4, lsl #2]
 122 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 123              	.LVL3:
 185:BSP/stm32h7xx_nucleo_144.c **** }
 124              		.loc 1 185 1 is_stmt 0 view .LVU25
 125 004e 09B0     		add	sp, sp, #36
 126              	.LCFI2:
 127              		.cfi_remember_state
 128              		.cfi_def_cfa_offset 20
 129              		@ sp needed
 130 0050 F0BD     		pop	{r4, r5, r6, r7, pc}
 131              	.LVL4:
 132              	.L5:
 133              	.LCFI3:
 134              		.cfi_restore_state
 175:BSP/stm32h7xx_nucleo_144.c **** 
 135              		.loc 1 175 3 is_stmt 1 discriminator 2 view .LVU26
 136              	.LBB3:
 175:BSP/stm32h7xx_nucleo_144.c **** 
 137              		.loc 1 175 3 discriminator 2 view .LVU27
 175:BSP/stm32h7xx_nucleo_144.c **** 
 138              		.loc 1 175 3 discriminator 2 view .LVU28
 139 0052 074B     		ldr	r3, .L8
 140 0054 D3F8E020 		ldr	r2, [r3, #224]
 141 0058 42F00202 		orr	r2, r2, #2
 142 005c C3F8E020 		str	r2, [r3, #224]
 175:BSP/stm32h7xx_nucleo_144.c **** 
 143              		.loc 1 175 3 discriminator 2 view .LVU29
 144 0060 D3F8E030 		ldr	r3, [r3, #224]
 145 0064 03F00203 		and	r3, r3, #2
 146 0068 0293     		str	r3, [sp, #8]
 175:BSP/stm32h7xx_nucleo_144.c **** 
 147              		.loc 1 175 3 discriminator 2 view .LVU30
 148 006a 029B     		ldr	r3, [sp, #8]
 149 006c D9E7     		b	.L6
 150              	.L9:
 151 006e 00BF     		.align	2
 152              	.L8:
 153 0070 00440258 		.word	1476543488
 154 0074 00000000 		.word	.LANCHOR0
 155 0078 00000000 		.word	.LANCHOR1
ARM GAS  /tmp/ccS2M6d9.s 			page 7


 156              	.LBE3:
 157              		.cfi_endproc
 158              	.LFE142:
 160              		.section	.text.BSP_LED_DeInit,"ax",%progbits
 161              		.align	1
 162              		.global	BSP_LED_DeInit
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 166              		.fpu fpv5-d16
 168              	BSP_LED_DeInit:
 169              	.LVL5:
 170              	.LFB143:
 186:BSP/stm32h7xx_nucleo_144.c **** 
 187:BSP/stm32h7xx_nucleo_144.c **** /**
 188:BSP/stm32h7xx_nucleo_144.c ****   * @brief  DeInit LEDs.
 189:BSP/stm32h7xx_nucleo_144.c ****   * @param  Led: LED to be de-init.
 190:BSP/stm32h7xx_nucleo_144.c ****   *   This parameter can be one of the following values:
 191:BSP/stm32h7xx_nucleo_144.c ****   *     @arg  LED1
 192:BSP/stm32h7xx_nucleo_144.c ****   *     @arg  LED2
 193:BSP/stm32h7xx_nucleo_144.c ****   *     @arg  LED3
 194:BSP/stm32h7xx_nucleo_144.c ****   * @note Led DeInit does not disable the GPIO clock nor disable the Mfx
 195:BSP/stm32h7xx_nucleo_144.c ****   * @retval None
 196:BSP/stm32h7xx_nucleo_144.c ****   */
 197:BSP/stm32h7xx_nucleo_144.c **** void BSP_LED_DeInit(Led_TypeDef Led)
 198:BSP/stm32h7xx_nucleo_144.c **** {
 171              		.loc 1 198 1 view -0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              		.loc 1 198 1 is_stmt 0 view .LVU32
 176 0000 70B5     		push	{r4, r5, r6, lr}
 177              	.LCFI4:
 178              		.cfi_def_cfa_offset 16
 179              		.cfi_offset 4, -16
 180              		.cfi_offset 5, -12
 181              		.cfi_offset 6, -8
 182              		.cfi_offset 14, -4
 183 0002 0446     		mov	r4, r0
 199:BSP/stm32h7xx_nucleo_144.c ****   GPIO_InitTypeDef  gpio_init_structure;
 184              		.loc 1 199 3 is_stmt 1 view .LVU33
 200:BSP/stm32h7xx_nucleo_144.c **** 
 201:BSP/stm32h7xx_nucleo_144.c ****   /* Turn off LED */
 202:BSP/stm32h7xx_nucleo_144.c ****   HAL_GPIO_WritePin(GPIO_PORT[Led], GPIO_PIN[Led], GPIO_PIN_RESET);
 185              		.loc 1 202 3 view .LVU34
 186 0004 074B     		ldr	r3, .L12
 187 0006 33F81060 		ldrh	r6, [r3, r0, lsl #1]
 188 000a 074D     		ldr	r5, .L12+4
 189 000c 0022     		movs	r2, #0
 190 000e 3146     		mov	r1, r6
 191 0010 55F82000 		ldr	r0, [r5, r0, lsl #2]
 192              	.LVL6:
 193              		.loc 1 202 3 is_stmt 0 view .LVU35
 194 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 195              	.LVL7:
 203:BSP/stm32h7xx_nucleo_144.c ****   /* DeInit the GPIO_LED pin */
 204:BSP/stm32h7xx_nucleo_144.c ****   gpio_init_structure.Pin = GPIO_PIN[Led];
ARM GAS  /tmp/ccS2M6d9.s 			page 8


 196              		.loc 1 204 3 is_stmt 1 view .LVU36
 205:BSP/stm32h7xx_nucleo_144.c ****   HAL_GPIO_DeInit(GPIO_PORT[Led], gpio_init_structure.Pin);
 197              		.loc 1 205 3 view .LVU37
 198 0018 3146     		mov	r1, r6
 199 001a 55F82400 		ldr	r0, [r5, r4, lsl #2]
 200 001e FFF7FEFF 		bl	HAL_GPIO_DeInit
 201              	.LVL8:
 206:BSP/stm32h7xx_nucleo_144.c **** }
 202              		.loc 1 206 1 is_stmt 0 view .LVU38
 203 0022 70BD     		pop	{r4, r5, r6, pc}
 204              	.L13:
 205              		.align	2
 206              	.L12:
 207 0024 00000000 		.word	.LANCHOR0
 208 0028 00000000 		.word	.LANCHOR1
 209              		.cfi_endproc
 210              	.LFE143:
 212              		.section	.text.BSP_LED_On,"ax",%progbits
 213              		.align	1
 214              		.global	BSP_LED_On
 215              		.syntax unified
 216              		.thumb
 217              		.thumb_func
 218              		.fpu fpv5-d16
 220              	BSP_LED_On:
 221              	.LVL9:
 222              	.LFB144:
 207:BSP/stm32h7xx_nucleo_144.c **** 
 208:BSP/stm32h7xx_nucleo_144.c **** /**
 209:BSP/stm32h7xx_nucleo_144.c ****   * @brief  Turns selected LED On.
 210:BSP/stm32h7xx_nucleo_144.c ****   * @param  Led: Specifies the Led to be set on.
 211:BSP/stm32h7xx_nucleo_144.c ****   *   This parameter can be one of following parameters:
 212:BSP/stm32h7xx_nucleo_144.c ****   *     @arg LED2
 213:BSP/stm32h7xx_nucleo_144.c ****   * @retval None
 214:BSP/stm32h7xx_nucleo_144.c ****   */
 215:BSP/stm32h7xx_nucleo_144.c **** void BSP_LED_On(Led_TypeDef Led)
 216:BSP/stm32h7xx_nucleo_144.c **** {
 223              		.loc 1 216 1 is_stmt 1 view -0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227              		.loc 1 216 1 is_stmt 0 view .LVU40
 228 0000 08B5     		push	{r3, lr}
 229              	.LCFI5:
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 3, -8
 232              		.cfi_offset 14, -4
 217:BSP/stm32h7xx_nucleo_144.c ****   HAL_GPIO_WritePin(GPIO_PORT[Led], GPIO_PIN[Led], GPIO_PIN_SET);
 233              		.loc 1 217 3 is_stmt 1 view .LVU41
 234 0002 0122     		movs	r2, #1
 235 0004 044B     		ldr	r3, .L16
 236 0006 33F81010 		ldrh	r1, [r3, r0, lsl #1]
 237 000a 044B     		ldr	r3, .L16+4
 238 000c 53F82000 		ldr	r0, [r3, r0, lsl #2]
 239              	.LVL10:
 240              		.loc 1 217 3 is_stmt 0 view .LVU42
 241 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/ccS2M6d9.s 			page 9


 242              	.LVL11:
 218:BSP/stm32h7xx_nucleo_144.c **** }
 243              		.loc 1 218 1 view .LVU43
 244 0014 08BD     		pop	{r3, pc}
 245              	.L17:
 246 0016 00BF     		.align	2
 247              	.L16:
 248 0018 00000000 		.word	.LANCHOR0
 249 001c 00000000 		.word	.LANCHOR1
 250              		.cfi_endproc
 251              	.LFE144:
 253              		.section	.text.BSP_LED_Off,"ax",%progbits
 254              		.align	1
 255              		.global	BSP_LED_Off
 256              		.syntax unified
 257              		.thumb
 258              		.thumb_func
 259              		.fpu fpv5-d16
 261              	BSP_LED_Off:
 262              	.LVL12:
 263              	.LFB145:
 219:BSP/stm32h7xx_nucleo_144.c **** 
 220:BSP/stm32h7xx_nucleo_144.c **** /**
 221:BSP/stm32h7xx_nucleo_144.c ****   * @brief  Turns selected LED Off.
 222:BSP/stm32h7xx_nucleo_144.c ****   * @param  Led: Specifies the Led to be set off.
 223:BSP/stm32h7xx_nucleo_144.c ****   *   This parameter can be one of following parameters:
 224:BSP/stm32h7xx_nucleo_144.c ****   *     @arg  LED1
 225:BSP/stm32h7xx_nucleo_144.c ****   *     @arg  LED2
 226:BSP/stm32h7xx_nucleo_144.c ****   *     @arg  LED3
 227:BSP/stm32h7xx_nucleo_144.c ****   * @retval None
 228:BSP/stm32h7xx_nucleo_144.c ****   */
 229:BSP/stm32h7xx_nucleo_144.c **** void BSP_LED_Off(Led_TypeDef Led)
 230:BSP/stm32h7xx_nucleo_144.c **** {
 264              		.loc 1 230 1 is_stmt 1 view -0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268              		.loc 1 230 1 is_stmt 0 view .LVU45
 269 0000 08B5     		push	{r3, lr}
 270              	.LCFI6:
 271              		.cfi_def_cfa_offset 8
 272              		.cfi_offset 3, -8
 273              		.cfi_offset 14, -4
 231:BSP/stm32h7xx_nucleo_144.c ****   HAL_GPIO_WritePin(GPIO_PORT[Led], GPIO_PIN[Led], GPIO_PIN_RESET);
 274              		.loc 1 231 3 is_stmt 1 view .LVU46
 275 0002 0022     		movs	r2, #0
 276 0004 044B     		ldr	r3, .L20
 277 0006 33F81010 		ldrh	r1, [r3, r0, lsl #1]
 278 000a 044B     		ldr	r3, .L20+4
 279 000c 53F82000 		ldr	r0, [r3, r0, lsl #2]
 280              	.LVL13:
 281              		.loc 1 231 3 is_stmt 0 view .LVU47
 282 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
 283              	.LVL14:
 232:BSP/stm32h7xx_nucleo_144.c **** }
 284              		.loc 1 232 1 view .LVU48
 285 0014 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccS2M6d9.s 			page 10


 286              	.L21:
 287 0016 00BF     		.align	2
 288              	.L20:
 289 0018 00000000 		.word	.LANCHOR0
 290 001c 00000000 		.word	.LANCHOR1
 291              		.cfi_endproc
 292              	.LFE145:
 294              		.section	.text.BSP_LED_Toggle,"ax",%progbits
 295              		.align	1
 296              		.global	BSP_LED_Toggle
 297              		.syntax unified
 298              		.thumb
 299              		.thumb_func
 300              		.fpu fpv5-d16
 302              	BSP_LED_Toggle:
 303              	.LVL15:
 304              	.LFB146:
 233:BSP/stm32h7xx_nucleo_144.c **** 
 234:BSP/stm32h7xx_nucleo_144.c **** /**
 235:BSP/stm32h7xx_nucleo_144.c ****   * @brief  Toggles the selected LED.
 236:BSP/stm32h7xx_nucleo_144.c ****   * @param  Led: Specifies the Led to be toggled.
 237:BSP/stm32h7xx_nucleo_144.c ****   *   This parameter can be one of following parameters:
 238:BSP/stm32h7xx_nucleo_144.c ****   *     @arg  LED1
 239:BSP/stm32h7xx_nucleo_144.c ****   *     @arg  LED2
 240:BSP/stm32h7xx_nucleo_144.c ****   *     @arg  LED3
 241:BSP/stm32h7xx_nucleo_144.c ****   * @retval None
 242:BSP/stm32h7xx_nucleo_144.c ****   */
 243:BSP/stm32h7xx_nucleo_144.c **** void BSP_LED_Toggle(Led_TypeDef Led)
 244:BSP/stm32h7xx_nucleo_144.c **** {
 305              		.loc 1 244 1 is_stmt 1 view -0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              		.loc 1 244 1 is_stmt 0 view .LVU50
 310 0000 08B5     		push	{r3, lr}
 311              	.LCFI7:
 312              		.cfi_def_cfa_offset 8
 313              		.cfi_offset 3, -8
 314              		.cfi_offset 14, -4
 245:BSP/stm32h7xx_nucleo_144.c ****   HAL_GPIO_TogglePin(GPIO_PORT[Led], GPIO_PIN[Led]);
 315              		.loc 1 245 3 is_stmt 1 view .LVU51
 316 0002 044B     		ldr	r3, .L24
 317 0004 33F81010 		ldrh	r1, [r3, r0, lsl #1]
 318 0008 034B     		ldr	r3, .L24+4
 319 000a 53F82000 		ldr	r0, [r3, r0, lsl #2]
 320              	.LVL16:
 321              		.loc 1 245 3 is_stmt 0 view .LVU52
 322 000e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 323              	.LVL17:
 246:BSP/stm32h7xx_nucleo_144.c **** }
 324              		.loc 1 246 1 view .LVU53
 325 0012 08BD     		pop	{r3, pc}
 326              	.L25:
 327              		.align	2
 328              	.L24:
 329 0014 00000000 		.word	.LANCHOR0
 330 0018 00000000 		.word	.LANCHOR1
ARM GAS  /tmp/ccS2M6d9.s 			page 11


 331              		.cfi_endproc
 332              	.LFE146:
 334              		.section	.text.BSP_PB_Init,"ax",%progbits
 335              		.align	1
 336              		.global	BSP_PB_Init
 337              		.syntax unified
 338              		.thumb
 339              		.thumb_func
 340              		.fpu fpv5-d16
 342              	BSP_PB_Init:
 343              	.LVL18:
 344              	.LFB147:
 247:BSP/stm32h7xx_nucleo_144.c **** 
 248:BSP/stm32h7xx_nucleo_144.c **** /**
 249:BSP/stm32h7xx_nucleo_144.c ****   * @brief  Configures Button GPIO and EXTI Line.
 250:BSP/stm32h7xx_nucleo_144.c ****   * @param  Button: Specifies the Button to be configured.
 251:BSP/stm32h7xx_nucleo_144.c ****   *   This parameter should be: BUTTON_USER
 252:BSP/stm32h7xx_nucleo_144.c ****   * @param  ButtonMode: Specifies Button mode.
 253:BSP/stm32h7xx_nucleo_144.c ****   *   This parameter can be one of following parameters:
 254:BSP/stm32h7xx_nucleo_144.c ****   *     @arg BUTTON_MODE_GPIO: Button will be used as simple IO
 255:BSP/stm32h7xx_nucleo_144.c ****   *     @arg BUTTON_MODE_EXTI: Button will be connected to EXTI line with interrupt
 256:BSP/stm32h7xx_nucleo_144.c ****   *                            generation capability
 257:BSP/stm32h7xx_nucleo_144.c ****   * @retval None
 258:BSP/stm32h7xx_nucleo_144.c ****   */
 259:BSP/stm32h7xx_nucleo_144.c **** void BSP_PB_Init(Button_TypeDef Button, ButtonMode_TypeDef ButtonMode)
 260:BSP/stm32h7xx_nucleo_144.c **** {
 345              		.loc 1 260 1 is_stmt 1 view -0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 24
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349              		.loc 1 260 1 is_stmt 0 view .LVU55
 350 0000 30B5     		push	{r4, r5, lr}
 351              	.LCFI8:
 352              		.cfi_def_cfa_offset 12
 353              		.cfi_offset 4, -12
 354              		.cfi_offset 5, -8
 355              		.cfi_offset 14, -4
 356 0002 87B0     		sub	sp, sp, #28
 357              	.LCFI9:
 358              		.cfi_def_cfa_offset 40
 359 0004 0546     		mov	r5, r0
 261:BSP/stm32h7xx_nucleo_144.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 360              		.loc 1 261 3 is_stmt 1 view .LVU56
 262:BSP/stm32h7xx_nucleo_144.c **** 
 263:BSP/stm32h7xx_nucleo_144.c ****   /* Enable the BUTTON Clock */
 264:BSP/stm32h7xx_nucleo_144.c ****   BUTTONx_GPIO_CLK_ENABLE(Button);
 361              		.loc 1 264 3 view .LVU57
 362              	.LBB4:
 363              		.loc 1 264 3 view .LVU58
 364              		.loc 1 264 3 view .LVU59
 365 0006 1C4B     		ldr	r3, .L32
 366 0008 D3F8E020 		ldr	r2, [r3, #224]
 367 000c 42F00402 		orr	r2, r2, #4
 368 0010 C3F8E020 		str	r2, [r3, #224]
 369              		.loc 1 264 3 view .LVU60
 370 0014 D3F8E030 		ldr	r3, [r3, #224]
 371 0018 03F00403 		and	r3, r3, #4
ARM GAS  /tmp/ccS2M6d9.s 			page 12


 372 001c 0093     		str	r3, [sp]
 373              		.loc 1 264 3 view .LVU61
 374 001e 009B     		ldr	r3, [sp]
 375              	.LBE4:
 265:BSP/stm32h7xx_nucleo_144.c **** 
 266:BSP/stm32h7xx_nucleo_144.c ****   if(ButtonMode == BUTTON_MODE_GPIO)
 376              		.loc 1 266 3 view .LVU62
 377              		.loc 1 266 5 is_stmt 0 view .LVU63
 378 0020 0C46     		mov	r4, r1
 379 0022 19B1     		cbz	r1, .L30
 380              	.LVL19:
 381              	.L27:
 267:BSP/stm32h7xx_nucleo_144.c ****   {
 268:BSP/stm32h7xx_nucleo_144.c ****     /* Configure Button pin as input */
 269:BSP/stm32h7xx_nucleo_144.c ****     GPIO_InitStruct.Pin = BUTTON_PIN[Button];
 270:BSP/stm32h7xx_nucleo_144.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 271:BSP/stm32h7xx_nucleo_144.c ****     GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 272:BSP/stm32h7xx_nucleo_144.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 273:BSP/stm32h7xx_nucleo_144.c ****     HAL_GPIO_Init(BUTTON_PORT[Button], &GPIO_InitStruct);
 274:BSP/stm32h7xx_nucleo_144.c ****   }
 275:BSP/stm32h7xx_nucleo_144.c **** 
 276:BSP/stm32h7xx_nucleo_144.c ****   if(ButtonMode == BUTTON_MODE_EXTI)
 382              		.loc 1 276 3 is_stmt 1 view .LVU64
 383              		.loc 1 276 5 is_stmt 0 view .LVU65
 384 0024 012C     		cmp	r4, #1
 385 0026 11D0     		beq	.L31
 386              	.L26:
 277:BSP/stm32h7xx_nucleo_144.c ****   {
 278:BSP/stm32h7xx_nucleo_144.c ****     /* Configure Button pin as input with External interrupt */
 279:BSP/stm32h7xx_nucleo_144.c ****     GPIO_InitStruct.Pin = BUTTON_PIN[Button];
 280:BSP/stm32h7xx_nucleo_144.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 281:BSP/stm32h7xx_nucleo_144.c ****     GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 282:BSP/stm32h7xx_nucleo_144.c ****     HAL_GPIO_Init(BUTTON_PORT[Button], &GPIO_InitStruct);
 283:BSP/stm32h7xx_nucleo_144.c **** 
 284:BSP/stm32h7xx_nucleo_144.c ****     /* Enable and set Button EXTI Interrupt to the lowest priority */
 285:BSP/stm32h7xx_nucleo_144.c ****     HAL_NVIC_SetPriority((IRQn_Type)(BUTTON_IRQn[Button]), 0x0F, 0x00);
 286:BSP/stm32h7xx_nucleo_144.c ****     HAL_NVIC_EnableIRQ((IRQn_Type)(BUTTON_IRQn[Button]));
 287:BSP/stm32h7xx_nucleo_144.c ****   }
 288:BSP/stm32h7xx_nucleo_144.c **** }
 387              		.loc 1 288 1 view .LVU66
 388 0028 07B0     		add	sp, sp, #28
 389              	.LCFI10:
 390              		.cfi_remember_state
 391              		.cfi_def_cfa_offset 12
 392              		@ sp needed
 393 002a 30BD     		pop	{r4, r5, pc}
 394              	.LVL20:
 395              	.L30:
 396              	.LCFI11:
 397              		.cfi_restore_state
 269:BSP/stm32h7xx_nucleo_144.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 398              		.loc 1 269 5 is_stmt 1 view .LVU67
 269:BSP/stm32h7xx_nucleo_144.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 399              		.loc 1 269 25 is_stmt 0 view .LVU68
 400 002c 4FF40053 		mov	r3, #8192
 401 0030 0193     		str	r3, [sp, #4]
 270:BSP/stm32h7xx_nucleo_144.c ****     GPIO_InitStruct.Pull = GPIO_PULLDOWN;
ARM GAS  /tmp/ccS2M6d9.s 			page 13


 402              		.loc 1 270 5 is_stmt 1 view .LVU69
 270:BSP/stm32h7xx_nucleo_144.c ****     GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 403              		.loc 1 270 26 is_stmt 0 view .LVU70
 404 0032 0023     		movs	r3, #0
 405 0034 0293     		str	r3, [sp, #8]
 271:BSP/stm32h7xx_nucleo_144.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 406              		.loc 1 271 5 is_stmt 1 view .LVU71
 271:BSP/stm32h7xx_nucleo_144.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 407              		.loc 1 271 26 is_stmt 0 view .LVU72
 408 0036 0223     		movs	r3, #2
 409 0038 0393     		str	r3, [sp, #12]
 272:BSP/stm32h7xx_nucleo_144.c ****     HAL_GPIO_Init(BUTTON_PORT[Button], &GPIO_InitStruct);
 410              		.loc 1 272 5 is_stmt 1 view .LVU73
 272:BSP/stm32h7xx_nucleo_144.c ****     HAL_GPIO_Init(BUTTON_PORT[Button], &GPIO_InitStruct);
 411              		.loc 1 272 27 is_stmt 0 view .LVU74
 412 003a 0323     		movs	r3, #3
 413 003c 0493     		str	r3, [sp, #16]
 273:BSP/stm32h7xx_nucleo_144.c ****   }
 414              		.loc 1 273 5 is_stmt 1 view .LVU75
 415 003e 01A9     		add	r1, sp, #4
 416              	.LVL21:
 273:BSP/stm32h7xx_nucleo_144.c ****   }
 417              		.loc 1 273 5 is_stmt 0 view .LVU76
 418 0040 0E4B     		ldr	r3, .L32+4
 419 0042 53F82000 		ldr	r0, [r3, r0, lsl #2]
 420              	.LVL22:
 273:BSP/stm32h7xx_nucleo_144.c ****   }
 421              		.loc 1 273 5 view .LVU77
 422 0046 FFF7FEFF 		bl	HAL_GPIO_Init
 423              	.LVL23:
 424 004a EBE7     		b	.L27
 425              	.L31:
 279:BSP/stm32h7xx_nucleo_144.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 426              		.loc 1 279 5 is_stmt 1 view .LVU78
 279:BSP/stm32h7xx_nucleo_144.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 427              		.loc 1 279 25 is_stmt 0 view .LVU79
 428 004c 4FF40053 		mov	r3, #8192
 429 0050 0193     		str	r3, [sp, #4]
 280:BSP/stm32h7xx_nucleo_144.c ****     GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 430              		.loc 1 280 5 is_stmt 1 view .LVU80
 280:BSP/stm32h7xx_nucleo_144.c ****     GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 431              		.loc 1 280 26 is_stmt 0 view .LVU81
 432 0052 0024     		movs	r4, #0
 433 0054 0394     		str	r4, [sp, #12]
 281:BSP/stm32h7xx_nucleo_144.c ****     HAL_GPIO_Init(BUTTON_PORT[Button], &GPIO_InitStruct);
 434              		.loc 1 281 5 is_stmt 1 view .LVU82
 281:BSP/stm32h7xx_nucleo_144.c ****     HAL_GPIO_Init(BUTTON_PORT[Button], &GPIO_InitStruct);
 435              		.loc 1 281 26 is_stmt 0 view .LVU83
 436 0056 0A4B     		ldr	r3, .L32+8
 437 0058 0293     		str	r3, [sp, #8]
 282:BSP/stm32h7xx_nucleo_144.c **** 
 438              		.loc 1 282 5 is_stmt 1 view .LVU84
 439 005a 01A9     		add	r1, sp, #4
 440 005c 074B     		ldr	r3, .L32+4
 441 005e 53F82500 		ldr	r0, [r3, r5, lsl #2]
 442 0062 FFF7FEFF 		bl	HAL_GPIO_Init
 443              	.LVL24:
ARM GAS  /tmp/ccS2M6d9.s 			page 14


 285:BSP/stm32h7xx_nucleo_144.c ****     HAL_NVIC_EnableIRQ((IRQn_Type)(BUTTON_IRQn[Button]));
 444              		.loc 1 285 5 view .LVU85
 445 0066 2246     		mov	r2, r4
 446 0068 0F21     		movs	r1, #15
 447 006a 2820     		movs	r0, #40
 448 006c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 449              	.LVL25:
 286:BSP/stm32h7xx_nucleo_144.c ****   }
 450              		.loc 1 286 5 view .LVU86
 451 0070 2820     		movs	r0, #40
 452 0072 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 453              	.LVL26:
 454              		.loc 1 288 1 is_stmt 0 view .LVU87
 455 0076 D7E7     		b	.L26
 456              	.L33:
 457              		.align	2
 458              	.L32:
 459 0078 00440258 		.word	1476543488
 460 007c 00000000 		.word	.LANCHOR2
 461 0080 00002111 		.word	287375360
 462              		.cfi_endproc
 463              	.LFE147:
 465              		.section	.text.BSP_PB_DeInit,"ax",%progbits
 466              		.align	1
 467              		.global	BSP_PB_DeInit
 468              		.syntax unified
 469              		.thumb
 470              		.thumb_func
 471              		.fpu fpv5-d16
 473              	BSP_PB_DeInit:
 474              	.LVL27:
 475              	.LFB148:
 289:BSP/stm32h7xx_nucleo_144.c **** 
 290:BSP/stm32h7xx_nucleo_144.c **** /**
 291:BSP/stm32h7xx_nucleo_144.c ****   * @brief  Push Button DeInit.
 292:BSP/stm32h7xx_nucleo_144.c ****   * @param  Button: Button to be configured
 293:BSP/stm32h7xx_nucleo_144.c ****   *   This parameter should be: BUTTON_USER
 294:BSP/stm32h7xx_nucleo_144.c ****   * @note PB DeInit does not disable the GPIO clock
 295:BSP/stm32h7xx_nucleo_144.c ****   * @retval None
 296:BSP/stm32h7xx_nucleo_144.c ****   */
 297:BSP/stm32h7xx_nucleo_144.c **** void BSP_PB_DeInit(Button_TypeDef Button)
 298:BSP/stm32h7xx_nucleo_144.c **** {
 476              		.loc 1 298 1 is_stmt 1 view -0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 0
 479              		@ frame_needed = 0, uses_anonymous_args = 0
 480              		.loc 1 298 1 is_stmt 0 view .LVU89
 481 0000 10B5     		push	{r4, lr}
 482              	.LCFI12:
 483              		.cfi_def_cfa_offset 8
 484              		.cfi_offset 4, -8
 485              		.cfi_offset 14, -4
 486 0002 0446     		mov	r4, r0
 299:BSP/stm32h7xx_nucleo_144.c ****     GPIO_InitTypeDef gpio_init_structure;
 487              		.loc 1 299 5 is_stmt 1 view .LVU90
 300:BSP/stm32h7xx_nucleo_144.c **** 
 301:BSP/stm32h7xx_nucleo_144.c ****     gpio_init_structure.Pin = BUTTON_PIN[Button];
ARM GAS  /tmp/ccS2M6d9.s 			page 15


 488              		.loc 1 301 5 view .LVU91
 302:BSP/stm32h7xx_nucleo_144.c ****     HAL_NVIC_DisableIRQ((IRQn_Type)(BUTTON_IRQn[Button]));
 489              		.loc 1 302 5 view .LVU92
 490 0004 2820     		movs	r0, #40
 491              	.LVL28:
 492              		.loc 1 302 5 is_stmt 0 view .LVU93
 493 0006 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 494              	.LVL29:
 303:BSP/stm32h7xx_nucleo_144.c ****     HAL_GPIO_DeInit(BUTTON_PORT[Button], gpio_init_structure.Pin);
 495              		.loc 1 303 5 is_stmt 1 view .LVU94
 496 000a 4FF40051 		mov	r1, #8192
 497 000e 034B     		ldr	r3, .L36
 498 0010 53F82400 		ldr	r0, [r3, r4, lsl #2]
 499 0014 FFF7FEFF 		bl	HAL_GPIO_DeInit
 500              	.LVL30:
 304:BSP/stm32h7xx_nucleo_144.c **** }
 501              		.loc 1 304 1 is_stmt 0 view .LVU95
 502 0018 10BD     		pop	{r4, pc}
 503              	.L37:
 504 001a 00BF     		.align	2
 505              	.L36:
 506 001c 00000000 		.word	.LANCHOR2
 507              		.cfi_endproc
 508              	.LFE148:
 510              		.section	.text.BSP_PB_GetState,"ax",%progbits
 511              		.align	1
 512              		.global	BSP_PB_GetState
 513              		.syntax unified
 514              		.thumb
 515              		.thumb_func
 516              		.fpu fpv5-d16
 518              	BSP_PB_GetState:
 519              	.LVL31:
 520              	.LFB149:
 305:BSP/stm32h7xx_nucleo_144.c **** 
 306:BSP/stm32h7xx_nucleo_144.c **** /**
 307:BSP/stm32h7xx_nucleo_144.c ****   * @brief  Returns the selected Button state.
 308:BSP/stm32h7xx_nucleo_144.c ****   * @param  Button: Specifies the Button to be checked.
 309:BSP/stm32h7xx_nucleo_144.c ****   *   This parameter should be: BUTTON_USER
 310:BSP/stm32h7xx_nucleo_144.c ****   * @retval The Button GPIO pin value.
 311:BSP/stm32h7xx_nucleo_144.c ****   */
 312:BSP/stm32h7xx_nucleo_144.c **** uint32_t BSP_PB_GetState(Button_TypeDef Button)
 313:BSP/stm32h7xx_nucleo_144.c **** {
 521              		.loc 1 313 1 is_stmt 1 view -0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 0, uses_anonymous_args = 0
 525              		.loc 1 313 1 is_stmt 0 view .LVU97
 526 0000 08B5     		push	{r3, lr}
 527              	.LCFI13:
 528              		.cfi_def_cfa_offset 8
 529              		.cfi_offset 3, -8
 530              		.cfi_offset 14, -4
 314:BSP/stm32h7xx_nucleo_144.c ****   return HAL_GPIO_ReadPin(BUTTON_PORT[Button], BUTTON_PIN[Button]);
 531              		.loc 1 314 3 is_stmt 1 view .LVU98
 532              		.loc 1 314 10 is_stmt 0 view .LVU99
 533 0002 4FF40051 		mov	r1, #8192
ARM GAS  /tmp/ccS2M6d9.s 			page 16


 534 0006 034B     		ldr	r3, .L40
 535 0008 53F82000 		ldr	r0, [r3, r0, lsl #2]
 536              	.LVL32:
 537              		.loc 1 314 10 view .LVU100
 538 000c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 539              	.LVL33:
 315:BSP/stm32h7xx_nucleo_144.c **** }
 540              		.loc 1 315 1 view .LVU101
 541 0010 08BD     		pop	{r3, pc}
 542              	.L41:
 543 0012 00BF     		.align	2
 544              	.L40:
 545 0014 00000000 		.word	.LANCHOR2
 546              		.cfi_endproc
 547              	.LFE149:
 549              		.global	BUTTON_IRQn
 550              		.global	BUTTON_PIN
 551              		.global	BUTTON_PORT
 552              		.global	GPIO_PIN
 553              		.global	GPIO_PORT
 554              		.section	.data.BUTTON_PORT,"aw"
 555              		.align	2
 556              		.set	.LANCHOR2,. + 0
 559              	BUTTON_PORT:
 560 0000 00080258 		.word	1476528128
 561              		.section	.data.GPIO_PORT,"aw"
 562              		.align	2
 563              		.set	.LANCHOR1,. + 0
 566              	GPIO_PORT:
 567 0000 00040258 		.word	1476527104
 568 0004 00040258 		.word	1476527104
 569 0008 00040258 		.word	1476527104
 570              		.section	.rodata.BUTTON_IRQn,"a"
 571              		.align	2
 574              	BUTTON_IRQn:
 575 0000 28       		.ascii	"("
 576              		.section	.rodata.BUTTON_PIN,"a"
 577              		.align	2
 580              	BUTTON_PIN:
 581 0000 0020     		.short	8192
 582              		.section	.rodata.GPIO_PIN,"a"
 583              		.align	2
 584              		.set	.LANCHOR0,. + 0
 587              	GPIO_PIN:
 588 0000 0100     		.short	1
 589 0002 8000     		.short	128
 590 0004 0040     		.short	16384
 591              		.text
 592              	.Letext0:
 593              		.file 2 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 594              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 595              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 596              		.file 5 "Drivers/CMSIS/Include/core_cm7.h"
 597              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 598              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 599              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 600              		.file 9 "/usr/lib/gcc/arm-none-eabi/9.1.0/include/stddef.h"
ARM GAS  /tmp/ccS2M6d9.s 			page 17


 601              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 602              		.file 11 "/usr/arm-none-eabi/include/math.h"
 603              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 604              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_gpio.h"
 605              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 606              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 607              		.file 16 "BSP/stm32h7xx_nucleo_144.h"
 608              		.file 17 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_cortex.h"
ARM GAS  /tmp/ccS2M6d9.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_nucleo_144.c
     /tmp/ccS2M6d9.s:17     .text.BSP_GetVersion:0000000000000000 $t
     /tmp/ccS2M6d9.s:25     .text.BSP_GetVersion:0000000000000000 BSP_GetVersion
     /tmp/ccS2M6d9.s:40     .text.BSP_GetVersion:0000000000000004 $d
     /tmp/ccS2M6d9.s:45     .text.BSP_LED_Init:0000000000000000 $t
     /tmp/ccS2M6d9.s:52     .text.BSP_LED_Init:0000000000000000 BSP_LED_Init
     /tmp/ccS2M6d9.s:153    .text.BSP_LED_Init:0000000000000070 $d
     /tmp/ccS2M6d9.s:161    .text.BSP_LED_DeInit:0000000000000000 $t
     /tmp/ccS2M6d9.s:168    .text.BSP_LED_DeInit:0000000000000000 BSP_LED_DeInit
     /tmp/ccS2M6d9.s:207    .text.BSP_LED_DeInit:0000000000000024 $d
     /tmp/ccS2M6d9.s:213    .text.BSP_LED_On:0000000000000000 $t
     /tmp/ccS2M6d9.s:220    .text.BSP_LED_On:0000000000000000 BSP_LED_On
     /tmp/ccS2M6d9.s:248    .text.BSP_LED_On:0000000000000018 $d
     /tmp/ccS2M6d9.s:254    .text.BSP_LED_Off:0000000000000000 $t
     /tmp/ccS2M6d9.s:261    .text.BSP_LED_Off:0000000000000000 BSP_LED_Off
     /tmp/ccS2M6d9.s:289    .text.BSP_LED_Off:0000000000000018 $d
     /tmp/ccS2M6d9.s:295    .text.BSP_LED_Toggle:0000000000000000 $t
     /tmp/ccS2M6d9.s:302    .text.BSP_LED_Toggle:0000000000000000 BSP_LED_Toggle
     /tmp/ccS2M6d9.s:329    .text.BSP_LED_Toggle:0000000000000014 $d
     /tmp/ccS2M6d9.s:335    .text.BSP_PB_Init:0000000000000000 $t
     /tmp/ccS2M6d9.s:342    .text.BSP_PB_Init:0000000000000000 BSP_PB_Init
     /tmp/ccS2M6d9.s:459    .text.BSP_PB_Init:0000000000000078 $d
     /tmp/ccS2M6d9.s:466    .text.BSP_PB_DeInit:0000000000000000 $t
     /tmp/ccS2M6d9.s:473    .text.BSP_PB_DeInit:0000000000000000 BSP_PB_DeInit
     /tmp/ccS2M6d9.s:506    .text.BSP_PB_DeInit:000000000000001c $d
     /tmp/ccS2M6d9.s:511    .text.BSP_PB_GetState:0000000000000000 $t
     /tmp/ccS2M6d9.s:518    .text.BSP_PB_GetState:0000000000000000 BSP_PB_GetState
     /tmp/ccS2M6d9.s:545    .text.BSP_PB_GetState:0000000000000014 $d
     /tmp/ccS2M6d9.s:574    .rodata.BUTTON_IRQn:0000000000000000 BUTTON_IRQn
     /tmp/ccS2M6d9.s:580    .rodata.BUTTON_PIN:0000000000000000 BUTTON_PIN
     /tmp/ccS2M6d9.s:559    .data.BUTTON_PORT:0000000000000000 BUTTON_PORT
     /tmp/ccS2M6d9.s:587    .rodata.GPIO_PIN:0000000000000000 GPIO_PIN
     /tmp/ccS2M6d9.s:566    .data.GPIO_PORT:0000000000000000 GPIO_PORT
     /tmp/ccS2M6d9.s:555    .data.BUTTON_PORT:0000000000000000 $d
     /tmp/ccS2M6d9.s:562    .data.GPIO_PORT:0000000000000000 $d
     /tmp/ccS2M6d9.s:571    .rodata.BUTTON_IRQn:0000000000000000 $d
     /tmp/ccS2M6d9.s:577    .rodata.BUTTON_PIN:0000000000000000 $d
     /tmp/ccS2M6d9.s:583    .rodata.GPIO_PIN:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_GPIO_WritePin
HAL_GPIO_DeInit
HAL_GPIO_TogglePin
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_NVIC_DisableIRQ
HAL_GPIO_ReadPin
